{"version":3,"file":"static/js/79257.15c55947.chunk.js","mappings":"sKAAA,IAAMA,EAAO,SAACC,GAA4B,2BAAhBC,EAAW,iCAAXA,EAAW,kBACnCA,EAAYC,SAAQ,SAAAC,GAClB,GAAmC,oBAAxBH,EAAQG,GACjB,MAAM,IAAIC,MAAM,wBAAD,OAAyBD,EAAU,wBAEpDH,EAAQG,GAAcH,EAAQG,GAAYJ,KAAKC,EACjD,GACF,C,wDCPA,IAAMK,EAAkB,SAACC,EAAUC,EAASC,EAAGC,GAC7C,IAAIC,EACIC,IAA+F,QAA/ED,EAAkB,OAAbJ,QAAkC,IAAbA,OAAsB,EAASA,EAASM,eAA4B,IAAPF,OAAgB,EAASA,EAAGG,OAAS,CAAC,GAA7IF,UACR,EAA2BF,GAAQ,CAAC,EAA5BK,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KACdC,EAASF,EACb,GAAIN,GAAKG,EAAW,CAClB,IAAIM,EAAW,GAAH,OAAMN,EAAS,YAAIJ,GAC3BQ,IACFE,EAAW,GAAH,OAAMA,EAAQ,YAAIF,IAE5BC,EAASR,EAAES,OAAUC,EAAW,CAAEJ,SAAAA,GACpC,CACA,OAAOE,CACT,C,yJCTMG,EAAM,WACV,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,2CAA4CC,EAAAA,EAAAA,GAAYF,KAAM,4CAA6C,IAChHvB,EAAAA,EAAAA,GAAKuB,KAAM,4BACb,CAoBC,OApBA,iDACD,SAA0BG,GACxB,IACMC,EADUD,EAAIE,OACEC,eAAeC,aAAa,qBAClDP,KAAKC,0CAA0CO,KAAKR,KAAKS,OAAOC,OAAOnB,KAAKa,GAC9E,GAAC,2BACD,YAA6D,IACvDhB,EADUsB,EAAM,EAANA,OAAQ1B,EAAQ,EAARA,SAAiB2B,EAAa,EAApBC,MAAsB1B,EAAC,EAADA,EAEtD,GAAuE,QAA3BE,EAAKJ,EAASM,eAA4B,IAAPF,OAAgB,EAASA,EAAGG,OAAS,CAAC,EAAC,IAA9GsB,OAAAA,OAAM,IAAG,KAAE,MAAEC,SAIrB,YAJ6B,IAAG,GAAK,EAEjCD,EAAM,kBACFH,EAAOnB,OAAI,OAAKsB,KACLE,KAAI,SAACH,EAAOR,GAC7B,IAAMY,EAAWJ,IAAUD,EACrBM,GAAQlC,EAAAA,EAAAA,GAAgBC,EAAU4B,EAAO1B,EAAG,CAAEO,KAAM,QAASD,SAAUoB,IAC7E,OAAQM,EAAAA,EAAAA,GAAE,iBAAkB,CAAE,oBAAqBd,EAAOe,IAAKP,EAAOI,SAAUA,EAAUJ,MAAOA,GAASK,EAC5G,GACF,GAAC,oBACD,WACE,OAAQC,EAAAA,EAAAA,GAAE,iBAAkB,CAAEE,SAAUpB,KAAKS,OAAOW,SAAUH,MAAOjB,KAAKS,OAAOC,OAAOW,MAAOC,sBAAuBtB,KAAKuB,2BAA6BvB,KAAKwB,cAAcxB,KAAKS,QAClL,KAAC,EAzBS,E","sources":["../node_modules/@esri/hub-components/dist/esm/context-7d8f7366.js","../node_modules/@esri/hub-components/dist/esm/getLabelForEnum-06916714.js","../node_modules/@esri/hub-components/dist/esm/hub-field-input-select.entry.js"],"sourcesContent":["const bind = (context, ...methodNames) => {\n  methodNames.forEach(methodName => {\n    if (typeof context[methodName] !== 'function') {\n      throw new Error(`Cannot bind context. ${methodName} must be a function`);\n    }\n    context[methodName] = context[methodName].bind(context);\n  });\n};\n\nexport { bind as b };\n","const getLabelForEnum = (uiSchema, enumVal, t, opts) => {\n  var _a;\n  const { i18nScope } = ((_a = uiSchema === null || uiSchema === void 0 ? void 0 : uiSchema.options) === null || _a === void 0 ? void 0 : _a.enum) || {};\n  const { fallback, path } = opts || {};\n  let result = fallback;\n  if (t && i18nScope) {\n    let labelKey = `${i18nScope}.${enumVal}`;\n    if (path) {\n      labelKey = `${labelKey}.${path}`;\n    }\n    result = t(labelKey, undefined, { fallback });\n  }\n  return result;\n};\n\nexport { getLabelForEnum as g };\n","import { r as registerInstance, c as createEvent, h } from './index-0d95d9d4.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { g as getLabelForEnum } from './getLabelForEnum-06916714.js';\n\nconst Select = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisConfigurationEditorFieldInputChange = createEvent(this, \"arcgisConfigurationEditorFieldInputChange\", 7);\n    bind(this, 'handleCalciteSelectChange');\n  }\n  handleCalciteSelectChange(evt) {\n    const element = evt.target;\n    const index = element.selectedOption.getAttribute('data-option-index');\n    this.arcgisConfigurationEditorFieldInputChange.emit(this.params.schema.enum[index]);\n  }\n  renderOptions({ schema, uiSchema, value: selectedValue, t }) {\n    var _a;\n    const { values = [], override = false } = ((_a = uiSchema.options) === null || _a === void 0 ? void 0 : _a.enum) || {};\n    const enumValues = override\n      ? values\n      : [...schema.enum, ...values];\n    return (enumValues.map((value, index) => {\n      const selected = value === selectedValue;\n      const label = getLabelForEnum(uiSchema, value, t, { path: 'label', fallback: value });\n      return (h(\"calcite-option\", { \"data-option-index\": index, key: value, selected: selected, value: value }, label));\n    }));\n  }\n  render() {\n    return (h(\"calcite-select\", { disabled: this.params.disabled, label: this.params.schema.title, onCalciteSelectChange: this.handleCalciteSelectChange }, this.renderOptions(this.params)));\n  }\n};\n\nexport { Select as hub_field_input_select };\n"],"names":["bind","context","methodNames","forEach","methodName","Error","getLabelForEnum","uiSchema","enumVal","t","opts","_a","i18nScope","options","enum","fallback","path","result","labelKey","undefined","Select","hostRef","registerInstance","this","arcgisConfigurationEditorFieldInputChange","createEvent","evt","index","target","selectedOption","getAttribute","emit","params","schema","selectedValue","value","values","override","map","selected","label","h","key","disabled","title","onCalciteSelectChange","handleCalciteSelectChange","renderOptions"],"sourceRoot":""}