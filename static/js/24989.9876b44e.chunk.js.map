{"version":3,"file":"static/js/24989.9876b44e.chunk.js","mappings":"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","sources":["../node_modules/@esri/hub-components/dist/esm/arcgis-hub-discussions_3.entry.js","../node_modules/@esri/hub-components/dist/esm/call-once-194f02c7.js","../node_modules/@esri/hub-components/dist/esm/call-when-744df66d.js","../node_modules/@esri/hub-components/dist/esm/debounce-e9be81f1.js","../node_modules/@esri/hub-components/dist/esm/is-update-group-e7478ed8.js","../node_modules/@esri/hub-components/dist/esm/resize-observer-dc6e269e.js","../node_modules/@esri/hub-components/dist/esm/resources-2625913b.js","../node_modules/@esri/hub-components/dist/esm/utils-b3c19803.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, F as Fragment, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { b as searchPostAggregates, P as PostSort, S as SortOrder, h as fetchSubjectDetails, e as enrichChannelDetails, m as updateChannel, n as enrichPostDetails, u as updateDiscussable, D as DiscussionType, l as isDiscussable } from './discussions-c83a0f6c.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport { d as dist } from './index-910a8794.js';\nimport { R as ResizeObserverManager } from './resize-observer-dc6e269e.js';\nimport { D as DebounceDecoratorFactory } from './debounce-e9be81f1.js';\nimport { c as callOnceFactory } from './call-once-194f02c7.js';\nimport { A as ArcgisHubDiscussionsBlockedNoticeVariant } from './resources-2625913b.js';\nimport { c as cloneObject } from './util-3c40fe6c.js';\nimport { i as includes } from './_internal-89d3dc92.js';\nimport { g as getProp } from './get-prop-d82e4fa6.js';\nimport { i as isUpdateGroup } from './is-update-group-e7478ed8.js';\nimport { C as CallWhenFactory } from './call-when-744df66d.js';\nimport { a as getUserThumbnailUrl, g as getGroupThumbnailUrl } from './utils-b3c19803.js';\nimport './getPortalBaseFromOrgUrl-6a5781aa.js';\nimport './tslib.es6-3669ad41.js';\nimport './get-portal-url-423a76f5.js';\nimport './clean-url-be7c0879.js';\nimport './request-c15cc2af.js';\nimport './get-859a2960.js';\nimport './append-custom-params-fd9b7e72.js';\nimport './get-portal-06f7947b.js';\nimport './query-15c2c6ed.js';\nimport './tslib.es6-b2e8cdb8.js';\nimport './fetch-e59da0af.js';\nimport './tslib.es6-e75776ba.js';\nimport './_enrichments-7716cdcc.js';\nimport './get-with-default-6db049d8.js';\nimport './OperationError-85fd80c7.js';\nimport './get-f2cd18e7.js';\nimport './helpers-a80c0291.js';\nimport './getService-49b539e3.js';\nimport './slugs-150ad0db.js';\nimport './is-guid-8127621d.js';\nimport './request-f9ca03b5.js';\nimport './api-196fe0e3.js';\nimport './get-portal-api-url-ccd8fd10.js';\nimport './compose-bfd77ec4.js';\nimport './get-structured-license-d1e63636.js';\nimport './get-item-thumbnail-url-7e5ae2fd.js';\nimport './get-item-home-url-9ff2898b.js';\nimport './update-fec93fc5.js';\nimport './index-4e91769f.js';\nimport './_commonjsHelpers-11ca3be1.js';\nimport './extent-0f42acfc.js';\nimport './UserSession-d3a97494.js';\n\n/**\n * Checks for fundamental privilege required by all access checks\n * @param {IUser} user\n * @returns {boolean}\n */\nfunction hasBasePriv(user) {\n    const { privileges = [] } = user;\n    return includes(privileges, \"portal:user:createItem\");\n}\n\n/**\n * Checks if user has access to edit an item in Hub\n * @param {IItem} item\n * @param {IUser} user\n * @returns {boolean}\n */\nfunction canEditItem(item, user) {\n    let res = false;\n    const itemControls = [\"admin\", \"update\"];\n    const { itemControl, owner, orgId: itemOrgId } = item;\n    const { roleId, role, username, groups: userGroups, orgId: userOrgId } = user;\n    const hasItemControl = includes(itemControls, itemControl);\n    const isOwner = !!owner && owner === username;\n    const isOrgItem = !!itemOrgId && itemOrgId === userOrgId;\n    const isItemOrgAdmin = !!isOrgItem && !roleId && role === \"org_admin\";\n    const hasPlatformControl = hasItemControl || isOwner || isItemOrgAdmin;\n    const hasPriv = hasBasePriv(user);\n    if (hasPriv && hasPlatformControl) {\n        res = true;\n    }\n    else if (hasPriv) {\n        const itemGroups = [\n            ...(getProp(item, \"groupIds\") || []),\n            getProp(item, \"properties.collaborationGroupId\")\n        ];\n        const isGroupEditable = (group) => isUpdateGroup(group) && includes(itemGroups, group.id);\n        res = userGroups.some(isGroupEditable);\n    }\n    return res;\n}\n\nconst arcgisHubDiscussionsCss = \".sc-arcgis-hub-discussions-h{display:block;height:100%;overflow:auto}section.sc-arcgis-hub-discussions{margin-top:1rem;margin-bottom:1rem;margin-left:0.75rem;margin-right:0.75rem;display:grid;gap:0.75rem;border-radius:0.25rem;padding:0.75rem;--tw-shadow:0 2px 8px 0 rgba(0, 0, 0, 0.12);--tw-shadow-colored:0 2px 8px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}header.sc-arcgis-hub-discussions{margin:0px;font-size:var(--calcite-font-size-1);line-height:1.5rem;font-weight:var(--calcite-font-weight-bold)}p.sc-arcgis-hub-discussions{margin:0px;font-size:var(--calcite-font-size--0);line-height:1.375rem}section.sc-arcgis-hub-discussions calcite-button.sc-arcgis-hub-discussions{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}calcite-button[icon-start=\\\"speech-bubble-plus\\\"].sc-arcgis-hub-discussions{margin-top:1.5rem;margin-bottom:1.5rem;margin-left:1rem;margin-right:1rem;display:block}arcgis-hub-discussions-private-notice.sc-arcgis-hub-discussions,arcgis-hub-discussions-blocked-notice.sc-arcgis-hub-discussions{margin-left:1rem;margin-right:1rem;margin-bottom:1.5rem}.empty.sc-arcgis-hub-discussions arcgis-hub-discussions-private-notice.sc-arcgis-hub-discussions,.empty.sc-arcgis-hub-discussions arcgis-hub-discussions-blocked-notice.sc-arcgis-hub-discussions{margin:0px;margin-top:0.25rem}arcgis-hub-discussions-thread.sc-arcgis-hub-discussions{overflow:hidden;padding-top:1rem;padding-bottom:1rem}arcgis-hub-discussions-post-list.location-list.sc-arcgis-hub-discussions{padding-top:0.25rem;padding-bottom:0.25rem}[data-element=\\\"discussions-options-panel\\\"].sc-arcgis-hub-discussions>div.sc-arcgis-hub-discussions{background-color:var(--calcite-ui-foreground-1);padding:1rem}[data-element=\\\"discussions-options-panel\\\"].sc-arcgis-hub-discussions>div.sc-arcgis-hub-discussions div.sc-arcgis-hub-discussions{display:flex;justify-content:flex-end;padding-top:0.5rem}[data-element=\\\"discussions-options-panel\\\"].sc-arcgis-hub-discussions>div.sc-arcgis-hub-discussions div.sc-arcgis-hub-discussions+calcite-notice.sc-arcgis-hub-discussions{margin-top:1rem;width:100%}.discussions-options.sc-arcgis-hub-discussions:active .discussions-options-icon.sc-arcgis-hub-discussions{--tw-text-opacity:1;color:rgb(21 21 21 / var(--tw-text-opacity))}.discussions-go-to.sc-arcgis-hub-discussions:active .discussions-go-to-icon.sc-arcgis-hub-discussions{--tw-text-opacity:1;color:rgb(21 21 21 / var(--tw-text-opacity))}\";\n\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst ArcgisHubDiscussions = class {\n  /**\n   * Constructor function, pre-binds context to relevant methods\n   */\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubGeometryGoTo = createEvent(this, \"arcgisHubGeometryGoTo\", 7);\n    this.arcgisHubDiscussionsFeature = createEvent(this, \"arcgisHubDiscussionsFeature\", 7);\n    this.arcgisHubDiscussionsFeatureDeleted = createEvent(this, \"arcgisHubDiscussionsFeatureDeleted\", 7);\n    this.arcgisHubGeometryFeatureSelect = createEvent(this, \"arcgisHubGeometryFeatureSelect\", 7);\n    this.arcgisHubGeometryFeatureHover = createEvent(this, \"arcgisHubGeometryFeatureHover\", 7);\n    this.arcgisHubGeometryDrawCreate = createEvent(this, \"arcgisHubGeometryDrawCreate\", 7);\n    this.arcgisHubGeometryDrawTypeSelect = createEvent(this, \"arcgisHubGeometryDrawTypeSelect\", 7);\n    this.arcgisHubGeometryDrawEdit = createEvent(this, \"arcgisHubGeometryDrawEdit\", 7);\n    this.arcgisHubGeometryDrawEditCancel = createEvent(this, \"arcgisHubGeometryDrawEditCancel\", 7);\n    this.arcgisHubGeometryDrawReset = createEvent(this, \"arcgisHubGeometryDrawReset\", 7);\n    this.arcgisHubGeometrySelect = createEvent(this, \"arcgisHubGeometrySelect\", 7);\n    this.arcgisHubGeometryDeselect = createEvent(this, \"arcgisHubGeometryDeselect\", 7);\n    this.arcgisHubDiscussionsViewThread = createEvent(this, \"arcgisHubDiscussionsViewThread\", 7);\n    this.arcgisHubDiscussionsDismiss = createEvent(this, \"arcgisHubDiscussionsDismiss\", 7);\n    this.arcgisHubDiscussionsClose = createEvent(this, \"arcgisHubDiscussionsClose\", 7);\n    this.arcgisHubFeatureRemove = createEvent(this, \"arcgisHubFeatureRemove\", 7);\n    this.arcgisHubGeometryClearAll = createEvent(this, \"arcgisHubGeometryClearAll\", 7);\n    this.hubTelemetry = createEvent(this, \"hubTelemetry\", 7);\n    /**\n     * Features (geometries) unsaved for location updates\n     */\n    this.unsavedFeatures = [];\n    /**\n     * Related Features (ID's of features in associated feature service) unsaved for location updates\n     */\n    this.unsavedRelatedFeatures = [];\n    /**\n     * Feature geometry edits for existing post locations\n     */\n    this.unsavedExistingFeatures = [];\n    /**\n     * Details about the \"subject\" of the discussion, i.e. the IGroup or IHubContent\n     * and whether it's discussable or not\n     */\n    this.discussionDetails = null;\n    /**\n     * Represents if a catastrophic error was encountered that prevents this component\n     * from rendering\n     */\n    this.error = null;\n    /**\n     * Set when an error is encountered while updating discussion options\n     */\n    this.optionsError = null;\n    /**\n     * True while waiting for discussion options requests to complete\n     */\n    this.optionsSaving = false;\n    /**\n     * An IPostAggregate object representing a deep-linked thread or reply, or if the user\n     * organically drilled into a thread from the thread list\n     */\n    this.thread = null;\n    /**\n     * A reference to the previously viewed thread so that we can auto-scroll the user back to\n     * that position when the user navigates back to the thread list from an individual thread\n     */\n    this.previousThread = null;\n    /**\n     * The total number of posts\n     */\n    this.total = 0;\n    /**\n     * The next start value to use when requesting additional posts via the Load More button\n     */\n    this.nextStart = 1;\n    /**\n     * Content needed to render UI is being fetched\n     */\n    this.loading = true;\n    /**\n     * If the user elected to create a new original post\n     */\n    this.showPostEditor = false;\n    /*\n     * If the discussions options\n     */\n    this.showOptions = false;\n    bind(this, 'handleViewAllReplies', 'handleCheckStatus', 'handleResetThread', 'handleSelectThread', 'handleDOMReady', 'handleGeometryGoTo', 'handleNewPost', 'renderLoading', 'renderAddOrCreatePostButton', 'renderEmpty', 'renderPostEditor', 'renderThread', 'renderPostList', 'renderError', 'handleDiscussionOptionsClick', 'handleOptionsBack', 'checkIsMobile', 'handleSaveOptions', 'handleResetOptionsError');\n    this.observer = new MutationObserver(this.handleDOMReady);\n  }\n  /**\n   * Listens for changes to postId and re-initializes discussions\n   * when it changes\n   */\n  handlePostIdChange(postId, prevPostId) {\n    var _a, _b;\n    if (postId && postId !== prevPostId && postId !== ((_b = (_a = this.thread) === null || _a === void 0 ? void 0 : _a.postDetails) === null || _b === void 0 ? void 0 : _b.postId)) {\n      this.reinitialize();\n    }\n  }\n  /**\n   * Listens for changes to replyId and re-initializes discussions\n   * when it changes\n   */\n  handleReplyIdChange(replyId, prevReplyId) {\n    var _a, _b;\n    if (replyId && replyId !== prevReplyId && replyId !== ((_b = (_a = this.thread) === null || _a === void 0 ? void 0 : _a.replyDetails) === null || _b === void 0 ? void 0 : _b.postId)) {\n      this.reinitialize();\n    }\n  }\n  /**\n   * Listens for changes to locationId and re-initializes discussions\n   * when it changes\n   */\n  handleLocationIdChange(locationId, prevLocationId) {\n    if (locationId && locationId !== prevLocationId) {\n      this.reinitialize();\n    }\n  }\n  /**\n   * Component will load lifecycle method, fetches translations and data\n   * needed to render the UI\n   */\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n    // do not await dependencies so loading indicator renders\n    this.initialize();\n  }\n  /**\n   * Component did load lifecycle method, starts observer\n   */\n  componentDidLoad() {\n    this.observe();\n  }\n  /**\n   * Connected callback lifecycle method, starts observer\n   */\n  connectedCallback() {\n    this.observe();\n  }\n  /**\n   * Disconnected callback lifecycle method, ends observing\n   */\n  disconnectedCallback() {\n    this.disconnect();\n  }\n  /**\n   * Fetches data needed to render the UI\n   */\n  async initialize() {\n    const { postId, replyId, locationId, context } = this;\n    this.loading = true;\n    this.error = null;\n    try {\n      if (context === null || context === void 0 ? void 0 : context.currentUser) {\n        this.discussionDetails = await this.fetchSubject();\n        if (postId || replyId) {\n          this.initThread();\n        }\n        else {\n          await this.initPostList();\n        }\n        if (locationId) {\n          this.thread = null;\n          this.enableGoTo = true;\n        }\n      }\n      else {\n        this.resetState();\n      }\n    }\n    catch (error) {\n      console.error(`Failed to load discussions:`, error.message);\n      this.error = error;\n    }\n    finally {\n      this.loading = false;\n    }\n  }\n  reinitialize() {\n    this.initialize();\n  }\n  resetState() {\n    this.thread = null;\n    this.nextStart = -1;\n    this.total = 0;\n    this.error = null;\n    this.loading = false;\n    this.discussionDetails = null;\n    this.postAggregates = null;\n    this.scrollTarget = null;\n    this.optionsError = null;\n    this.optionsSaving = false;\n    this.previousThread = null;\n    this.showPostEditor = null;\n    this.showOptions = null;\n  }\n  /**\n   * Searches for posts starting at the provided start number and optionally appends\n   * the results to the existing postAggregates collection\n   * @param start The search start position\n   * @param appendResults Whether the results should be appended to the existing collection of postAggregates\n   */\n  async searchPostAggregates(start, appendResults) {\n    const { context, discussionDetails: { discussion }, locationId, postAggregates = [] } = this;\n    this.loading = true;\n    const discussionQuery = locationId\n      ? `${discussion}%?id=%${locationId}%`\n      : `${discussion}%`;\n    const { nextStart, items, total } = await searchPostAggregates(Object.assign(Object.assign(Object.assign({ discussion: discussionQuery }, (locationId ? { parents: [] } : { parents: [''] })), { sortBy: PostSort.UPDATED_AT, sortOrder: SortOrder.DESC, start }), context.hubRequestOptions));\n    const updatedThreads = appendResults\n      ? [...postAggregates, ...items]\n      : items;\n    this.postAggregates = updatedThreads;\n    this.nextStart = nextStart;\n    this.total = total;\n    this.loading = false;\n  }\n  /**\n   * Initializes a unenriched thread model for a deep-linked\n   * channelId, postId, and optional replyId\n   */\n  initThread() {\n    const { postId, replyId, channelId } = this;\n    const thread = {\n      channelDetails: { channelId },\n      postDetails: { postId }\n    };\n    if (replyId) {\n      thread.replyDetails = { postId: replyId };\n    }\n    this.thread = thread;\n    this.previousThread = thread;\n  }\n  /**\n   * Fetches postAggregates first page of results for thread list\n   */\n  async initPostList() {\n    try {\n      await this.searchPostAggregates(1);\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.open.label.postList), { response: dist.constants.response.SUCCESS }));\n    }\n    catch (error) {\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.open.label.postList), { response: dist.constants.response.FAILURE }));\n      throw error;\n    }\n  }\n  /**\n   * Fetches details for the subject of the discussion URI, i.e. the IGroup or\n   * IHubContent and whether it's discussable or not\n   */\n  fetchSubject(bust) {\n    const { discussion, context, locationId } = this;\n    return fetchSubjectDetails(Object.assign({ discussion,\n      locationId,\n      bust }, context.hubRequestOptions));\n  }\n  /**\n   * Resets the active thread so the thread list renders\n   */\n  handleResetThread() {\n    const { postAggregates, thread: { channelDetails, postDetails, replyDetails }, arcgisHubDiscussionsViewThread } = this;\n    this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.open.label.thread), { postId: replyDetails === null || replyDetails === void 0 ? void 0 : replyDetails.postId, parentId: postDetails.postId, channelId: channelDetails.channel.id, channelAccess: channelDetails.channel.access }));\n    this.thread = null;\n    if (!postAggregates) {\n      this.searchPostAggregates(1);\n    }\n    arcgisHubDiscussionsViewThread.emit({\n      postId: null,\n      channelId: null\n    });\n  }\n  /**\n   * Starts observer\n   */\n  observe() {\n    const { observer, element } = this;\n    if (observer && element) {\n      observer.observe(element, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n      });\n    }\n    ResizeObserverManager.addHandler(window.document.body, this.checkIsMobile);\n  }\n  /**\n   * Disconnects observer\n   */\n  disconnect() {\n    const { observer } = this;\n    if (observer) {\n      observer.disconnect();\n    }\n    ResizeObserverManager.removeHandler(window.document.body, this.checkIsMobile);\n  }\n  /**\n   * Scrolls to given target when DOM is changed\n   */\n  handleDOMReady() {\n    if (this.scrollTarget) {\n      this.element.scrollTo({\n        behavior: 'smooth',\n        left: this.scrollTarget.offsetLeft,\n        top: this.scrollTarget.offsetTop,\n      });\n      this.scrollTarget = null;\n    }\n  }\n  /**\n   * Handles user clicks to the new original post button\n   */\n  handleNewPost() {\n    this.hubTelemetry.emit(dist.dictionary.category.interaction.action.open.label.editor);\n    this.showPostEditor = true;\n  }\n  /**\n   * Hides the post authoring component when arcgisHubDiscussionsPostCancel is emitted\n   * @param evt\n   */\n  handlePostCancelled(evt) {\n    evt.stopPropagation();\n    this.showPostEditor = false;\n  }\n  /**\n   * Handles scroll behavior\n   * @param event A custom event which is used to determine the scroll target\n   */\n  handleScrollTo(event) {\n    this.scrollTarget = event.target;\n  }\n  /**\n   * Handles the event that's emitted when the user clicks the Load More button. Searches\n   * for the next page of thread results and appends them to any existing postAggregates previously\n   * fetched\n   * @param evt A custom event with a number payload representing the next start position\n   */\n  handleLoadMoreChange(evt) {\n    evt.stopPropagation();\n    const { detail: nextStart } = evt;\n    this.searchPostAggregates(nextStart, true);\n  }\n  /**\n   * Handles the event that's emitted when an original post is updated\n   * or it's details are enriched.\n   * @param evt A custom event with a IPostDetails payload\n   */\n  handlePostUpdated(evt) {\n    evt.stopPropagation();\n    const { thread, postAggregates } = this;\n    const { detail: postDetails } = evt;\n    let updatedThread;\n    if (thread) {\n      updatedThread = Object.assign(Object.assign({}, thread), { postDetails });\n      this.thread = updatedThread;\n    }\n    if (postAggregates) {\n      this.postAggregates = postAggregates.map(thread => {\n        var _a;\n        return ((_a = thread === null || thread === void 0 ? void 0 : thread.postDetails) === null || _a === void 0 ? void 0 : _a.postId) === postDetails.postId\n          ? (updatedThread || Object.assign(Object.assign({}, thread), { postDetails }))\n          : thread;\n      });\n    }\n  }\n  /**\n   * Handles the event that's emitted when a deep-linked reply\n   * is updated or it's details are enriched.\n   * @param evt A custom event with a IPostDetails payload\n   */\n  handleReplyUpdated(evt) {\n    evt.stopPropagation();\n    const { thread, postAggregates } = this;\n    const { detail: replyDetails } = evt;\n    let updatedThread;\n    if (thread) {\n      updatedThread = Object.assign(Object.assign({}, thread), { replyDetails });\n      this.thread = updatedThread;\n    }\n    if (postAggregates) {\n      this.postAggregates = postAggregates.map(thread => {\n        var _a;\n        return ((_a = thread === null || thread === void 0 ? void 0 : thread.replyDetails) === null || _a === void 0 ? void 0 : _a.postId) === replyDetails.postId\n          ? (updatedThread || Object.assign(Object.assign({}, thread), { replyDetails }))\n          : thread;\n      });\n    }\n  }\n  /**\n   * Handles the event that's emitted when a channel's details are enriched.\n   * @param evt A custom event with a IPostDetails payload\n   */\n  handleChannelUpdated(evt) {\n    evt.stopPropagation();\n    const { thread, postAggregates } = this;\n    const { detail: { postId, channelDetails } } = evt;\n    let updatedThread;\n    if (thread) {\n      updatedThread = Object.assign(Object.assign({}, thread), { channelDetails });\n      this.thread = updatedThread;\n    }\n    if (postAggregates) {\n      const getPostDetails = (thread) => {\n        return Boolean(thread.replyDetails)\n          ? thread.replyDetails\n          : thread.postDetails;\n      };\n      this.postAggregates = postAggregates.map(thread => getPostDetails(thread).postId === postId\n        ? (updatedThread || Object.assign(Object.assign({}, thread), { channelDetails }))\n        : thread);\n    }\n  }\n  /**\n   * Handles the event that's emitted when a new original post is created. Fetches\n   * the thread details for a newly created post, adds the new thread to\n   * the collection of previously fetched postAggregates, updates search-related state\n   * and emits an event to add the post geometry to the map\n   * @param evt A custom event with an IPost payload\n   */\n  async handlePostCreated(evt) {\n    evt.stopPropagation();\n    const { detail: post } = evt;\n    const { postAggregates, context, nextStart } = this;\n    const channelDetails = await enrichChannelDetails(Object.assign({ channelDetails: {\n        channelId: post.channelId,\n      } }, context.hubRequestOptions));\n    const thread = await this.updateThreadOwnership({\n      postDetails: {\n        postId: post.id,\n        post\n      },\n      channelDetails\n    });\n    this.postAggregates = postAggregates\n      ? [thread, ...postAggregates]\n      : [thread];\n    this.total += 1;\n    if (nextStart > -1) {\n      this.nextStart += 1;\n    }\n    this.arcgisHubDiscussionsFeature.emit({ post, create: true });\n  }\n  /**\n   * Handles the event that's emitted when an original post is deleted. Navigates the\n   * user back to the original post list when viewing a thread, removes the deleted thread\n   * from the collection of postAggregates and updates search state.\n   * @param evt A custom event with an IPost payload\n   */\n  handlePostDeleted(evt) {\n    evt.stopPropagation();\n    const { detail: deletedPost } = evt;\n    const { postAggregates, thread, nextStart } = this;\n    if (thread) {\n      this.thread = Object.assign(Object.assign({}, thread), { postDetails: Object.assign(Object.assign({}, thread.postDetails), { post: null }) });\n    }\n    if (postAggregates) {\n      this.previousThread = null;\n      this.total -= 1;\n      this.postAggregates = postAggregates.filter(thread => thread.postDetails.post.id !== deletedPost.id);\n      if (nextStart > -1) {\n        this.nextStart -= 1;\n      }\n    }\n    this.deletedDuringSession = true;\n    this.arcgisHubDiscussionsFeatureDeleted.emit(deletedPost);\n  }\n  /**\n   * Handles the event that's emitted when an original post is edited.\n   * @param evt A custom event with an IPost payload\n   */\n  async handlePostEdited(evt) {\n    evt.stopPropagation();\n    const { thread, postAggregates, context } = this;\n    const { detail: post } = evt;\n    const buildUpdatedThread = async (thread) => {\n      const postDetails = await enrichPostDetails(Object.assign({ postDetails: Object.assign(Object.assign({}, thread.postDetails), { post }), includeReplyCount: true }, context.hubRequestOptions));\n      return Object.assign(Object.assign({}, thread), { postDetails });\n    };\n    let updatedThread;\n    if (thread) {\n      updatedThread = await buildUpdatedThread(thread);\n      this.thread = updatedThread;\n    }\n    if (postAggregates) {\n      this.postAggregates = await Promise.all(postAggregates.map(thread => thread.postDetails.postId === post.id\n        ? (updatedThread || buildUpdatedThread(thread))\n        : thread));\n    }\n    this.arcgisHubDiscussionsFeature.emit({ post, create: false });\n  }\n  /**\n   * Conditionally updates the thread's ownership to the group\n   * owner when the group's owner is not the original post author\n   * @param thread An IPostAggregate object\n   * @returns a Promise that resolves the IPostAggregate object\n   */\n  async updateThreadOwnership(thread) {\n    const { context: { hubRequestOptions, currentUser: { username } } } = this;\n    const { groups: [{ owner }], channel: { id: channelId, creator } } = thread.channelDetails;\n    let updatedThread = thread;\n    if (creator === username && owner !== username) {\n      updatedThread = cloneObject(thread);\n      const updatedChannel = await updateChannel(Object.assign({ channelId, params: { creator: owner } }, hubRequestOptions));\n      updatedThread.channelDetails.channel = updatedChannel;\n      updatedThread.postDetails.post.channel = updatedChannel;\n    }\n    return updatedThread;\n  }\n  /**\n   * Handles the event that's emitted when the user elects to view a\n   * specific thread from the thread list\n   * @param evt A custom event with an IPost payload\n   */\n  async handleThreadSelected(evt) {\n    evt.stopPropagation();\n    const { detail: thread } = evt;\n    if (thread) {\n      this.selectThread(thread);\n    }\n    else {\n      this.handleResetThread();\n    }\n  }\n  async handleDeepLinkedThreadSelected(evt) {\n    evt.stopPropagation();\n    const { detail: thread } = evt;\n    if (thread) {\n      this.selectThread(thread, true);\n    }\n    else {\n      this.handleResetThread();\n    }\n  }\n  selectThread(selectedThread, deepLinked) {\n    const { arcgisHubDiscussionsViewThread, postAggregates, shouldComminglePostList } = this;\n    const thread = Object.assign({}, selectedThread);\n    if (!deepLinked) {\n      delete thread.replyDetails;\n      if ((postAggregates === null || postAggregates === void 0 ? void 0 : postAggregates.length) && !shouldComminglePostList) {\n        this.postAggregates = postAggregates.map((postAggregate) => postAggregate.postDetails.postId === thread.postDetails.postId\n          ? thread\n          : postAggregate);\n      }\n    }\n    this.showPostEditor = false;\n    this.thread = thread;\n    this.previousThread = thread;\n    this.replyId = null;\n    arcgisHubDiscussionsViewThread.emit({\n      postId: thread.postDetails.postId,\n      channelId: thread.channelDetails.channelId\n    });\n  }\n  handleSelectThread() {\n    const { thread: { channelDetails, postDetails, replyDetails } } = this;\n    this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.open.label.thread), { postId: replyDetails === null || replyDetails === void 0 ? void 0 : replyDetails.postId, parentId: postDetails.postId, channelId: channelDetails.channel.id, channelAccess: channelDetails.channel.access }));\n    this.selectThread(this.thread);\n  }\n  /**\n   * Handles the event that's emitted when a new reply is created within a thread. Emits\n   * an event to add the reply's drawing geometry to the map\n   * @param evt A custom event with an IPost payload\n   */\n  handleReplyCreated(evt) {\n    evt.stopPropagation();\n    const { detail: reply } = evt;\n    const { thread, postAggregates } = this;\n    const buildUpdatedThread = (thread) => {\n      const updatedThread = Object.assign(Object.assign({}, thread), { postDetails: Object.assign(Object.assign({}, thread.postDetails), { post: Object.assign(Object.assign({}, thread.postDetails.post), { replyCount: thread.postDetails.post.replyCount + 1 }) }) });\n      return updatedThread;\n    };\n    if (thread) {\n      this.thread = buildUpdatedThread(thread);\n    }\n    if (postAggregates) {\n      this.postAggregates = postAggregates.map(thread => ((!thread.replyDetails && (thread.postDetails.postId === (reply.parentId || (reply === null || reply === void 0 ? void 0 : reply.parent.id))))\n        ? buildUpdatedThread(thread)\n        : thread));\n    }\n    this.arcgisHubDiscussionsFeature.emit({ post: reply, create: true });\n  }\n  /**\n   * Handles the event that's emitted when an existing reply is edited within a thread.\n   * Emits an event that adds/updates the reply's drawing geometry to the map\n   * @param evt A custom event with an IPost payload\n   */\n  async handleReplyEdited(evt) {\n    evt.stopPropagation();\n    const { postAggregates, thread, context } = this;\n    const { detail: reply } = evt;\n    if (thread === null || thread === void 0 ? void 0 : thread.replyDetails) {\n      const replyDetails = await enrichPostDetails(Object.assign({ postDetails: Object.assign(Object.assign({}, thread.replyDetails), { post: reply }) }, context.hubRequestOptions));\n      this.thread = Object.assign(Object.assign({}, thread), { replyDetails });\n    }\n    if (postAggregates) {\n      // Edit reply in postAggregates\n      const thread = this.postAggregates.find(thread => { var _a; return ((_a = thread === null || thread === void 0 ? void 0 : thread.replyDetails) === null || _a === void 0 ? void 0 : _a.postId) === reply.id; });\n      if (thread) {\n        thread.replyDetails.post = Object.assign(Object.assign({}, thread.replyDetails.post), reply);\n      }\n    }\n    this.arcgisHubDiscussionsFeature.emit({ post: reply, create: false });\n  }\n  /**\n   * Handles the event that's emitted when a reply is deleted within a thread.\n   * @param evt A custom event with an IPost payload\n   */\n  handleReplyDeleted(evt) {\n    evt.stopPropagation();\n    const { thread, postAggregates } = this;\n    const { detail: reply } = evt;\n    const buildUpdatedThread = (thread) => {\n      const updatedThread = Object.assign(Object.assign({}, thread), { postDetails: Object.assign(Object.assign({}, thread.postDetails), { post: thread.postDetails.post\n            ? Object.assign(Object.assign({}, thread.postDetails.post), { replyCount: thread.postDetails.post.replyCount - 1 }) : thread.postDetails.post }) });\n      if (updatedThread.replyDetails) {\n        updatedThread.replyDetails = Object.assign(Object.assign({}, updatedThread.replyDetails), { post: null });\n      }\n      return updatedThread;\n    };\n    if (thread) {\n      this.thread = buildUpdatedThread(thread);\n    }\n    if (postAggregates) {\n      // Remove reply from list\n      this.postAggregates = postAggregates\n        // Decrement reply parent post by 1\n        .map(thread => ((!thread.replyDetails && (thread.postDetails.postId === (reply.parentId || (reply === null || reply === void 0 ? void 0 : reply.parent.id))))\n        ? buildUpdatedThread(thread)\n        : thread))\n        // Remove reply from postAggregates\n        .filter(thread => { var _a; return ((_a = thread === null || thread === void 0 ? void 0 : thread.replyDetails) === null || _a === void 0 ? void 0 : _a.postId) !== reply.id; });\n    }\n    this.arcgisHubDiscussionsFeatureDeleted.emit(reply);\n  }\n  /**\n   * Emits event to zoom to current discussion graphics on map\n   */\n  handleGeometryGoTo() {\n    const { thread } = this;\n    this.arcgisHubGeometryGoTo.emit(thread);\n  }\n  /**\n   * Handles the event that's emitted when a feature is to be selected on\n   * the map\n   * @param evt A custom event with a Feature payload\n   */\n  handleGeometryFeatureSelect(evt) {\n    evt.stopPropagation();\n    this.arcgisHubGeometryFeatureSelect.emit(evt.detail);\n  }\n  handleGeometryFeatureHover(evt) {\n    evt.stopPropagation();\n    this.arcgisHubGeometryFeatureHover.emit(evt.detail);\n  }\n  /**\n   * Handles the event that's emitted when a drawing geometry is to be\n   * captured on the map\n   * @param evt A custom event with post or reply ID payload\n   */\n  handleGeometryDrawCreate(evt) {\n    evt.stopPropagation();\n    this.arcgisHubGeometryDrawCreate.emit(evt.detail);\n  }\n  /**\n   * Handles the event that's emitted when a user selects a specific\n   * geometry type to draw\n   * @param evt A custom event with type Tool payload\n   */\n  handleGeometryDrawTypeSelect(evt) {\n    evt.stopPropagation();\n    this.arcgisHubGeometryDrawTypeSelect.emit(evt.detail);\n  }\n  /**\n   * Handles the event that's emitted when a drawing is to be edited\n   * on the map\n   * @param evt A custom event with a Feature payload\n   */\n  handleGeometryDrawEdit(evt) {\n    evt.stopPropagation();\n    this.arcgisHubGeometryDrawEdit.emit(evt.detail);\n  }\n  /**\n   * Handles the event that's emitted when a drawing that is being edited\n   * on the map is canceled\n   * @param evt A custom event with a Feature payload\n   */\n  handleGeometryDrawEditCancel(evt) {\n    evt.stopPropagation();\n    this.arcgisHubGeometryDrawEditCancel.emit();\n  }\n  /**\n   * Handles the event that's emitted when a drawing is to be reset\n   * on the map\n   * @param evt A custom event\n   */\n  handleGeometryDrawReset(evt) {\n    evt.stopPropagation();\n    this.arcgisHubGeometryDrawReset.emit();\n  }\n  /**\n   * Handles the event that's emitted when a drawing geometry is to\n   * be selected on the map\n   * @param evt A custom event with a post or reply ID payload\n   */\n  handleGeometrySelect(evt) {\n    evt.stopPropagation();\n    this.arcgisHubGeometrySelect.emit(evt.detail);\n  }\n  /**\n   * Handles the event that's emitted when a drawing geometry is to\n   * be deselected on the map\n   * @param evt A custom event\n   */\n  handleGeometryDeselect(evt) {\n    evt.stopPropagation();\n    this.arcgisHubGeometryDeselect.emit();\n  }\n  /**\n   *\n   * Handles the event that's emitted when a feature should\n   * be removed from the map\n   */\n  handleFeatureRemove(evt) {\n    evt.stopPropagation();\n    this.arcgisHubFeatureRemove.emit(evt.detail);\n  }\n  /**\n   *\n   * Handles the event to clear all staging graphics from\n   * the map editor\n   */\n  handleGeometryClearAll(evt) {\n    evt.stopPropagation();\n    this.arcgisHubGeometryClearAll.emit();\n  }\n  /**\n   * Handles event that's emitted when the calcite-panel is dismissed\n   * @param evt A custom event\n   */\n  handleCalcitePanelDismissedChange(evt) {\n    evt.stopPropagation();\n    this.arcgisHubDiscussionsDismiss.emit();\n  }\n  /**\n   * Handles event that's emitted when the calcite-panel close button is clicked\n   * @param evt A custom event\n   */\n  handleCalcitePanelDismissChange(evt) {\n    evt.stopPropagation();\n    this.arcgisHubDiscussionsClose.emit();\n  }\n  /**\n   * Captures empty state telemetry impression\n   */\n  captureEmptyListImpression() {\n    this.hubTelemetry.emit(dist.dictionary.category.interaction.action.viewed.label.empty);\n  }\n  /**\n   * Handles clicks to the View All Replies link when viewing a deep-linked\n   * reply\n   */\n  handleViewAllReplies() {\n    const { thread, arcgisHubDiscussionsViewThread } = this;\n    const threadWithoutReplies = Object.assign({}, thread);\n    delete threadWithoutReplies.replyDetails;\n    this.thread = threadWithoutReplies;\n    this.replyId = null;\n    arcgisHubDiscussionsViewThread.emit({\n      postId: thread.postDetails.postId,\n      channelId: thread.channelDetails.channelId\n    });\n  }\n  /**\n   * Handles clicks to the check status link when an error occurs\n   */\n  handleCheckStatus(evt) {\n    evt.preventDefault();\n    const target = evt.target;\n    this.hubTelemetry.emit(dist.dictionary.category.navigation.action.external.label.hubStatus);\n    setTimeout(() => this.goToUrl(target.href), 250);\n  }\n  /**\n   * Navigates the browser to the given url\n   * @param url A URL string\n   */\n  goToUrl(url) {\n    window.location.href = url;\n  }\n  checkIsMobile() {\n    const { document: { body: { clientWidth } } } = window;\n    this.isMobile = clientWidth < 768;\n  }\n  /**\n   * Handles clicks to the Discussions Options calcite action\n   */\n  handleDiscussionOptionsClick() {\n    this.showOptions = true;\n    this.showPostEditor = false;\n    this.hubTelemetry.emit(dist.dictionary.category.interaction.action.open.label.panel.details.discussionOptions);\n  }\n  /**\n   * Resets the view back to original post list from settings panel\n   */\n  handleOptionsBack() {\n    this.showOptions = false;\n  }\n  /**\n   * Update discussion details, bypassing cache\n   */\n  async updateDiscussionDetails() {\n    this.discussionDetails = await this.fetchSubject(true);\n  }\n  /**\n   * Updates the item or group with or without the cannotDiscuss typeKeyord\n   * depending on their option selection\n   */\n  async handleSaveOptions() {\n    const { discussionDetails, context, optionsElement } = this;\n    const { value } = optionsElement;\n    const categoryKey = discussionDetails.type === DiscussionType.CONTENT\n      ? discussionDetails.type\n      : 'groups';\n    const detailsKey = value ? 'allowDiscussions' : 'blockDiscussions';\n    const telemetry = dist.dictionary.category[categoryKey].action.update.label.settings.details[detailsKey];\n    this.optionsSaving = true;\n    this.optionsError = null;\n    try {\n      const reference = await updateDiscussable(Object.assign({ subject: discussionDetails.reference, discussable: value }, context.requestOptions));\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, telemetry), { response: dist.constants.response.SUCCESS }));\n      // partially update reference, timestamps, etc, probably outdated\n      this.discussionDetails = Object.assign(Object.assign({}, discussionDetails), { reference });\n      // fully update reference, intentionally not awaiting\n      this.updateDiscussionDetails();\n    }\n    catch (error) {\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, telemetry), { response: dist.constants.response.FAILURE }));\n      this.optionsError = error;\n    }\n    finally {\n      this.optionsSaving = false;\n    }\n  }\n  /**\n   * Resets the options error state\n   */\n  handleResetOptionsError() {\n    this.optionsError = null;\n  }\n  /**\n   * A getter method that returns the appropriate view\n   * for the current component state\n   */\n  get view() {\n    const { error, thread, postAggregates, showOptions, context } = this;\n    let renderMethod;\n    if (!(context === null || context === void 0 ? void 0 : context.currentUser)) {\n      renderMethod = this.renderRequiresAuth;\n    }\n    else if (error) {\n      renderMethod = this.renderError;\n    }\n    else if (!thread && !postAggregates) {\n      renderMethod = this.renderLoading;\n    }\n    else if (showOptions) {\n      renderMethod = this.renderOptions;\n    }\n    else if (thread) {\n      renderMethod = this.renderThread;\n    }\n    else {\n      renderMethod = this.renderPostList;\n    }\n    return renderMethod;\n  }\n  /**\n   * Computes if the discussions options action should render in the panel header\n   */\n  get shouldRenderOptions() {\n    const { context, discussionDetails, dismissible } = this;\n    let shouldRender = false;\n    if (!dismissible) {\n      shouldRender = (discussionDetails === null || discussionDetails === void 0 ? void 0 : discussionDetails.type) === DiscussionType.CONTENT\n        ? canEditItem(discussionDetails.reference.item, context.currentUser)\n        // TODO: support groups\n        : false;\n    }\n    return shouldRender;\n  }\n  /**\n   * Computes blocked notice variant\n   */\n  get blockedNotice() {\n    let variant;\n    const { discussionDetails } = this;\n    if (discussionDetails && !isDiscussable(discussionDetails.reference)) {\n      variant = discussionDetails.type === 'group'\n        ? ArcgisHubDiscussionsBlockedNoticeVariant.Group\n        : ArcgisHubDiscussionsBlockedNoticeVariant.Item;\n    }\n    return variant;\n  }\n  /**\n   * Computes if the post-list commingles post and replies, which\n   * is currently only the case for location lists.  In most cases, this is false\n   * and the post-list is treated only as a list of original posts.\n   */\n  get shouldComminglePostList() {\n    const { locationId } = this;\n    return Boolean(locationId);\n  }\n  renderRequiresAuth() {\n    const { intl } = this;\n    return (h(\"section\", { class: \"requires-auth\" }, h(\"calcite-icon\", { icon: \"frown\", scale: \"l\" }), h(\"header\", null, intl.t('auth.title')), h(\"p\", null, intl.t('auth.text'))));\n  }\n  /**\n   * Renders empty state\n   */\n  renderEmpty() {\n    const { intl, deletedDuringSession, blockedNotice } = this;\n    if (!deletedDuringSession) {\n      this.captureEmptyListImpression();\n    }\n    return (h(\"section\", { class: \"empty\" }, h(\"calcite-icon\", { icon: \"speech-bubble\", scale: \"l\" }), h(\"header\", null, intl.t('emptyHeading')), h(\"p\", null, intl.t('emptyMessage')), h(\"calcite-button\", { disabled: Boolean(blockedNotice), onClick: this.handleNewPost, round: true, scale: \"l\" }, intl.t('createPost')), blockedNotice ? (h(\"arcgis-hub-discussions-blocked-notice\", { variant: ArcgisHubDiscussionsBlockedNoticeVariant.Item })) : (h(\"arcgis-hub-discussions-private-notice\", null))));\n  }\n  /**\n   * Renders the discussion options view\n   */\n  renderOptions() {\n    const { discussionDetails, optionsSaving, intl, blockedNotice, optionsError } = this;\n    return (h(\"calcite-panel\", { \"data-element\": \"discussions-options-panel\", description: discussionDetails.reference.title, disabled: optionsSaving, heading: intl.t('options.heading'), onCalcitePanelBackClick: this.handleOptionsBack, showBackButton: true }, h(\"div\", null, h(\"arcgis-hub-discussions-options\", { layout: \"vertical\", ref: (optionsElement) => { this.optionsElement = optionsElement; }, value: !blockedNotice, variant: discussionDetails.type }), h(\"div\", null, h(\"calcite-button\", { loading: optionsSaving, onClick: this.handleSaveOptions, round: true, scale: \"l\", type: \"submit\" }, intl.t(optionsSaving ? 'options.saving' : 'options.save'))), optionsError && (h(\"calcite-notice\", { active: true, closable: true, color: \"red\", onCalciteNoticeClose: this.handleResetOptionsError }, h(\"header\", { slot: \"title\" }, intl.t('options.failure.title')), h(\"p\", { slot: \"message\" }, intl.t('options.failure.message')))))));\n  }\n  /**\n   * Renders the post authoring component\n   */\n  renderPostEditor() {\n    const { unsavedFeatures, discussionDetails, hasMap, context, unsavedRelatedFeatures, unsavedExistingFeatures, isMobile } = this;\n    return (h(Fragment, null, h(\"arcgis-hub-discussions-post-editor\", { context: context, discussionDetails: discussionDetails, hasMap: hasMap, isMobile: isMobile, slot: \"list-before\", unsavedExistingFeatures: unsavedExistingFeatures, unsavedFeatures: unsavedFeatures, unsavedRelatedFeatures: unsavedRelatedFeatures }), h(\"arcgis-hub-discussions-private-notice\", { slot: \"list-before\" })));\n  }\n  /**\n   * Renders the Add Post button\n   */\n  renderAddOrCreatePostButton() {\n    const { intl, handleNewPost, total, blockedNotice } = this;\n    return total\n      ? (h(Fragment, null, h(\"calcite-button\", { appearance: \"outline\", color: \"blue\", disabled: Boolean(blockedNotice), \"icon-start\": \"speech-bubble-plus\", onClick: handleNewPost, scale: \"l\", slot: \"list-before\", type: \"button\", width: \"auto\" }, intl.t('addPost')), blockedNotice\n        ? (h(\"arcgis-hub-discussions-blocked-notice\", { slot: \"list-before\", variant: ArcgisHubDiscussionsBlockedNoticeVariant.Item }))\n        : (h(\"arcgis-hub-discussions-private-notice\", { slot: \"list-before\" }))))\n      : this.renderEmpty();\n  }\n  /**\n   * Renders Go-to action in panel header\n   */\n  renderGoToAction() {\n    const { enableGoTo, intl } = this;\n    if (enableGoTo) {\n      return (h(\"calcite-action\", { class: \"discussions-go-to\", onClick: this.handleGeometryGoTo, slot: \"header-actions-end\", text: intl.t('showFullDiscussion') }, h(\"calcite-icon\", { class: \"discussions-go-to-icon\", icon: \"extent\", scale: \"s\" })));\n    }\n  }\n  /**\n   * Renders the thread list\n   */\n  renderPostList() {\n    var _a;\n    const { discussionDetails, context, hasMap, isHub, unsavedFeatures, unsavedRelatedFeatures, unsavedExistingFeatures, postAggregates, showPostEditor, nextStart, loading, previousThread, locationId, intl, shouldRenderOptions, isMobile, dismissible } = this;\n    const classes = { 'location-list': Boolean(locationId) };\n    const heading = (locationId && ((_a = discussionDetails.displayField) === null || _a === void 0 ? void 0 : _a.value))\n      ? discussionDetails.displayField.value\n      : intl.t('list.heading');\n    const description = (locationId)\n      ? intl.t('location.summary')\n      : discussionDetails === null || discussionDetails === void 0 ? void 0 : discussionDetails.reference.title;\n    return (h(\"calcite-panel\", { closable: dismissible, description: description, heading: heading }, this.renderGoToAction(), shouldRenderOptions && (h(\"calcite-action\", { class: \"discussions-options\", onClick: this.handleDiscussionOptionsClick, slot: \"header-actions-end\", text: \"Discussion Options\" }, h(\"calcite-icon\", { class: \"discussions-options-icon\", icon: \"gear\", scale: \"s\" }))), h(\"arcgis-hub-discussions-post-list\", { class: classes, context: context, discussionDetails: discussionDetails, hasMap: hasMap, isHub: isHub, isMobile: isMobile, loading: loading, nextStart: nextStart, postAggregates: postAggregates, previousThread: previousThread, unsavedExistingFeatures: unsavedExistingFeatures, unsavedFeatures: unsavedFeatures, unsavedRelatedFeatures: unsavedRelatedFeatures }, !locationId && (showPostEditor\n      ? this.renderPostEditor()\n      : this.renderAddOrCreatePostButton()))));\n  }\n  /**\n   * Renders the loading indicator when fetching content necessary\n   * to render the UI\n   */\n  renderLoading() {\n    return (h(\"calcite-loader\", { active: true, label: this.intl.t('loading'), scale: \"m\", type: \"indeterminate\" }));\n  }\n  /**\n   * Renders a generic error state if any of the XHRs responsible\n   * for fetching content required to render the UI fails\n   */\n  renderError() {\n    const { intl } = this;\n    return (h(\"section\", null, h(\"calcite-icon\", { icon: \"frown\", scale: \"l\" }), h(\"header\", null, intl.t('error.title')), h(\"p\", null, intl.t('error.text')), h(\"calcite-button\", { appearance: \"clear\", color: \"red\", href: \"https://hubstatus.arcgis.com/\", onClick: this.handleCheckStatus, round: true, scale: \"l\" }, intl.t('error.button'))));\n  }\n  /**\n   * Renders an invidual thread\n   */\n  renderThread() {\n    const { thread, context, hasMap, isHub, unsavedFeatures, unsavedRelatedFeatures, unsavedExistingFeatures, discussionDetails, dismissible, intl, handleResetThread, locationId, handleSelectThread, disableNavigation, isMobile } = this;\n    let heading = 'generic.heading';\n    let description = 'thread.summary';\n    let handleBackClick = handleResetThread;\n    if (thread === null || thread === void 0 ? void 0 : thread.replyDetails) {\n      heading = 'reply.heading';\n      description = 'reply.summary';\n      handleBackClick = handleSelectThread;\n    }\n    else if (locationId) {\n      heading = 'location.heading';\n    }\n    if (disableNavigation) {\n      heading = 'list.heading';\n    }\n    return (h(\"calcite-panel\", { closable: dismissible, description: intl.t(description), heading: intl.t(heading), onCalcitePanelBackClick: handleBackClick, showBackButton: !disableNavigation }, this.renderGoToAction(), h(\"arcgis-hub-discussions-thread\", { context: context, discussionDetails: discussionDetails, hasMap: hasMap, isHub: isHub, isMobile: isMobile, thread: thread, unsavedExistingFeatures: unsavedExistingFeatures, unsavedFeatures: unsavedFeatures, unsavedRelatedFeatures: unsavedRelatedFeatures })));\n  }\n  /**\n   * Primary render entrypoint\n   */\n  render() {\n    return (h(Host, { \"data-element\": \"discussions\" }, this.view()));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"postId\": [\"handlePostIdChange\"],\n    \"replyId\": [\"handleReplyIdChange\"],\n    \"locationId\": [\"handleLocationIdChange\"],\n    \"context\": [\"initialize\"]\n  }; }\n};\n__decorate$2([\n  DebounceDecoratorFactory({ timeout: 50 })\n], ArcgisHubDiscussions.prototype, \"reinitialize\", null);\n__decorate$2([\n  DebounceDecoratorFactory({ timeout: 1000 })\n], ArcgisHubDiscussions.prototype, \"handleDOMReady\", null);\n__decorate$2([\n  callOnceFactory()\n], ArcgisHubDiscussions.prototype, \"captureEmptyListImpression\", null);\n__decorate$2([\n  DebounceDecoratorFactory({ timeout: 250 })\n], ArcgisHubDiscussions.prototype, \"checkIsMobile\", null);\nArcgisHubDiscussions.style = arcgisHubDiscussionsCss;\n\nconst arcgisHubDiscussionsMapActionNoticeCss = \":host{left:50%;width:auto;display:var(--display);transform:translate(-50%, 0)}:host([aria-hidden=\\\"true\\\"]){display:none}div{border-bottom-right-radius:0.75rem;border-bottom-left-radius:0.75rem;padding-left:0.75rem;padding-right:0.75rem;padding-top:0.75rem;padding-bottom:0.75rem;--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity));background-color:var(--hub-map-outline);font-weight:var(--calcite-font-weight-bold);font-size:var(--calcite-font-size--1)}calcite-button{margin-left:1rem}\";\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst HUB_MAP_OUTLINE = '#9747FF';\nconst ArcgisHubDiscussionsMapActionNotice = class {\n  /**\n   * Constructor function, pre-binds context to relevant methods\n   */\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubDrawDone = createEvent(this, \"arcgisHubDrawDone\", 7);\n    /**\n     * Styles applied when notice is active\n     */\n    this.activeStyles = {\n      outline: `.25rem solid ${HUB_MAP_OUTLINE}`,\n      padding: '.25rem',\n      outlineOffset: '-.25rem'\n    };\n    bind(this, 'handleDone');\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.el);\n  }\n  connectedCallback() {\n    this._connect();\n  }\n  disconnectedCallback() {\n    this._disconnect();\n  }\n  /**\n   * Connects component element and styles to MapView UI container\n   */\n  _connect() {\n    const { view, el, activeStyles } = this;\n    const addStyle = (key) => view.ui.container.style[key] = activeStyles[key];\n    Object\n      .keys(activeStyles)\n      .forEach(addStyle);\n    view.ui.add(el);\n    setTimeout(() => {\n      this.isConnected = true;\n    }, 50);\n  }\n  /**\n   * Removes component element and styles from UI container\n   */\n  _disconnect() {\n    const { view, activeStyles, el } = this;\n    const removeStyle = (key) => view.ui.container.style.removeProperty(key);\n    Object\n      .keys(activeStyles)\n      .forEach(removeStyle);\n    view.ui.remove(el);\n    this.isConnected = false;\n  }\n  handleDone() {\n    this.arcgisHubDrawDone.emit();\n  }\n  /**\n   * Checks if MapView is available with UI container\n   */\n  get hasViewUI() {\n    const { view } = this;\n    return Boolean(view && view.ui);\n  }\n  get styles() {\n    const { isConnected } = this;\n    return {\n      '--display': (isConnected) ? 'block' : 'none',\n      '--hub-map-outline': HUB_MAP_OUTLINE\n    };\n  }\n  render() {\n    const { intl, styles, isConnected } = this;\n    return (h(Host, { \"aria-hidden\": isConnected, \"data-element\": \"discussions-map-action-notice\", style: styles, tabindex: 0 }, h(\"div\", null, h(\"span\", null, intl.t('adding.notice')), h(\"calcite-button\", { appearance: 'outline', color: 'neutral', onClick: this.handleDone, round: true, scale: 's' }, intl.t('adding.action')))));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get el() { return getElement(this); }\n};\n__decorate$1([\n  DebounceDecoratorFactory({ timeout: 100 }),\n  CallWhenFactory({ when() { return this.hasViewUI && !this.isConnected; } })\n], ArcgisHubDiscussionsMapActionNotice.prototype, \"_connect\", null);\n__decorate$1([\n  CallWhenFactory({ when() { return this.hasViewUI && this.isConnected; } })\n], ArcgisHubDiscussionsMapActionNotice.prototype, \"_disconnect\", null);\nArcgisHubDiscussionsMapActionNotice.style = arcgisHubDiscussionsMapActionNoticeCss;\n\nconst arcgisHubDiscussionsMapPreviewCss = \":host{display:block;background-color:var(--calcite-ui-foreground-1);padding:1rem;padding-bottom:0.5rem;--tw-shadow:0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);--tw-shadow-colored:0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}address{margin-bottom:0.125rem;display:grid;font-size:var(--calcite-font-size--1);font-style:normal;line-height:1.25rem;grid-template-columns:minmax(0, -webkit-max-content) 1rem minmax(0, -webkit-max-content);grid-template-columns:minmax(0, max-content) 1rem minmax(0, max-content)}address b{font-size:var(--calcite-font-size-0);line-height:1.25rem;font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-1)}address span{display:flex;justify-content:center;color:var(--calcite-ui-text-2)}address arcgis-relative-date{color:var(--calcite-ui-text-2)}arcgis-multiline-ellipsis{font-size:var(--calcite-font-size-0);line-height:1.375}calcite-action-group{margin-left:2.75rem}.avatars{position:relative;grid-row:span 2 / span 2;float:left;margin-right:1.25rem;display:flex}.avatars calcite-avatar+calcite-avatar{position:absolute;top:1rem;left:1rem;z-index:10;border-radius:9999px;border:3px solid var(--calcite-ui-foreground-1)}@media only screen and (max-width: 640px){:host{border-radius:1.75rem}}@media only screen and (min-width: 640px){:host{border-radius:1.75rem 1.75rem 1.75rem 0}}\";\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst ArcgisHubDiscussionsMapPreview = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubDiscussionsViewFull = createEvent(this, \"arcgisHubDiscussionsViewFull\", 7);\n    this.arcgisHubDiscussionsGeometryZoomTo = createEvent(this, \"arcgisHubDiscussionsGeometryZoomTo\", 7);\n    this.arcgisHubDiscussionsPreviewDidRender = createEvent(this, \"arcgisHubDiscussionsPreviewDidRender\", 7);\n    this.arcgisHubDiscussionsPreviewDismiss = createEvent(this, \"arcgisHubDiscussionsPreviewDismiss\", 7);\n    this.hubTelemetry = createEvent(this, \"hubTelemetry\", 7);\n    /**\n     * If component is in loading state\n     */\n    this.loading = true;\n    bind(this, 'handleViewFullThread', 'handleZoomTo', 'handleDismiss');\n  }\n  /**\n   * Computes creator full name string\n   */\n  get creatorFullName() {\n    const { intl, thread: { postDetails: { creatorDetails: { user: creator }, post: reply } } } = this;\n    let fullName = intl.t('anonymous');\n    if (creator || (reply === null || reply === void 0 ? void 0 : reply.creator)) {\n      fullName = (creator === null || creator === void 0 ? void 0 : creator.fullName) || intl.t('privateUser');\n    }\n    return fullName;\n  }\n  /** Lifecycle Methods */\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n    this.initialize();\n  }\n  componentDidRender() {\n    this.arcgisHubDiscussionsPreviewDidRender.emit(this.element.offsetHeight);\n  }\n  /**\n   * Enrich thread details\n   */\n  async initialize() {\n    const { channelId, postId, replyId, locationId } = this;\n    if (channelId && (postId || replyId || locationId)) {\n      this.loading = true;\n      this.thread = (locationId && !postId)\n        ? await this.fetchThreadByLocationId()\n        : await this.fetchThreadByIds();\n      this.loading = false;\n      this.emitHubTelemetry(dist.dictionary.category.interaction.action.open.label.popUp.details.post);\n    }\n  }\n  /**\n   * Fetch thread when only location id is provided\n   * @returns Promise<IPostAggregate>\n   */\n  async fetchThreadByLocationId() {\n    const { locationId, context, discussion, } = this;\n    const discussionQuery = `${discussion}%?id=%${locationId}%`;\n    let { items: [thread] } = await searchPostAggregates(Object.assign({ discussion: discussionQuery, parents: [], num: 1, sortBy: PostSort.UPDATED_AT, sortOrder: SortOrder.DESC, start: 1 }, context.hubRequestOptions));\n    thread = await this.enrichThreadDetails(thread);\n    return thread;\n  }\n  /**\n   * Fetch thread when ids are provided\n   * @returns Promise<IPostAggregate>\n   */\n  async fetchThreadByIds() {\n    const { channelId, postId, replyId } = this;\n    const thread = await this.enrichThreadDetails({\n      channelDetails: { channelId },\n      postDetails: { postId },\n      replyDetails: replyId && ({ postId: replyId })\n    });\n    return thread;\n  }\n  /**\n   * Enrich thread details\n   * @param thread\n   * @returns Promise<IPostAggregate>\n   */\n  async enrichThreadDetails(thread) {\n    const { context } = this;\n    let { channelDetails, postDetails, replyDetails } = thread;\n    ([channelDetails, postDetails, replyDetails] = await Promise.all([\n      enrichChannelDetails(Object.assign({ channelDetails }, context.hubRequestOptions)),\n      enrichPostDetails(Object.assign({ postDetails }, context.hubRequestOptions)),\n      replyDetails && enrichPostDetails(Object.assign({ postDetails: replyDetails }, context.hubRequestOptions)),\n    ]));\n    return { channelDetails, postDetails, replyDetails };\n  }\n  /**\n   * Telemetry helper\n   * @param telemetry Dictionary string to emit\n   */\n  emitHubTelemetry(telemetry) {\n    var _a;\n    const { thread: { postDetails: { postId }, replyDetails, channelDetails: { channelId, channel: { access: channelAccess } } } } = this;\n    this.hubTelemetry.emit(Object.assign(Object.assign({}, telemetry), { postId: (_a = replyDetails === null || replyDetails === void 0 ? void 0 : replyDetails.postId) !== null && _a !== void 0 ? _a : postId, parentId: (replyDetails === null || replyDetails === void 0 ? void 0 : replyDetails.postId) ? postId : null, channelId,\n      channelAccess }));\n  }\n  /**\n   * Emits arcgisHubDiscussionsViewFull\n   */\n  handleViewFullThread() {\n    this.emitHubTelemetry(dist.dictionary.category.interaction.action.open.label.thread.details[this.locationId ? 'location' : 'post']);\n    this.arcgisHubDiscussionsViewFull.emit();\n  }\n  /**\n   * Emits arcgisHubDiscussionsGeometryZoomTo\n   */\n  handleZoomTo() {\n    this.emitHubTelemetry(dist.dictionary.category.interaction.action.zoom.label.in);\n    this.arcgisHubDiscussionsGeometryZoomTo.emit(this.thread);\n  }\n  /**\n   * Emits arcgisHubDiscussionsPreviewDismiss\n   */\n  handleDismiss() {\n    this.emitHubTelemetry(dist.dictionary.category.interaction.action.close.label.popUp.details.post);\n    this.arcgisHubDiscussionsPreviewDismiss.emit();\n  }\n  /**\n   * Renders the reply creator avatar and optionally the channel avatar\n   */\n  renderAvatars() {\n    var _a;\n    const { context, thread: { channelDetails: { groups: [group] }, postDetails, replyDetails } } = this;\n    const currentPostDetails = replyDetails !== null && replyDetails !== void 0 ? replyDetails : postDetails;\n    const { portal, token } = context.session;\n    const user = (!currentPostDetails.creatorDetails.user && currentPostDetails.post)\n      ? { username: currentPostDetails.post.creator }\n      : currentPostDetails.creatorDetails.user;\n    const el = [(h(\"calcite-avatar\", { \"full-name\": user === null || user === void 0 ? void 0 : user.fullName, key: 'creator', scale: 'm', thumbnail: (user === null || user === void 0 ? void 0 : user.thumbnail) && getUserThumbnailUrl(portal, user, token), \"user-id\": (_a = user) === null || _a === void 0 ? void 0 : _a.id, username: user === null || user === void 0 ? void 0 : user.username }))];\n    if (group) {\n      el.push(h(\"calcite-avatar\", { \"full-name\": group.title, scale: \"s\", thumbnail: getGroupThumbnailUrl(context.session.portal, group, context.session.token) }));\n    }\n    return el;\n  }\n  /**\n   * Renders main content body\n   * @returns HTMLElement\n   */\n  renderContent() {\n    var _a;\n    const { thread } = this;\n    const postDetails = (_a = thread.replyDetails) !== null && _a !== void 0 ? _a : thread.postDetails;\n    return (h(Fragment, null, h(\"div\", { class: \"avatars\" }, this.renderAvatars()), h(\"address\", null, h(\"b\", null, this.creatorFullName), h(\"span\", null, \"\\u00B7\"), h(\"arcgis-relative-date\", { dateTime: postDetails.post.createdAt, formatStyle: \"short\" })), h(\"arcgis-multiline-ellipsis\", { innerHTML: postDetails.post.body, lines: 2 }), h(\"calcite-action-group\", { id: \"text-actions\", layout: \"horizontal\" }, h(\"calcite-action\", { onClick: this.handleViewFullThread, scale: 's', text: this.intl.t('view'), textEnabled: true }), false , h(\"calcite-action\", { onClick: this.handleDismiss, scale: 's', text: this.intl.t('dismiss'), textEnabled: true }))));\n  }\n  /**\n   * Renders loading state\n   * @returns HTMLArcgisHubDiscussionsPostSkeletonElement\n   */\n  renderLoading() {\n    return h(\"arcgis-hub-discussions-post-skeleton\", null);\n  }\n  render() {\n    return (h(Host, { \"data-element\": \"discussions-map-preview\" }, this.loading ? this.renderLoading() : this.renderContent()));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"channelId\": [\"initialize\"],\n    \"postId\": [\"initialize\"],\n    \"replyId\": [\"initialize\"],\n    \"locationId\": [\"initialize\"]\n  }; }\n};\n__decorate([\n  DebounceDecoratorFactory({ timeout: 50 })\n], ArcgisHubDiscussionsMapPreview.prototype, \"initialize\", null);\nArcgisHubDiscussionsMapPreview.style = arcgisHubDiscussionsMapPreviewCss;\n\nexport { ArcgisHubDiscussions as arcgis_hub_discussions, ArcgisHubDiscussionsMapActionNotice as arcgis_hub_discussions_map_action_notice, ArcgisHubDiscussionsMapPreview as arcgis_hub_discussions_map_preview };\n","/**\n * A decorator factory function for the callOnce decorator\n *\n * @returns The callOnce decorator function\n */\nfunction callOnceFactory() {\n  /**\n   * A decorator function that augments a class method with functionality that ensures it is only ever called once.\n   *\n   * @param target A reference to the class prototype\n   * @param propertyKey The name of the method being decorated\n   * @param descriptor A PropertyDescriptor for the method being decorated\n   * @returns A new PropertyDescriptor that aguments the decorated method with functionality that ensures it is only ever called once.\n   */\n  function callOnce(target, propertyKey, descriptor) {\n    // reference to the decorated function\n    const { value: original } = descriptor;\n    // companion prop to track if the decorated function has been called\n    const companionCalledKey = `_${propertyKey}Called`;\n    Object.defineProperty(target, companionCalledKey, {\n      writable: true,\n      value: false\n    });\n    // companion prop to cache the return value of the decorated function\n    const companionCacheKey = `_${propertyKey}Cache`;\n    Object.defineProperty(target, companionCacheKey, {\n      writable: true\n    });\n    // decorator method, calls decorated method only once, subsequent\n    // calls to decorator method return cached\n    const value = function callOnce(...args) {\n      if (!this[companionCalledKey]) {\n        this[companionCalledKey] = true;\n        this[companionCacheKey] = original.apply(this, args);\n      }\n      return this[companionCacheKey];\n    };\n    return Object.assign(Object.assign({}, descriptor), { value });\n  }\n  return callOnce;\n}\n\nexport { callOnceFactory as c };\n","/**\n * A method decorator factory function for the callWhen decorator\n * @param params An ICallWhenDecoratorParams object\n * @returns The callWhen method decorator function\n */\nfunction CallWhenFactory(params) {\n  /**\n   * A decorator function that conditionally call a method if when function returns truthy\n   *\n   * @param _target A reference to the class prototype\n   * @param _propertyKey The name of the method being decorated\n   * @param descriptor A PropertyDescriptor for the method being decorated\n   * @returns A new PropertyDescriptor that aguments the decorated method with conditional call behavior\n   */\n  function callWhen(_target, _propertyKey, descriptor) {\n    const { value: original } = descriptor;\n    const { when } = params;\n    const value = function callWhen(...args) {\n      const isTruthy = when.apply(this, args);\n      if (isTruthy) {\n        // when() condition passed, so call method\n        return original.apply(this, args);\n      }\n    };\n    return Object.assign(Object.assign({}, descriptor), { value });\n  }\n  return callWhen;\n}\n\nexport { CallWhenFactory as C };\n","/**\n * A util to debounce another function. It will return a function\n * that, as long as it continues to be invoked, will not be triggered\n * until the designated timeout has passed.\n */\nfunction debounce(fn, timeout = 300) {\n  let timeoutId;\n  return function (context, ...args) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn.apply(context, args), timeout);\n  };\n}\n\nfunction DebounceDecoratorFactory(params) {\n  function DebounceDecorator(_target, propertyKey, descriptor) {\n    const { value: original } = descriptor;\n    const debouncedKey = `${propertyKey.toString()}Debounced`;\n    const value = function (...args) {\n      if (!this[debouncedKey]) {\n        Object.defineProperty(this, debouncedKey, {\n          value: debounce(original, params.timeout),\n        });\n      }\n      this[debouncedKey](this, ...args);\n    };\n    return Object.assign(Object.assign({}, descriptor), { value });\n  }\n  return DebounceDecorator;\n}\n\nexport { DebounceDecoratorFactory as D };\n","/* Copyright (c) 2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Determines if a given IGroup is an update group\n * @param {IGroup} group The group to evaluate\n */\nfunction isUpdateGroup(group) {\n    return group.capabilities.includes(\"updateitemcontrol\");\n}\n\nexport { isUpdateGroup as i };\n","/* Manages a single ResizeObserver to be used by all components\n * usage: ResizeObserverManager.addHandler(this.element, handler);\n *        ResizeObserverManager.removeHandler(this.element, handler); or ResizeObserverManager.unobserve(this.element);\n */\nclass ResizeObserverManager {\n  // protected to allow wrapper class in test file that extends this class\n  constructor() {\n    this.resizeObserver = new ResizeObserver(this.onResize.bind(this));\n    this.handlers = new WeakMap();\n  }\n  /**\n   * Static method to create an instance of ResizeObserverManager\n   */\n  static create() {\n    if (!ResizeObserverManager.instance) {\n      ResizeObserverManager.instance = new ResizeObserverManager();\n    }\n    return ResizeObserverManager.instance;\n  }\n  /**\n   * Static method to add a resize handler for a particular element\n   */\n  static addHandler(element, fn) {\n    this.create();\n    this.instance.addHandler(element, fn);\n  }\n  /**\n   * Static method to remove a particular resize handler for a particular element\n   */\n  static removeHandler(element, fn) {\n    if (this.instance) {\n      this.instance.removeHandler(element, fn);\n    }\n  }\n  /**\n   * Static method to remove all resize handlers for a particular element\n   */\n  static unobserve(element) {\n    if (this.instance) {\n      this.instance.unobserve(element);\n    }\n  }\n  /**\n   * Instance method to add a resize handler for a particular element\n   */\n  addHandler(element, fn) {\n    if (!this.handlers.has(element)) {\n      // if we are not already observing the element, initialize the handlers array and observe the element\n      this.handlers.set(element, []);\n      this.resizeObserver.observe(element);\n    }\n    // push the fn into the handlers array if it is not already there\n    const handlers = this.handlers.get(element);\n    if (!handlers.includes(fn)) {\n      handlers.push(fn);\n    }\n  }\n  /**\n   * Instance method to remove a particular resize handler for a particular element\n   */\n  removeHandler(element, fn) {\n    // conditionally destroy a handler if one exists for the given element and fn\n    if (this.handlers.has(element)) {\n      // if we are observing the element\n      const handlers = this.handlers.get(element);\n      const idx = handlers.indexOf(fn);\n      // filter out the fn\n      const newHandlers = handlers.filter((_, _idx) => _idx !== idx);\n      if (newHandlers.length) {\n        // if it is not the last handler for the element, set the filtered handlers as the new handlers array for the element\n        this.handlers.set(element, newHandlers);\n      }\n      else {\n        // if it is the last handler for the element, remove the handlers array and unobserve the element\n        this.handlers.delete(element);\n        this.resizeObserver.unobserve(element);\n      }\n    }\n  }\n  /**\n   * Instance method to remove all resize handlers for a particular element\n   */\n  unobserve(element) {\n    if (this.handlers.has(element)) {\n      // if we were observing the element, delete its handlers array and unobserve the element\n      this.handlers.delete(element);\n      this.resizeObserver.unobserve(element);\n    }\n  }\n  onResize(entries) {\n    // we wrap the callback in requestanimationframe to prevent an (benign) error related to the observer not being able to deliveer all observations within a single animation frame\n    requestAnimationFrame(_ => {\n      entries.forEach(e => {\n        var _a;\n        const handlers = (_a = this.handlers.get(e.target)) !== null && _a !== void 0 ? _a : [];\n        handlers.forEach(handler => handler());\n      });\n    });\n  }\n}\n\nexport { ResizeObserverManager as R };\n","var ArcgisHubDiscussionsBlockedNoticeVariant;\n(function (ArcgisHubDiscussionsBlockedNoticeVariant) {\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"Item\"] = \"item\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"EditPost\"] = \"edit.post\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"EditPostGroup\"] = \"edit.post.group\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"EditPostItem\"] = \"edit.post.item\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"EditReply\"] = \"reply.post\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"EditReplyGroup\"] = \"edit.reply.group\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"EditReplyItem\"] = \"edit.reply.item\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"Group\"] = \"group\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"Reply\"] = \"reply\";\n})(ArcgisHubDiscussionsBlockedNoticeVariant || (ArcgisHubDiscussionsBlockedNoticeVariant = {}));\nconst ArcgisHubDiscussionsBlockedNoticeConfigs = {\n  [ArcgisHubDiscussionsBlockedNoticeVariant.Item]: {\n    title: 'item.title',\n    message: 'item.message',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.EditPost]: {\n    title: 'post.title',\n    message: 'post.message',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.EditPostGroup]: {\n    title: 'post.title',\n    message: 'post.message.group',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.EditPostItem]: {\n    title: 'post.title',\n    message: 'post.message.item',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.EditReply]: {\n    title: 'reply.title',\n    message: 'reply.message',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.EditReplyGroup]: {\n    title: 'reply.title',\n    message: 'reply.message.group',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.EditReplyItem]: {\n    title: 'reply.title',\n    message: 'reply.message.item',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.Group]: {\n    title: 'group.title',\n    message: 'group.message',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.Reply]: {\n    title: 'reply.title.generic',\n    message: 'reply.message.generic',\n  },\n};\n\nexport { ArcgisHubDiscussionsBlockedNoticeVariant as A, ArcgisHubDiscussionsBlockedNoticeConfigs as a };\n","import { c as cloneObject } from './util-3c40fe6c.js';\nimport { U as UserSession } from './UserSession-d3a97494.js';\n\n/* Copyright (c) 2018-2021 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Well known APIs\n * Short-forms for specifying common APIs\n * We will likely deprecate this\n */\nconst SEARCH_APIS = {\n    arcgis: {\n        label: \"ArcGIS Online\",\n        url: \"https://www.arcgis.com\",\n        type: \"arcgis\",\n    },\n    arcgisQA: {\n        label: \"ArcGIS Online QAEXT\",\n        url: \"https://qaext.arcgis.com\",\n        type: \"arcgis\",\n    },\n    arcgisDEV: {\n        label: \"ArcGIS Online DEVEXT\",\n        url: \"https://devext.arcgis.com\",\n        type: \"arcgis\",\n    },\n    hub: {\n        label: \"ArcGIS Hub\",\n        url: \"https://hub.arcgis.com/api\",\n        type: \"arcgis-hub\",\n    },\n    hubDEV: {\n        label: \"ArcGIS Hub DEV\",\n        url: \"https://hubdev.arcgis.com/api\",\n        type: \"arcgis-hub\",\n    },\n    hubQA: {\n        label: \"ArcGIS Hub QA\",\n        url: \"https://hubqa.arcgis.com/api\",\n        type: \"arcgis-hub\",\n    },\n};\n/**\n * @private\n * Convert an api \"name\" into a full ApiDefinition\n * @param api\n * @returns\n */\nfunction expandApi(api) {\n    if (typeof api === \"string\" && api in SEARCH_APIS) {\n        return SEARCH_APIS[api];\n    }\n    else {\n        // it's an object, so we trust that it's well formed\n        return api;\n    }\n}\n/**\n * @private\n * Convert a field value into a MatchOptions if it's not already one\n * @param value\n * @returns\n */\nfunction valueToMatchOptions(value) {\n    let result = {};\n    if (Array.isArray(value)) {\n        result = {\n            any: value,\n        };\n    }\n    else {\n        if (typeof value === \"string\") {\n            result = {\n                any: [value],\n            };\n        }\n        if (typeof value === \"object\") {\n            result = value;\n        }\n    }\n    return result;\n}\n/**\n * @private\n * Convert a RelativeDate to a DateRange<number>\n * @param relative\n * @returns\n */\nfunction relativeDateToDateRange(relative) {\n    // hash of offsets\n    const offsetMs = {\n        min: 1000 * 60,\n        hours: 1000 * 60 * 60,\n        days: 1000 * 60 * 60 * 24,\n        weeks: 1000 * 60 * 60 * 24 * 7,\n    };\n    const now = new Date();\n    // default\n    const result = {\n        type: \"date-range\",\n        from: now.getTime(),\n        to: now.getTime(),\n    };\n    //\n    switch (relative.unit) {\n        case \"hours\":\n        case \"days\":\n        case \"weeks\":\n            result.from = result.to - offsetMs[relative.unit] * relative.num;\n            break;\n        case \"months\":\n            // get the current month and subtract num\n            // NOTE: when the previous month has fewer days than this month\n            // setMonth() will return a date w/in the current month\n            // example: 3/30 -> 3/2 b/c there is no 2/28\n            now.setMonth(now.getMonth() - relative.num);\n            result.from = now.getTime();\n            break;\n        case \"years\":\n            now.setFullYear(now.getFullYear() - relative.num);\n            result.from = now.getTime();\n            break;\n    }\n    return result;\n}\n/**\n * Create a `.next()` function for a type\n * @param request\n * @param nextStart\n * @param total\n * @param fn\n * @returns\n */\nfunction getNextFunction(request, nextStart, total, fn) {\n    const clonedRequest = cloneObject(request);\n    // clone will not handle authentication so we do it manually\n    if (request.authentication) {\n        clonedRequest.authentication = UserSession.deserialize(request.authentication.serialize());\n    }\n    // figure out the start\n    clonedRequest.start = nextStart > -1 ? nextStart : total + 1;\n    return (authentication) => {\n        if (authentication) {\n            clonedRequest.authentication = authentication;\n        }\n        return fn(clonedRequest);\n    };\n}\n/**\n * Construct a the full url to a group thumbnail\n *\n * - If the group has a thumbnail, construct the full url\n * - If the group is not public, append on the token (if passed in)\n * @param portalUrl\n * @param group\n * @param token\n * @returns\n */\nfunction getGroupThumbnailUrl(portalUrl, group, token) {\n    let thumbnailUrl = null;\n    if (group.thumbnail) {\n        thumbnailUrl = `${portalUrl}/community/groups/${group.id}/info/${group.thumbnail}`;\n        if (token && group.access !== \"public\") {\n            thumbnailUrl = `${thumbnailUrl}?token=${token}`;\n        }\n    }\n    return thumbnailUrl;\n}\n/**\n * Construct a the full url to a user thumbnail\n *\n * - If the user has a thumbnail, construct the full url\n * - If the user is not public, append on the token\n * @param portalUrl\n * @param user\n * @param token\n * @returns\n */\nfunction getUserThumbnailUrl(portalUrl, user, token) {\n    let thumbnailUrl = null;\n    if (user.thumbnail) {\n        thumbnailUrl = `${portalUrl}/community/users/${user.username}/info/${user.thumbnail}`;\n        if (token && user.access !== \"public\") {\n            thumbnailUrl = `${thumbnailUrl}?token=${token}`;\n        }\n    }\n    return thumbnailUrl;\n}\n\nexport { getUserThumbnailUrl as a, getNextFunction as b, expandApi as e, getGroupThumbnailUrl as g, relativeDateToDateRange as r, valueToMatchOptions as v };\n"],"names":["canEditItem","item","user","res","itemControl","owner","itemOrgId","orgId","roleId","role","username","userGroups","groups","userOrgId","hasPlatformControl","includes","hasPriv","privileges","hasBasePriv","itemGroups","getProp","some","group","isUpdateGroup","id","__decorate$2","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ArcgisHubDiscussions","hostRef","registerInstance","this","arcgisHubGeometryGoTo","createEvent","arcgisHubDiscussionsFeature","arcgisHubDiscussionsFeatureDeleted","arcgisHubGeometryFeatureSelect","arcgisHubGeometryFeatureHover","arcgisHubGeometryDrawCreate","arcgisHubGeometryDrawTypeSelect","arcgisHubGeometryDrawEdit","arcgisHubGeometryDrawEditCancel","arcgisHubGeometryDrawReset","arcgisHubGeometrySelect","arcgisHubGeometryDeselect","arcgisHubDiscussionsViewThread","arcgisHubDiscussionsDismiss","arcgisHubDiscussionsClose","arcgisHubFeatureRemove","arcgisHubGeometryClearAll","hubTelemetry","unsavedFeatures","unsavedRelatedFeatures","unsavedExistingFeatures","discussionDetails","error","optionsError","optionsSaving","thread","previousThread","total","nextStart","loading","showPostEditor","showOptions","bind","observer","MutationObserver","handleDOMReady","postId","prevPostId","_a","_b","postDetails","reinitialize","replyId","prevReplyId","replyDetails","locationId","prevLocationId","intlManager","element","intl","initialize","observe","disconnect","context","currentUser","fetchSubject","initThread","initPostList","enableGoTo","resetState","console","message","postAggregates","scrollTarget","start","appendResults","discussion","discussionQuery","searchPostAggregates","assign","parents","sortBy","PostSort","sortOrder","SortOrder","hubRequestOptions","items","updatedThreads","channelDetails","channelId","emit","dist","response","bust","fetchSubjectDetails","parentId","channel","channelAccess","access","subtree","childList","attributes","ResizeObserverManager","window","document","body","checkIsMobile","scrollTo","behavior","left","offsetLeft","top","offsetTop","evt","stopPropagation","event","detail","updatedThread","map","Boolean","getPostDetails","post","enrichChannelDetails","updateThreadOwnership","create","deletedPost","filter","deletedDuringSession","buildUpdatedThread","enrichPostDetails","includeReplyCount","Promise","all","creator","cloneObject","updateChannel","params","updatedChannel","selectThread","handleResetThread","selectedThread","deepLinked","shouldComminglePostList","postAggregate","reply","replyCount","parent","find","threadWithoutReplies","preventDefault","setTimeout","goToUrl","href","url","location","clientWidth","isMobile","optionsElement","value","categoryKey","type","DiscussionType","detailsKey","telemetry","action","update","label","settings","details","updateDiscussable","subject","reference","discussable","requestOptions","updateDiscussionDetails","renderError","renderOptions","renderThread","renderPostList","renderLoading","renderRequiresAuth","shouldRender","dismissible","variant","isDiscussable","ArcgisHubDiscussionsBlockedNoticeVariant","h","class","icon","scale","t","blockedNotice","captureEmptyListImpression","disabled","onClick","handleNewPost","round","description","title","heading","onCalcitePanelBackClick","handleOptionsBack","showBackButton","layout","ref","handleSaveOptions","active","closable","color","onCalciteNoticeClose","handleResetOptionsError","slot","hasMap","Fragment","appearance","width","renderEmpty","handleGeometryGoTo","text","isHub","shouldRenderOptions","classes","displayField","renderGoToAction","handleDiscussionOptionsClick","renderPostEditor","renderAddOrCreatePostButton","handleCheckStatus","handleSelectThread","disableNavigation","handleBackClick","Host","view","getElement","DebounceDecoratorFactory","timeout","prototype","callOnceFactory","style","__decorate$1","HUB_MAP_OUTLINE","ArcgisHubDiscussionsMapActionNotice","arcgisHubDrawDone","activeStyles","outline","padding","outlineOffset","el","_connect","_disconnect","keys","forEach","ui","container","add","isConnected","removeProperty","remove","styles","tabindex","handleDone","CallWhenFactory","when","hasViewUI","__decorate","ArcgisHubDiscussionsMapPreview","arcgisHubDiscussionsViewFull","arcgisHubDiscussionsGeometryZoomTo","arcgisHubDiscussionsPreviewDidRender","arcgisHubDiscussionsPreviewDismiss","creatorDetails","fullName","offsetHeight","fetchThreadByLocationId","fetchThreadByIds","emitHubTelemetry","num","enrichThreadDetails","currentPostDetails","session","portal","token","thumbnail","getUserThumbnailUrl","push","getGroupThumbnailUrl","renderAvatars","creatorFullName","dateTime","createdAt","formatStyle","innerHTML","lines","handleViewFullThread","textEnabled","handleDismiss","renderContent","propertyKey","descriptor","original","companionCalledKey","writable","companionCacheKey","args","apply","_target","_propertyKey","isTruthy","debounce","fn","timeoutId","clearTimeout","debouncedKey","toString","capabilities","resizeObserver","ResizeObserver","onResize","handlers","WeakMap","has","set","get","idx","indexOf","newHandlers","_","_idx","delete","unobserve","entries","requestAnimationFrame","e","handler","instance","addHandler","removeHandler","ArcgisHubDiscussionsBlockedNoticeConfigs","Item","EditPost","EditPostGroup","EditPostItem","EditReply","EditReplyGroup","EditReplyItem","Group","Reply","SEARCH_APIS","arcgis","arcgisQA","arcgisDEV","hub","hubDEV","hubQA","expandApi","api","valueToMatchOptions","result","Array","isArray","any","relativeDateToDateRange","relative","now","Date","from","getTime","to","unit","min","hours","days","weeks","setMonth","getMonth","setFullYear","getFullYear","getNextFunction","request","clonedRequest","authentication","UserSession","serialize","portalUrl","thumbnailUrl"],"sourceRoot":""}