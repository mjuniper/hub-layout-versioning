{"version":3,"file":"static/js/76122.cf95307c.chunk.js","mappings":"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","sources":["../node_modules/@esri/hub-components/dist/esm/arcgis-hub-discussions-post_6.entry.js","../node_modules/@esri/hub-components/dist/esm/call-once-194f02c7.js","../node_modules/@esri/hub-components/dist/esm/call-when-744df66d.js","../node_modules/@esri/hub-components/dist/esm/date-time-d2b464c4.js","../node_modules/@esri/hub-components/dist/esm/min-promise-delay-d6a589f6.js","../node_modules/@esri/hub-components/dist/esm/resources-2625913b.js","../node_modules/@esri/hub-components/dist/esm/utils-b3c19803.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, F as Fragment, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { q as cache, t as parseMentionedUsers, n as enrichPostDetails, e as enrichChannelDetails, v as removePost, w as canModifyPost, x as canDeletePost, y as searchOtherTeamMembers, z as fetchRecentChannelDetails, A as fetchTeamFromCache, B as searchChannels, C as SharingAccess, E as augmentDiscussionURIWithFeature, F as featuresToGeometryCollection, G as createPost, H as fetchChannel, d as postToFeatures, I as updatePost, i as parseDiscussionURI, M as MAX_TITLE_LENGTH, J as MAX_BODY_LENGTH, W as WARNING_BODY_LENGTH, l as isDiscussable, K as createReply } from './discussions-c83a0f6c.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport { d as dist } from './index-910a8794.js';\nimport { a as autoLink } from './string-dcf03d71.js';\nimport { S as Sanitizer } from './index-16b1ebce.js';\nimport { c as callOnceFactory } from './call-once-194f02c7.js';\nimport { T as TIME_UNIT, a as TIME_INTERVAL } from './date-time-d2b464c4.js';\nimport { m as minPromiseDelayFactory } from './min-promise-delay-d6a589f6.js';\nimport { C as CallWhenFactory } from './call-when-744df66d.js';\nimport { A as ArcgisHubDiscussionsBlockedNoticeVariant } from './resources-2625913b.js';\nimport { c as cloneObject } from './util-3c40fe6c.js';\nimport { g as getGroupThumbnailUrl, a as getUserThumbnailUrl } from './utils-b3c19803.js';\nimport './getPortalBaseFromOrgUrl-6a5781aa.js';\nimport './tslib.es6-3669ad41.js';\nimport './get-portal-url-423a76f5.js';\nimport './clean-url-be7c0879.js';\nimport './request-c15cc2af.js';\nimport './get-859a2960.js';\nimport './append-custom-params-fd9b7e72.js';\nimport './get-portal-06f7947b.js';\nimport './query-15c2c6ed.js';\nimport './tslib.es6-b2e8cdb8.js';\nimport './fetch-e59da0af.js';\nimport './tslib.es6-e75776ba.js';\nimport './_enrichments-7716cdcc.js';\nimport './get-with-default-6db049d8.js';\nimport './get-prop-d82e4fa6.js';\nimport './_internal-89d3dc92.js';\nimport './extent-0f42acfc.js';\nimport './helpers-a80c0291.js';\nimport './OperationError-85fd80c7.js';\nimport './get-f2cd18e7.js';\nimport './getService-49b539e3.js';\nimport './slugs-150ad0db.js';\nimport './is-guid-8127621d.js';\nimport './request-f9ca03b5.js';\nimport './api-196fe0e3.js';\nimport './get-portal-api-url-ccd8fd10.js';\nimport './compose-bfd77ec4.js';\nimport './get-structured-license-d1e63636.js';\nimport './get-item-thumbnail-url-7e5ae2fd.js';\nimport './get-item-home-url-9ff2898b.js';\nimport './update-fec93fc5.js';\nimport './index-4e91769f.js';\nimport './_commonjsHelpers-11ca3be1.js';\nimport './UserSession-d3a97494.js';\n\n/* eslint-disable no-unused-vars */\n/**\n * A decorator factory function that accepts the cache decorator configuration params\n *\n * @param params An ICacheDecoratorParams object\n * @returns The cache decorator function\n */\nfunction CacheDecoratorFactory(params) {\n  /**\n   * A decorator function that augments a class method with client caching behavior\n   *\n   * @param _target A reference to the class prototype\n   * @param _propertyKey The name of the method being decorated\n   * @param descriptor A PropertyDescriptor for the method being decorated\n   * @returns A new PropertyDescriptor that aguments the decorated method with caching behavior\n   */\n  function CacheDecorator(_target, _propertyKey, descriptor) {\n    const value = cache(descriptor.value, params);\n    return Object.assign(Object.assign({}, descriptor), { value });\n  }\n  return CacheDecorator;\n}\n\n/**\n * A decorator factory function that accepts the auto link decorator configuration params\n *\n * @returns The cache decorator function\n */\nfunction AutoLinkDecoratorFactory(options) {\n  /**\n   * A decorator function that augments a class method with an auto link transformation that converts\n   * URLs in plain text to either an anchor or calcite-link\n   *\n   * @param _target A reference to the class prototype\n   * @param _propertyKey The name of the method being decorated\n   * @param descriptor A PropertyDescriptor for the method being decorated\n   * @returns A new PropertyDescriptor that aguments the decorated method with auto linking behavior\n   */\n  function AutoLinkDecorator(_target, _propertyKey, descriptor) {\n    const { value: original } = descriptor;\n    const value = function AutoLink(...args) {\n      const result = original.apply(this, args);\n      return autoLink(result, options);\n    };\n    return Object.assign(Object.assign({}, descriptor), { value });\n  }\n  return AutoLinkDecorator;\n}\n\n/**\n * A decorator factory function that accepts the auto link decorator configuration params\n *\n * @returns The cache decorator function\n */\nfunction SanitizeDecoratorFactory(options) {\n  const sanitizer = new Sanitizer(options === null || options === void 0 ? void 0 : options.filterOptions, options === null || options === void 0 ? void 0 : options.extendDefaults);\n  /**\n   * A decorator function that augments a class method with a sanitizing transformation\n   *\n   * @param _target A reference to the class prototype\n   * @param _propertyKey The name of the method being decorated\n   * @param descriptor A PropertyDescriptor for the method being decorated\n   * @returns A new PropertyDescriptor that aguments the decorated method with sanitizing behavior\n   */\n  function AutoLinkDecorator(_target, _propertyKey, descriptor) {\n    const { value: original } = descriptor;\n    const value = function Sanitize(...args) {\n      const result = original.apply(this, args);\n      return sanitizer.sanitize(result);\n    };\n    return Object.assign(Object.assign({}, descriptor), { value });\n  }\n  return AutoLinkDecorator;\n}\n\nconst MENTION_ATTRIBUTE = \"data-mention\";\nconst MENTION_ELEMENTS_PATTERN = new RegExp(`<[a-z-]+( [a-z-]+(=('|\")[\\\\w- ]+('|\"))?)*( ${MENTION_ATTRIBUTE}=('|\")(\\\\w)+('|\"))( [a-z-]+(=('|\")[\\\\w- ]+('|\"))?)*>@\\\\w+<\\/[a-z-]+>`, 'g');\nconst getMentionedUser = (match, mentionedUsers) => {\n  const username = parseMentionedUsers(match)[0];\n  return mentionedUsers.find(userDetails => userDetails.user.username === username);\n};\nfunction mentionPopoverTransform(input, postDetails, channel, session, originalPostId) {\n  const transform = (input = '', postDetails, channel, session, originalPostId) => {\n    var _a;\n    const matches = input.match(MENTION_ELEMENTS_PATTERN);\n    if (!matches) {\n      return input;\n    }\n    else {\n      const [match] = matches;\n      const startIdx = input.indexOf(match);\n      const endIdx = startIdx + match.length;\n      const before = startIdx > 0 ? input.substring(0, startIdx) : '';\n      const toReplace = input.substring(startIdx, startIdx + match.length);\n      const mentionedUser = getMentionedUser(toReplace, postDetails.mentionedUsers);\n      const replaced = toReplace.replace(match, `<arcgis-hub-discussions-mention-popover\n          access=\"${mentionedUser.user.access}\"\n          channel-access=\"${channel.access}\"\n          channel-id=\"${channel.id}\"\n          creator-username=\"${postDetails.creatorDetails.user.username || postDetails.post.creator}\"\n          full-name=\"${mentionedUser.user.fullName}\"\n          organization=\"${(_a = mentionedUser.organization) === null || _a === void 0 ? void 0 : _a.name}\"\n          parent-id=\"${originalPostId !== null && originalPostId !== void 0 ? originalPostId : \"\"}\"\n          portal=\"${session.portal}\"\n          post-id=\"${postDetails.post.id}\"\n          region=\"${mentionedUser.user.region}\"\n          thumbnail=\"${mentionedUser.user.thumbnail}\"\n          token=\"${session.token}\"\n          user-id=\"${mentionedUser.user.id}\"\n          username=\"${mentionedUser.user.username}\"\n        >${match}</arcgis-hub-discussions-mention-popover>`);\n      return before + replaced + transform(input.substring(endIdx), postDetails, channel, session, originalPostId);\n    }\n  };\n  return transform(input, postDetails, channel, session, originalPostId);\n}\n\nfunction MentionPopoverTransformDecoratorFactory() {\n  function MentionPopoverTransformDecorator(_target, _propertyKey, descriptor) {\n    const { value: original } = descriptor;\n    const value = function MentionPopoverTransform(...args) {\n      const result = original.apply(this, args);\n      return mentionPopoverTransform(result, this.replyDetails ? this.replyDetails : this.postDetails, this.channelDetails.channel, this.context.session, this.replyDetails ? this.postDetails.postId : null);\n    };\n    return Object.assign(Object.assign({}, descriptor), { value });\n  }\n  return MentionPopoverTransformDecorator;\n}\n\nconst arcgisHubDiscussionsPostCss = \".sc-arcgis-hub-discussions-post-h{display:block;background-color:var(--calcite-ui-foreground-1)}arcgis-hub-discussions-post-header.sc-arcgis-hub-discussions-post{margin-left:1rem;margin-right:1rem;margin-bottom:0.5rem}header.sc-arcgis-hub-discussions-post{margin-left:1rem;margin-right:1rem;margin-bottom:0.25rem;overflow-wrap:break-word;font-size:var(--calcite-font-size-1);line-height:1.5rem;font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-1)}arcgis-multiline-ellipsis.sc-arcgis-hub-discussions-post{margin:0px;margin-left:1rem;margin-right:1rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}footer.sc-arcgis-hub-discussions-post{display:grid;grid-template-columns:auto 48px}arcgis-hub-discussions-post-editor.sc-arcgis-hub-discussions-post{margin-top:0px;margin-bottom:0px}calcite-notice.sc-arcgis-hub-discussions-post{margin-left:1rem;margin-right:1rem;margin-bottom:1.5rem}footer.sc-arcgis-hub-discussions-post+calcite-notice.sc-arcgis-hub-discussions-post{margin-top:1rem}arcgis-hub-discussions-post-skeleton.sc-arcgis-hub-discussions-post{margin-left:1rem;margin-right:1rem}arcgis-hub-discussions-post-geography[loading].sc-arcgis-hub-discussions-post{margin-left:1rem;margin-right:1rem}#text-actions.sc-arcgis-hub-discussions-post{margin-left:0.5rem}calcite-popover[data-popper-placement][data-popper-reference-hidden].sc-arcgis-hub-discussions-post{pointer-events:auto;opacity:1}calcite-popover.sc-arcgis-hub-discussions-post{pointer-events:auto !important}.discussions-post-action-menu.sc-arcgis-hub-discussions-post:active .discussions-post-action-menu-icon.sc-arcgis-hub-discussions-post{--tw-text-opacity:1;color:rgb(21 21 21 / var(--tw-text-opacity))}.discussions-post-action-menu-options.sc-arcgis-hub-discussions-post:active{--tw-text-opacity:1;color:rgb(21 21 21 / var(--tw-text-opacity))}.discussions-post-action-menu-options.sc-arcgis-hub-discussions-post:active .discussions-post-action-menu-options-icon.sc-arcgis-hub-discussions-post{--tw-text-opacity:1;color:rgb(21 21 21 / var(--tw-text-opacity))}.discussions-post-replies.sc-arcgis-hub-discussions-post:active{--tw-text-opacity:1;color:rgb(21 21 21 / var(--tw-text-opacity))}.discussions-post-replies.sc-arcgis-hub-discussions-post:active .discussions-post-replies-icon.sc-arcgis-hub-discussions-post{--tw-text-opacity:1;color:rgb(21 21 21 / var(--tw-text-opacity))}\";\n\nvar __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar PostView;\n(function (PostView) {\n  PostView[\"Skeleton\"] = \"skeleton\";\n  PostView[\"Content\"] = \"content\";\n  PostView[\"Editor\"] = \"editor\";\n  PostView[\"Deleted\"] = \"deleted\";\n})(PostView || (PostView = {}));\nconst ArcgisHubDiscussionsPost = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubDiscussionsPostDelete = createEvent(this, \"arcgisHubDiscussionsPostDelete\", 7);\n    this.arcgisHubDiscussionsPostSelect = createEvent(this, \"arcgisHubDiscussionsPostSelect\", 7);\n    this.arcgisHubDiscussionsGeometryDrawReset = createEvent(this, \"arcgisHubDiscussionsGeometryDrawReset\", 7);\n    this.arcgisHubDiscussionsGeometryDeselect = createEvent(this, \"arcgisHubDiscussionsGeometryDeselect\", 7);\n    this.arcgisHubDiscussionsPostUpdate = createEvent(this, \"arcgisHubDiscussionsPostUpdate\", 7);\n    this.arcgisHubDiscusssionsChannelUpdate = createEvent(this, \"arcgisHubDiscusssionsChannelUpdate\", 7);\n    this.arcgisHubDiscussionsScrollTo = createEvent(this, \"arcgisHubDiscussionsScrollTo\", 7);\n    this.hubTelemetry = createEvent(this, \"hubTelemetry\", 7);\n    /**\n     * Feature geometry edits for existing post locations\n     */\n    this.unsavedExistingFeatures = [];\n    /**\n     * Whether the component should show it's skeleton state\n     */\n    this.loading = true;\n    /**\n     * The user elected to edit the post\n     */\n    this.editing = false;\n    /**\n     * An event failed\n     */\n    this.errorMessage = null;\n    bind(this, 'handleDelete', 'handleEdit', 'handleViewThread', 'handleReply', 'handleViewReplies', 'handleLinkClicked', 'renderDeleted', 'renderPost', 'renderEditor', 'renderSkeleton');\n  }\n  componentWillLoad() {\n    this.initialize();\n  }\n  componentDidLoad() {\n    if (this.autoFocus) {\n      this.arcgisHubDiscussionsScrollTo.emit();\n    }\n  }\n  /**\n   * Updates loading state when intl or postDetails\n   * are updated\n   */\n  handleDetailsUpdates() {\n    this.addEnrichments();\n  }\n  handlePostEdited() {\n    this.editing = false;\n  }\n  handlePostCancelled(evt) {\n    evt.stopPropagation();\n    this.editing = false;\n    this.arcgisHubDiscussionsGeometryDrawReset.emit();\n    this.arcgisHubDiscussionsGeometryDeselect.emit();\n  }\n  handleMultilineEllipsisExpanded(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.handleViewThread();\n  }\n  handleCalcitePopoverOpen(evt) {\n    var _a;\n    const { open } = evt.target;\n    if (evt.target !== this.menuPopoverElement && ((_a = this.menuPopoverElement) === null || _a === void 0 ? void 0 : _a.open)) {\n      this.menuPopoverElement.toggle();\n    }\n    else if (evt.target === this.menuPopoverElement && open) {\n      const { index } = this;\n      this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.open.label.popover.details.options), { position: index }));\n    }\n  }\n  emitHubTelemetry(telemetry) {\n    const { postDetails: { postId }, channelDetails: { channel } } = this;\n    this.hubTelemetry.emit(Object.assign(Object.assign({}, telemetry), { postId, channelId: channel.id, channelAccess: channel.access }));\n  }\n  /**\n   * Initiates post details enrichmentment, initializes\n   * loading state, and loads localizations\n   */\n  async initialize() {\n    const { element } = this;\n    this.addEnrichments();\n    this.intl = await intlManager.loadIntlForComponent(element);\n  }\n  addEnrichments() {\n    const { isPostEnriched, isChannelEnriched, postDetails: { postId }, channelDetails: { channelId } } = this;\n    if (!isPostEnriched && postId) {\n      this.enrichPostDetails();\n    }\n    if (!isChannelEnriched && channelId) {\n      this.enrichChannelDetails();\n    }\n    this.updateLoading();\n  }\n  updateLoading() {\n    const { isEnriched } = this;\n    this.loading = !isEnriched;\n  }\n  /**\n   * Enriches post details and emits arcgisHubDiscussionsPostUpdate so\n   * upstream state is updated\n   */\n  async enrichPostDetails() {\n    const { postDetails: rawPostDetails, context } = this;\n    const postDetails = await enrichPostDetails(Object.assign({ postDetails: rawPostDetails, includeReplyCount: true }, context.hubRequestOptions));\n    this.arcgisHubDiscussionsPostUpdate.emit(postDetails);\n  }\n  /**\n   * Enriches channel details and emits arcgisHubDiscusssionsChannelUpdate so\n   * upstream state is updated\n   */\n  async enrichChannelDetails() {\n    const { context, postDetails, channelDetails: _channelDetails } = this;\n    const channelDetails = await enrichChannelDetails(Object.assign({ channelDetails: _channelDetails }, context.hubRequestOptions));\n    this.arcgisHubDiscusssionsChannelUpdate.emit({\n      postId: postDetails.postId,\n      channelDetails\n    });\n  }\n  /**\n   * Sanitizes body text and renders urls as links. Caches post body so operation is only performed as needed.\n   * @returns string: body text of a post with urls rendered as calcite-links\n   */\n  computePostBody() {\n    return this.postDetails.post.body;\n  }\n  computePostTitle() {\n    return this.postDetails.post.title;\n  }\n  handleDelete() {\n    const { context, postDetails: { post }, menuPopoverElement } = this;\n    this.errorMessage = null;\n    if (menuPopoverElement === null || menuPopoverElement === void 0 ? void 0 : menuPopoverElement.toggle) {\n      menuPopoverElement.toggle();\n    }\n    return removePost(Object.assign({ postId: post.id }, context.hubRequestOptions))\n      .then(() => {\n      this.deletedDuringSession = true;\n      this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.content.action.delete), { response: dist.constants.response.SUCCESS }));\n      this.arcgisHubDiscussionsPostDelete.emit(post);\n    })\n      .catch(e => {\n      this.errorMessage = 'deleteFailure';\n      this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.content.action.delete), { response: dist.constants.response.FAILURE }));\n      console.error(`Could not delete post:`, e.message);\n    });\n  }\n  handleEdit() {\n    const { index } = this;\n    this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.open.label.editor), { position: index }));\n    this.editing = true;\n  }\n  handleViewThread() {\n    const { index } = this;\n    this.arcgisHubDiscussionsPostSelect.emit();\n    if (index !== undefined) {\n      this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.open.label.thread), { position: index }));\n    }\n  }\n  handleReply() {\n    this.arcgisHubDiscussionsPostSelect.emit(\"editor\");\n    this.emitHubTelemetry(dist.dictionary.category.interaction.action.open.label.editor.details.reply);\n  }\n  handleViewReplies() {\n    this.arcgisHubDiscussionsPostSelect.emit(\"list\");\n    this.emitHubTelemetry(dist.dictionary.category.interaction.action.open.label.thread.details.bodyAction);\n  }\n  handleLinkClicked(evt) {\n    const el = evt.target;\n    if (['CALCITE-LINK'].includes(el.nodeName) && !el.hasAttribute(\"data-mention\")) {\n      const { postDetails: { postId }, channelDetails: { channel }, index } = this;\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.navigation.action.external.label.link), { details: el.href, postId: postId, channelId: channel.id, channelAccess: channel.access, position: index }));\n    }\n  }\n  capturePostDeepLinkImpression() {\n    this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.viewed.label.post.details.thread), { response: dist.constants.response.SUCCESS }));\n  }\n  capturePostListImpression() {\n    this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.viewed.label.post.details.postList), { position: this.index }));\n  }\n  capturePostDeletedImpression() {\n    this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.viewed.label.post.details.thread), { response: dist.constants.response.FAILURE }));\n  }\n  /**\n   * Computes if the post details are enriched\n   */\n  get isPostEnriched() {\n    const { postDetails: { creatorDetails, post } } = this;\n    const requiredEnrichments = [\n      creatorDetails === null || creatorDetails === void 0 ? void 0 : creatorDetails.username,\n      creatorDetails === null || creatorDetails === void 0 ? void 0 : creatorDetails.user,\n      creatorDetails === null || creatorDetails === void 0 ? void 0 : creatorDetails.organization\n    ];\n    const isNotUndefined = (val) => val !== undefined;\n    return (post === null) || requiredEnrichments.every(isNotUndefined);\n  }\n  /**\n   * Computes if the channel details are enriched\n   */\n  get isChannelEnriched() {\n    const { channelDetails: { channel, groups } } = this;\n    const isNotUndefined = (value) => value !== undefined;\n    const requiredValues = [channel, groups];\n    return requiredValues.every(isNotUndefined);\n  }\n  /**\n   * Computes if all required enrichments are present\n   */\n  get isEnriched() {\n    const { intl, isPostEnriched, isChannelEnriched } = this;\n    return Boolean(intl) && isPostEnriched && isChannelEnriched;\n  }\n  get views() {\n    const { renderEditor, renderDeleted, renderPost, renderSkeleton } = this;\n    return {\n      [PostView.Skeleton]: {\n        render: renderSkeleton\n      },\n      [PostView.Content]: {\n        render: renderPost\n      },\n      [PostView.Editor]: {\n        render: renderEditor\n      },\n      [PostView.Deleted]: {\n        render: renderDeleted\n      }\n    };\n  }\n  get view() {\n    const { views, postDetails, editing, loading } = this;\n    let target;\n    if (loading) {\n      target = PostView.Skeleton;\n    }\n    else if (!postDetails.post) {\n      target = PostView.Deleted;\n    }\n    else if (editing) {\n      target = PostView.Editor;\n    }\n    else {\n      target = PostView.Content;\n    }\n    return views[target];\n  }\n  renderEditor() {\n    const { context, hasMap, index, isHub, unsavedFeatures, unsavedRelatedFeatures, unsavedExistingFeatures, postDetails, channelDetails, discussionDetails, isMobile } = this;\n    return (h(\"arcgis-hub-discussions-post-editor\", { channelDetails: channelDetails, context: context, discussionDetails: discussionDetails, hasMap: hasMap, index: index, isHub: isHub, isMobile: isMobile, postDetails: postDetails, unsavedExistingFeatures: unsavedExistingFeatures, unsavedFeatures: unsavedFeatures, unsavedRelatedFeatures: unsavedRelatedFeatures }));\n  }\n  renderPost() {\n    var _a;\n    const { intl, errorMessage, hasMap, isHub, context, preview, postDetails, channelDetails, index, discussionDetails, unsavedFeatures, unsavedRelatedFeatures, unsavedExistingFeatures, isMobile } = this;\n    const isRtl = intl.direction === 'rtl';\n    const icon = isRtl ? 'arrow-left' : 'arrow-right';\n    (index === undefined)\n      ? this.capturePostDeepLinkImpression()\n      : this.capturePostListImpression();\n    return (h(\"article\", null, h(\"arcgis-hub-discussions-post-header\", { channelDetails: channelDetails, context: context, index: index, isHub: isHub, postDetails: postDetails }), h(\"header\", { innerHTML: this.computePostTitle() }), h(\"arcgis-multiline-ellipsis\", { \"expand-enabled\": preview, \"expand-icon\": icon, innerHTML: this.computePostBody(), lines: preview ? 4 : 0, onClick: this.handleLinkClicked }), preview && this.renderTextActions(), h(\"arcgis-hub-discussions-post-geography\", { channelDetails: channelDetails, context: context, discussionDetails: discussionDetails, expandable: preview, hasMap: hasMap, isMobile: isMobile, postDetails: postDetails, unsavedExistingFeatures: unsavedExistingFeatures, unsavedFeatures: unsavedFeatures, unsavedRelatedFeatures: unsavedRelatedFeatures, url: (_a = discussionDetails === null || discussionDetails === void 0 ? void 0 : discussionDetails.reference) === null || _a === void 0 ? void 0 : _a.url }), h(\"footer\", null, this.renderActionGroup(), this.renderActionMenu()), errorMessage && (h(\"calcite-notice\", { active: true, color: \"red\", dismissible: true, scale: \"s\" }, h(\"div\", { slot: \"title\" }, intl.t('error')), h(\"div\", { slot: \"message\" }, intl.t(errorMessage))))));\n  }\n  renderTextActions() {\n    const { intl, channelDetails: { groups } } = this;\n    return (h(\"calcite-action-group\", { id: \"text-actions\", layout: \"horizontal\" }, Boolean(groups.length) && (h(\"calcite-action\", { onClick: this.handleReply, scale: 's', text: intl.t('actions.reply'), textEnabled: true })), h(\"calcite-action\", { onClick: this.handleViewReplies, scale: 's', text: intl.t('actions.view'), textEnabled: true })));\n  }\n  renderActionMenu() {\n    const { intl, context, postDetails: { post }, channelDetails: { channel, groups } } = this;\n    const actions = [];\n    if (groups.length && canModifyPost(post, context.currentUser)) {\n      actions.push({\n        icon: 'pencil',\n        text: intl.t('edit'),\n        fn: this.handleEdit\n      });\n    }\n    if (canDeletePost(post, channel, context.currentUser)) {\n      actions.push({\n        icon: 'trash',\n        text: intl.t('delete'),\n        fn: this.handleDelete\n      });\n    }\n    if (actions.length) {\n      return (h(Fragment, null, h(\"calcite-action\", { class: \"discussions-post-action-menu\", ref: (menuActionElement) => { this.menuActionElement = menuActionElement; }, text: intl.t('options') }, h(\"calcite-icon\", { class: \"discussions-post-action-menu-icon\", icon: \"ellipsis\", scale: \"s\" })), h(\"calcite-popover\", { autoClose: true, disablePointer: true, flipPlacements: [\"top\", \"bottom\"], label: intl.t('options'), offsetDistance: 0, placement: \"bottom-end\", ref: (menuPopoverElement) => { this.menuPopoverElement = menuPopoverElement; }, referenceElement: this.menuActionElement }, h(\"calcite-action-group\", { layout: \"vertical\" }, actions.map(({ text, fn, icon }) => (h(\"calcite-action\", { class: \"discussions-post-action-menu-options\", \"data-action\": text.toLowerCase(), id: \"discussions-post-action-menu-option-\" + icon, key: icon, onClick: fn, scale: \"m\", text: text, \"text-enabled\": \"true\" }, h(\"calcite-icon\", { class: \"discussions-post-action-menu-options-icon\", icon: icon, scale: \"s\" }))))))));\n    }\n  }\n  renderActionGroup() {\n    const { intl, preview, linkToThread, postDetails: { post } } = this;\n    // TODO: update calcite-action[text] attributes w/ localized strings\n    return (h(\"calcite-action-group\", { layout: \"horizontal\" }, h(\"calcite-action\", { appearance: \"solid\", class: \"discussions-post-replies\", disabled: !preview && !linkToThread, label: intl.t('numReplies'), onClick: this.handleViewThread, scale: \"m\", text: post.replyCount.toString(), \"text-enabled\": \"true\" }, h(\"calcite-icon\", { class: \"discussions-post-replies-icon\", icon: \"speech-bubble\", scale: \"s\" }))));\n  }\n  renderDeleted() {\n    const { intl, deletedDuringSession } = this;\n    if (!deletedDuringSession) {\n      this.capturePostDeletedImpression();\n    }\n    return (h(\"calcite-notice\", { active: true, color: \"red\", scale: \"m\" }, h(\"div\", { slot: \"title\" }, intl.t('deleted.title')), h(\"div\", { slot: \"message\" }, intl.t('deleted.message'))));\n  }\n  renderSkeleton() {\n    return h(\"arcgis-hub-discussions-post-skeleton\", null);\n  }\n  render() {\n    return (h(Host, { \"data-element\": \"discussions-post\" }, this.view.render()));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"intl\": [\"handleDetailsUpdates\"],\n    \"postDetails\": [\"handleDetailsUpdates\"],\n    \"channelDetails\": [\"handleDetailsUpdates\"]\n  }; }\n};\n__decorate$3([\n  CacheDecoratorFactory({\n    scope: 'arcgis-hub-discussions-post-body',\n    getKey() {\n      const { postDetails: { postId, post: { body } } } = this;\n      return body !== null && body !== void 0 ? body : postId;\n    }\n  }),\n  AutoLinkDecoratorFactory({ calcite: true }),\n  MentionPopoverTransformDecoratorFactory(),\n  SanitizeDecoratorFactory({\n    filterOptions: {\n      whiteList: {\n        'calcite-link': ['href', 'data-mention']\n      }\n    },\n    extendDefaults: true\n  })\n], ArcgisHubDiscussionsPost.prototype, \"computePostBody\", null);\n__decorate$3([\n  CacheDecoratorFactory({\n    scope: 'arcgis-hub-discussions-post-title',\n    getKey() {\n      const { postDetails: { postId, post: { title } } } = this;\n      return title !== null && title !== void 0 ? title : postId;\n    }\n  }),\n  SanitizeDecoratorFactory()\n], ArcgisHubDiscussionsPost.prototype, \"computePostTitle\", null);\n__decorate$3([\n  callOnceFactory()\n], ArcgisHubDiscussionsPost.prototype, \"capturePostDeepLinkImpression\", null);\n__decorate$3([\n  callOnceFactory()\n], ArcgisHubDiscussionsPost.prototype, \"capturePostListImpression\", null);\n__decorate$3([\n  callOnceFactory()\n], ArcgisHubDiscussionsPost.prototype, \"capturePostDeletedImpression\", null);\nArcgisHubDiscussionsPost.style = arcgisHubDiscussionsPostCss;\n\n/**\n * Steps of original post authoring\n */\nvar STEP;\n(function (STEP) {\n  STEP[\"AUDIENCE\"] = \"audience\";\n  STEP[\"CONTENT\"] = \"content\";\n})(STEP || (STEP = {}));\n\nconst arcgisHubDiscussionsPostEditorCss = \".hub-discussions-post-editor{margin-top:1.5rem;margin-bottom:1.5rem;margin-left:0.75rem;margin-right:0.75rem;display:block;border-radius:0.25rem;padding:0.75rem;--tw-shadow:0 2px 8px 0 rgba(0, 0, 0, 0.12);--tw-shadow-colored:0 2px 8px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.hub-discussions-post-editor-header{margin-bottom:1.5rem;display:grid;grid-template-rows:repeat(1, minmax(0, 1fr));align-items:center;-moz-column-gap:0.75rem;column-gap:0.75rem;grid-template-columns:44px auto 44px}.hub-discussions-post-editor-header__title{margin:0px;text-align:center;font-size:var(--calcite-font-size-1);line-height:1.5rem;font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-1)}.hub-discussions-post-editor-header__popover{padding:1rem;margin-top:revert;margin-bottom:revert}.hub-discussions-post-editor-recent__header{margin-top:1.5rem;margin-bottom:0.75rem;font-size:var(--calcite-font-size--1);line-height:1rem;font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-1)}.hub-discussions-post-editor-groups__action{margin-top:0.75rem}.hub-discussions-post-editor-recent__list{margin-top:0px;margin-bottom:0px;list-style-type:none;padding:0px}.hub-discussions-post-editor-recent__item{margin-bottom:0.75rem;margin-top:0px;display:grid;grid-auto-flow:column;grid-template-rows:repeat(2, minmax(0, 1fr));-moz-column-gap:0.75rem;column-gap:0.75rem;grid-template-columns:44px auto 44px}.hub-discussions-post-editor-recent__item:last-child{margin-bottom:0px}.hub-discussions-post-editor-recent__avatar{grid-row:span 2 / span 2}.hub-discussions-post-editor-recent__title{font-weight:var(--calcite-font-weight-bold);overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1}.hub-discussions-post-editor-recent__last-activity{font-size:var(--calcite-font-size--1);line-height:1rem;font-style:normal;color:var(--calcite-ui-text-2)}.hub-discussions-post-editor-recent__action{grid-row:span 2 / span 2}.hub-discussions-post-editor-post-actions,.hub-discussions-post-editor-geometry-actions{margin-top:1rem;display:flex;justify-content:flex-end}.hub-discussions-post-editor-post-actions>calcite-action{margin-right:auto}.hub-discussions-post-editor-geometry-actions__feature,.hub-discussions-post-editor-geometry-actions__related,.hub-discussions-post-editor-post-actions__primary,.hub-discussions-post-editor-post-actions__secondary{margin-left:0.75rem}.hub-discussions-post-editor__title{margin:0px;margin-top:1rem;height:auto;width:100%;resize:none;border-style:none;background-color:var(--calcite-ui-foreground-1);padding:0px;font-size:var(--calcite-font-size-1);line-height:1.5rem;font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-1);--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.hub-discussions-post-editor__title:focus{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);outline:2px solid transparent;outline-offset:2px}.hub-discussions-post-editor .hub-discussions-post-editor__title::-moz-placeholder{color:var(--calcite-ui-text-3);opacity:1}.hub-discussions-post-editor .hub-discussions-post-editor__title:-ms-input-placeholder{color:var(--calcite-ui-text-3);opacity:1}.hub-discussions-post-editor .hub-discussions-post-editor__title::placeholder{color:var(--calcite-ui-text-3);opacity:1}.hub-discussions-post-editor__body{margin-top:0.5rem}.hub-discussions-post-editor__body[scale=m] .ck.ck-editor__editable{border-style:none;background-color:var(--calcite-ui-foreground-1);padding:0px;font-size:var(--calcite-font-size-0);line-height:1.25rem;color:var(--calcite-ui-text-1);outline:2px solid transparent;outline-offset:2px;min-height:6rem}.hub-discussions-post-editor__body .ck.ck-editor__editable.ck-focused:not(.ck-editor__nested-editable){border-style:none;outline:2px solid transparent;outline-offset:2px}.hub-discussions-post-editor__body[scale=m] .ck.ck-editor__editable .ck-placeholder:before{color:var(--calcite-ui-text-3)}.hub-discussions-post-editor__body .ck.ck-editor__editable_inline>:first-child{margin-top:0px}.hub-discussions-post-editor__body .ck.ck-editor__editable_inline>:last-child{margin-bottom:0px}.hub-discussions-post-editor__message{margin-top:0.5rem}.hub-discussions-post-editor__empty,.hub-discussions-post-editor__load-error{margin-top:1rem}.hub-discussions-post-editor__crud-error,.hub-discussions-post-editor__not-discussable-notice{margin-top:1rem}.hub-discussions-post-editor-cancel-confirm__header{margin:0px;display:block;font-size:var(--calcite-font-size-1);line-height:1.5rem;font-weight:var(--calcite-font-weight-bold)}.hub-discussions-post-editor-cancel-confirm__message{margin-top:0.5rem;margin-bottom:0px}.hub-discussions-post-editor-cancel-confirm__footer{margin-top:1.5rem;display:grid;grid-auto-flow:column;grid-template-columns:repeat(2, minmax(0, 1fr));-moz-column-gap:0.75rem;column-gap:0.75rem}.hub-discussions-post-editor-recent__skeleton{margin-bottom:0.75rem;margin-top:0px}.hub-discussions-post-editor-recent__skeleton arcgis-skeleton-loader{display:flex}@-webkit-keyframes shimmer{0%{background-size:200% 100%;background-position:100% 0}100%{background-size:200% 100%;background-position:-100% 0}}@keyframes shimmer{0%{background-size:200% 100%;background-position:100% 0}100%{background-size:200% 100%;background-position:-100% 0}}.hub-discussions-post-editor-recent__skeleton arcgis-skeleton-loader>div:nth-of-type(1),.hub-discussions-post-editor-recent__skeleton arcgis-skeleton-loader>div:nth-of-type(2) div{-webkit-animation:shimmer 2s cubic-bezier(0.4, 0, 0.2, 0.8) infinite;animation:shimmer 2s cubic-bezier(0.4, 0, 0.2, 0.8) infinite;background-image:linear-gradient(90deg, rgba(255, 255, 255, 0) 0, rgba(255, 255, 255, 0) 40%, rgba(255, 255, 255, 0.6) 50%, rgba(255, 255, 255, 0) 60%, rgba(255, 255, 255, 0) 100%);background-color:var(--calcite-ui-foreground-2)}.hub-discussions-post-editor-recent__skeleton arcgis-skeleton-loader>div:nth-of-type(1){height:2.75rem;width:2.75rem;border-radius:50%}.hub-discussions-post-editor-recent__skeleton arcgis-skeleton-loader>div:nth-of-type(2){margin-left:1rem;display:flex;flex-grow:1;flex-direction:column;justify-content:center}.hub-discussions-post-editor-recent__skeleton arcgis-skeleton-loader>div:nth-of-type(2) div:nth-of-type(1){margin-bottom:0.5rem;height:0.75rem;border-radius:0.375rem}.hub-discussions-post-editor-recent__skeleton arcgis-skeleton-loader>div:nth-of-type(2) div:nth-of-type(2){height:0.5rem;border-radius:0.25rem}.location-popover>div.popover,.popover{max-width:20rem;padding-top:0.75rem;padding-bottom:0.75rem;padding-left:1.25rem;padding-right:1.25rem}.add-location-post:active .add-location-icon{--tw-text-opacity:1;color:rgb(21 21 21 / var(--tw-text-opacity))}.add-location-post[active] .add-location-icon{--tw-text-opacity:1;color:rgb(21 21 21 / var(--tw-text-opacity))}\";\n\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst ArcgisHubDiscussionsPostEditor = class {\n  /**\n   * Constructor function, pre-binds context to relevant methods\n   */\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubDiscussionsPostCancel = createEvent(this, \"arcgisHubDiscussionsPostCancel\", 7);\n    this.arcgisHubDiscussionsPostCreate = createEvent(this, \"arcgisHubDiscussionsPostCreate\", 7);\n    this.arcgisHubDiscussionsPostEdit = createEvent(this, \"arcgisHubDiscussionsPostEdit\", 7);\n    this.arcgisHubDiscussionsGeometryDrawCreate = createEvent(this, \"arcgisHubDiscussionsGeometryDrawCreate\", 7);\n    this.arcgisHubDiscussionsGeometryDrawTypeSelect = createEvent(this, \"arcgisHubDiscussionsGeometryDrawTypeSelect\", 7);\n    this.arcgisHubDiscussionsGeometryDrawEdit = createEvent(this, \"arcgisHubDiscussionsGeometryDrawEdit\", 7);\n    this.arcgisHubDiscussionsGeometryDrawReset = createEvent(this, \"arcgisHubDiscussionsGeometryDrawReset\", 7);\n    this.arcgisHubDiscussionsGeometrySelect = createEvent(this, \"arcgisHubDiscussionsGeometrySelect\", 7);\n    this.arcgisHubDiscussionsGeometryDeselect = createEvent(this, \"arcgisHubDiscussionsGeometryDeselect\", 7);\n    this.arcgisHubDiscussionsGeometryClearAll = createEvent(this, \"arcgisHubDiscussionsGeometryClearAll\", 7);\n    this.hubTelemetry = createEvent(this, \"hubTelemetry\", 7);\n    /**\n     * New features (geometry) unsaved for location updates\n     */\n    this.unsavedFeatures = [];\n    /**\n     * New related features unsaved for location updates\n     */\n    this.unsavedRelatedFeatures = [];\n    /**\n     * Feature geometry edits for existing post locations\n     */\n    this.unsavedExistingFeatures = [];\n    /**\n     * Internal feature state tracking\n     */\n    this._unsavedFeatures = [];\n    /**\n     * Internal related feature state tracking\n     */\n    this._unsavedRelatedFeatures = [];\n    /**\n     * Internal existing feature state tracking\n     */\n    this._unsavedExistingFeatures = [];\n    /**\n     * A create or edit XHR is currently in flight\n     */\n    this.pending = false;\n    /**\n     * Post title string\n     */\n    this.titleValue = '';\n    /**\n     * Post body string\n     */\n    this.bodyValue = '';\n    /**\n     * Initial Post discussion URI\n     */\n    this.discussionValue = '';\n    /**\n     * An event failed\n     */\n    this.errorMessage = null;\n    bind(this, 'handleSubmit', 'handleCancel', 'handleCancelOrConfirm', 'handleConfirmBackButtonClicked', 'updateTitleValue', 'handleSelectRecentChannel', 'handleChannelSelectedFromCombobox', 'handleBack', 'handleGroupSearchOpened', 'proceedToContentCreation', 'setActiveGeometryDrawType', 'handleHelpPopoverOpen', 'handleLocationPopoverOpen', 'handleHelpPopoverClose', 'handleLocationPopoverClose');\n  }\n  /**\n   * Computes if cancel action should be confirmed\n   */\n  get shouldConfirmCancel() {\n    const { titleValue, bodyValue, postDetails } = this;\n    return !postDetails && (titleValue.length > 0 || bodyValue.length > 0);\n  }\n  /**\n   * Computes the mention feature config\n   */\n  get mentionConfig() {\n    const { context, channelDetails, selectedChannelDetails } = this;\n    return {\n      searchUsers: (query) => {\n        var _a;\n        return searchOtherTeamMembers(Object.assign({ id: (_a = channelDetails === null || channelDetails === void 0 ? void 0 : channelDetails.groups[0].id) !== null && _a !== void 0 ? _a : selectedChannelDetails.groups[0].id, currentUser: context.currentUser, query }, context.hubRequestOptions));\n      }\n    };\n  }\n  /**\n   * IPostDetails with augmented with current location edits\n   */\n  get postDetailsWithLocationEdits() {\n    const { postDetails } = this;\n    const { geometryValue, discussionValue } = this;\n    const _postDetails = cloneObject(postDetails);\n    if (_postDetails) {\n      _postDetails.post.geometry = geometryValue;\n      if (discussionValue !== postDetails.post.discussion) {\n        _postDetails.post.discussion = discussionValue;\n      }\n    }\n    return _postDetails;\n  }\n  /**\n   * Component will load lifecycle method, fetches translations and data\n   * needed to render the UI\n   */\n  async componentWillLoad() {\n    const { postDetails, channelDetails } = this;\n    if (postDetails) {\n      const { title, body, discussion, geometry } = postDetails.post;\n      this.bodyValue = body;\n      if (postDetails.post.title) {\n        this.titleValue = title;\n      }\n      this.discussionValue = discussion;\n      const geometryClone = cloneObject(geometry);\n      this.geometryValue = Object.keys(geometryClone).length\n        ? geometryClone\n        : null;\n    }\n    if (channelDetails) {\n      this.proceedToContentCreation();\n    }\n    else {\n      this.step = STEP.AUDIENCE;\n      this.fetchRecentChannelDetails();\n    }\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n  }\n  /**\n   * Fetches a collection of channel detailss in which the user has most recently\n   * posted to and enforces a minimum delay of 300ms before the promise resolves\n   * so skeleton state can be observed\n   * @returns Promise that resolves IChannelDetails[]\n   */\n  async _fetchRecentChannelDetails() {\n    const { context } = this;\n    try {\n      const results = await fetchRecentChannelDetails(Object.assign({ user: context.currentUser }, context.hubRequestOptions));\n      const { items } = results;\n      if (items.length === 0) {\n        this.hubTelemetry.emit(dist.dictionary.category.interaction.action.viewed.label.empty);\n      }\n      else {\n        this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.viewed.label.recents), { response: dist.constants.response.SUCCESS }));\n      }\n      return items;\n    }\n    catch (e) {\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.viewed.label.recents), { response: dist.constants.response.FAILURE }));\n      console.error('Failed to fetch recent channels:', e.message);\n      throw e;\n    }\n  }\n  /**\n   * Fetches a collection of channel details in which the user has most recently\n   * posted to and updates state\n   */\n  async fetchRecentChannelDetails() {\n    this.errorMessage = null;\n    this.recentChannelsDetails = undefined;\n    try {\n      this.recentChannelsDetails = await this._fetchRecentChannelDetails();\n    }\n    catch (e) {\n      this.errorMessage = 'error.load';\n      this.recentChannelsDetails = [];\n    }\n  }\n  /**\n   * Emits telemetry with default props\n   * @param telemetry\n   */\n  emitHubTelemetry(telemetry) {\n    var _a;\n    const { channelDetails, selectedChannelDetails } = this;\n    const details = selectedChannelDetails || channelDetails;\n    // will need to update this to channel.id and channel.access when support for non-private is added\n    this.hubTelemetry.emit(Object.assign(Object.assign({}, telemetry), { groupId: details.groups[0].id, groupAccess: details.groups[0].access, groupOrgId: details.groups[0].orgId, channelId: details.channelId, channelAccess: (_a = details.channel) === null || _a === void 0 ? void 0 : _a.access }));\n  }\n  /**\n   * Called when the user selects a group from the Recent Groups section\n   * @param evt A mouse click event object\n   */\n  handleSelectRecentChannel(evt) {\n    const target = evt.target;\n    const index = target.dataset.channelIndex;\n    this.selectedChannelDetails = this.recentChannelsDetails[index];\n    this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.select.label.groups.details.recents), { position: index }));\n    this.proceedToContentCreation();\n  }\n  /**\n   * Handles users clicking the Select Group button after having selected\n   * a group from the combobox\n   */\n  handleChannelSelectedFromCombobox() {\n    this.emitHubTelemetry(dist.dictionary.category.interaction.action.select.label.groups);\n    this.proceedToContentCreation();\n  }\n  /**\n   * Change to the content creation step\n   */\n  proceedToContentCreation() {\n    this.step = STEP.CONTENT;\n  }\n  /**\n   * Handles the calcite-combobox calciteComboboxChange event, if a group is selected\n   * it fetches the group details to use for net new posts\n   * @param evt A CustomEvent that includes the items selected by the calcite-combobox\n   */\n  async handleComboboxChange(evt) {\n    const { context: { hubRequestOptions } } = this;\n    const { detail: { selectedItems } } = evt;\n    if (selectedItems.length) {\n      const [{ value: groupId }] = selectedItems;\n      const [group, { items: [channel] }] = await Promise.all([\n        fetchTeamFromCache(groupId, hubRequestOptions),\n        searchChannels(Object.assign({ params: {\n            num: 1,\n            groups: [groupId],\n            access: [SharingAccess.PRIVATE],\n          } }, hubRequestOptions))\n      ]);\n      this.selectedChannelDetails = channel\n        ? {\n          channelId: channel.id,\n          channel,\n          groups: [group],\n        }\n        : { groups: [group] };\n      this.emitHubTelemetry(dist.dictionary.category.interaction.action.select.label.groups);\n    }\n    else {\n      this.emitHubTelemetry(dist.dictionary.category.interaction.action.deselect.label.groups);\n      this.selectedChannelDetails = null;\n    }\n  }\n  handleGeometryValueUpdated() {\n    if (this.postDetails) {\n      const { postDetails: { post: { geometry } }, geometryValue } = this;\n      this.geometryValueHasChanges = JSON.stringify(geometryValue) !== JSON.stringify(geometry);\n    }\n  }\n  /**\n   * Updates internal _feature state when the unsavedFeatures prop value changes\n   * @param feature A Feature object\n   */\n  mapFeaturePropToState(unsavedFeatures) {\n    var _a;\n    // Used to discriminate between incoming props when multiple replies open (edit post || edit reply || create reply in thread)\n    const { postDetails } = this;\n    if (unsavedFeatures.length) {\n      const featureId = (_a = unsavedFeatures[0].properties) === null || _a === void 0 ? void 0 : _a.id;\n      const postId = postDetails === null || postDetails === void 0 ? void 0 : postDetails.postId;\n      const isRecipient = (postId === featureId) || (!postDetails && featureId === null);\n      if (isRecipient) {\n        this._unsavedFeatures = unsavedFeatures;\n        this.resetActiveGeometryDrawType();\n      }\n    }\n    else {\n      this._unsavedFeatures = [];\n    }\n  }\n  /**\n   * Updates internal _feature state when the unsavedExistingFeatures prop value changes\n   * @param feature A Feature object\n   */\n  mapExistingFeaturePropToState(unsavedExistingFeatures) {\n    var _a;\n    // Used to discriminate between incoming props when multiple replies open (edit post || edit reply || create reply in thread)\n    const { postDetails } = this;\n    if (unsavedExistingFeatures.length) {\n      const featureId = (_a = unsavedExistingFeatures[0].properties) === null || _a === void 0 ? void 0 : _a.id;\n      const postId = postDetails === null || postDetails === void 0 ? void 0 : postDetails.postId;\n      const isRecipient = (postId === featureId);\n      if (isRecipient) {\n        this._unsavedExistingFeatures = unsavedExistingFeatures;\n        this.resetActiveGeometryDrawType();\n      }\n    }\n    else {\n      this._unsavedExistingFeatures = [];\n    }\n  }\n  /**\n   * Updates internal _relatedFeature state when the relatedFeature prop value changes\n   * @param relatedFeature An IPostRelatedFeatureDetails object\n   */\n  mapRelatedFeaturePropToState(unsavedRelatedFeatures) {\n    // Used to discrimate between incoming props when multiple replies open (edit post || edit reply || create reply in thread)\n    const { postDetails } = this;\n    if (unsavedRelatedFeatures.length) {\n      const relatedFeatureId = unsavedRelatedFeatures[0].postId;\n      const postId = postDetails === null || postDetails === void 0 ? void 0 : postDetails.postId;\n      const isRecipient = (postId === relatedFeatureId) || (!postDetails && relatedFeatureId === null);\n      if (isRecipient) {\n        this._unsavedRelatedFeatures = unsavedRelatedFeatures;\n        this.resetActiveGeometryDrawType();\n      }\n    }\n    else {\n      this._unsavedRelatedFeatures = [];\n    }\n  }\n  handleAddLocationsActiveGeometryTypeChanged(geometryType) {\n    if (geometryType) {\n      this.arcgisHubDiscussionsGeometryDrawTypeSelect.emit(geometryType);\n    }\n  }\n  /**\n   * Handles form submissions when editing or creating a net new post\n   * @param evt A form submit event\n   * @returns a Promise<IPost>\n   */\n  handleSubmit(evt) {\n    evt.preventDefault();\n    const promise = this.postDetails\n      ? this.handleEdit()\n      : this.handleCreate();\n    this.pending = true;\n    return promise\n      .finally(() => {\n      this.pending = false;\n      this.arcgisHubDiscussionsGeometryClearAll.emit();\n      this.addLocationsActiveGeometryType = null;\n    });\n  }\n  /**\n   * Creates a net new post\n   * @returns a Promise<IPost>\n   */\n  async handleCreate() {\n    var _a, _b, _c;\n    const { context, _unsavedFeatures, _unsavedRelatedFeatures, bodyValue, titleValue, channelDetails, discussionDetails: { discussion, reference: { url } }, arcgisHubDiscussionsPostCreate, selectedChannelDetails, titleElement } = this;\n    const details = channelDetails || selectedChannelDetails;\n    let uri = discussion;\n    if (_unsavedRelatedFeatures.length) {\n      const layerId = url.split('/').pop();\n      const objectIds = new Set(_unsavedRelatedFeatures.map(feature => feature.objectId));\n      uri = augmentDiscussionURIWithFeature(uri, layerId, Array.from(objectIds));\n    }\n    let geometry = null;\n    if (_unsavedFeatures.length) {\n      geometry = _unsavedFeatures.length > 1 ? featuresToGeometryCollection(_unsavedFeatures) : _unsavedFeatures[0].geometry;\n    }\n    this.errorMessage = null;\n    let post;\n    try {\n      post = await createPost(Object.assign({ params: {\n          access: SharingAccess.PRIVATE,\n          groups: details.groups.map(group => group.id),\n          discussion: uri,\n          title: titleValue.trim() || undefined,\n          body: bodyValue.trim(),\n          geometry\n        }, mentionUrl: window.location.href }, context.hubRequestOptions));\n      const channel = (_a = details.channel) !== null && _a !== void 0 ? _a : await fetchChannel(Object.assign({ channelId: post.channelId }, context.hubRequestOptions));\n      this.titleValue = '';\n      this.bodyValue = '';\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.content.action.create), { response: dist.constants.response.SUCCESS, details: (_b = post.title) !== null && _b !== void 0 ? _b : null, groupId: details.groups[0].id, groupAccess: details.groups[0].access, postId: post.id, channelId: channel.id, channelAccess: channel.access }));\n      arcgisHubDiscussionsPostCreate.emit(post);\n      titleElement.focus();\n      return post;\n    }\n    catch (e) {\n      this.errorMessage = 'error.create';\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.content.action.create), { response: dist.constants.response.FAILURE, groupId: details.groups[0].id, groupAccess: details.groups[0].access, channelId: details.channelId, channelAccess: (_c = details.channel) === null || _c === void 0 ? void 0 : _c.access }));\n      console.error('Failed to create post:', e.message);\n      return null;\n    }\n  }\n  /**\n   * Edits an existing post\n   * @returns a Promise<IPost>\n   */\n  handleEdit() {\n    const { context, bodyValue, titleValue, channelDetails, postDetails: { post }, _unsavedFeatures, _unsavedExistingFeatures, _unsavedRelatedFeatures, arcgisHubDiscussionsPostEdit, discussionDetails: { reference: { url } } } = this;\n    this.errorMessage = null;\n    let uri = this.discussionValue;\n    if (_unsavedRelatedFeatures.length) {\n      const layerId = url.split('/').pop();\n      const objectIds = _unsavedRelatedFeatures.map(feature => feature.objectId);\n      uri = augmentDiscussionURIWithFeature(uri, layerId, objectIds);\n    }\n    const originalPostFeatures = (this.geometryValue && Object.keys(this.geometryValue).length)\n      ? postToFeatures(Object.assign(Object.assign({}, post), { geometry: this.geometryValue }))\n      : [];\n    _unsavedExistingFeatures.forEach(feature => {\n      // Apply any existing geometry updates to originalPostFeatures\n      const { properties: { index }, geometry } = feature;\n      originalPostFeatures[+index].geometry = geometry;\n    });\n    let geometry = null;\n    const combinedFeatures = [...originalPostFeatures, ..._unsavedFeatures];\n    if (combinedFeatures.length) {\n      geometry = (combinedFeatures.length > 1)\n        ? featuresToGeometryCollection(combinedFeatures)\n        : combinedFeatures[0].geometry.coordinates.length ? combinedFeatures[0].geometry : null;\n    }\n    return updatePost(Object.assign({ postId: post.id, params: {\n        title: titleValue.trim() || null,\n        body: bodyValue.trim(),\n        discussion: uri,\n        geometry\n      }, mentionUrl: window.location.href }, context.hubRequestOptions))\n      .then(editedPost => {\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.content.action.update), { response: dist.constants.response.SUCCESS, postId: post.id, channelId: channelDetails.channelId, channelAccess: channelDetails.channel.access }));\n      arcgisHubDiscussionsPostEdit.emit(editedPost);\n      return editedPost;\n    })\n      .catch(e => {\n      this.errorMessage = 'error.edit';\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.content.action.update), { response: dist.constants.response.FAILURE, postId: post.id, channelId: channelDetails.channelId, channelAccess: channelDetails.channel.access }));\n      console.error('Failed to edit post:', e.message);\n      return null;\n    });\n  }\n  /**\n   * Called when the user elects to cancel creating a net new post or\n   * an editing an existing post. Emits arcgisHubDiscussionsPostCancel\n   * @param evt A mouse click event\n   */\n  handleCancel(evt) {\n    var _a, _b, _c, _d, _e, _f;\n    const { channelDetails, postDetails, selectedChannelDetails } = this;\n    const [group] = (_a = selectedChannelDetails === null || selectedChannelDetails === void 0 ? void 0 : selectedChannelDetails.groups) !== null && _a !== void 0 ? _a : [];\n    evt.preventDefault();\n    this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.close.label.editor), { groupId: (_b = group === null || group === void 0 ? void 0 : group.id) !== null && _b !== void 0 ? _b : null, groupAccess: (_c = group === null || group === void 0 ? void 0 : group.access) !== null && _c !== void 0 ? _c : null, postId: (_d = postDetails === null || postDetails === void 0 ? void 0 : postDetails.postId) !== null && _d !== void 0 ? _d : null, channelId: (_e = channelDetails === null || channelDetails === void 0 ? void 0 : channelDetails.channelId) !== null && _e !== void 0 ? _e : null, channelAccess: (_f = channelDetails === null || channelDetails === void 0 ? void 0 : channelDetails.channel.access) !== null && _f !== void 0 ? _f : null }));\n    this.arcgisHubDiscussionsPostCancel.emit();\n  }\n  /**\n   * Determines whether to confirm the cancellation or close the editor\n   */\n  handleCancelOrConfirm(evt) {\n    if (this.shouldConfirmCancel) {\n      this.confirmCancel = true;\n    }\n    else {\n      this.handleCancel(evt);\n    }\n    this.arcgisHubDiscussionsGeometryClearAll.emit();\n  }\n  /**\n   * Called when the cancel confirmation back button is clicked\n   */\n  handleConfirmBackButtonClicked() {\n    this.confirmCancel = false;\n  }\n  /**\n   * Called when the user elects to traverse from the content creation step\n   * back to the group selection step. Resets any previously selected groups\n   * from the combobox and refreshes the recent groups list\n   */\n  handleBack() {\n    if (this.shouldConfirmCancel) {\n      this.confirmCancel = true;\n    }\n    else {\n      this.emitHubTelemetry(Object.assign({}, dist.dictionary.category.interaction.action.close.label.editor.details.addPost));\n      this.selectedChannelDetails = null;\n      this.step = STEP.AUDIENCE;\n      this.fetchRecentChannelDetails();\n    }\n  }\n  /**\n   * Emit telemetry when help popover is opened\n   */\n  handleHelpPopoverOpen() {\n    this.hubTelemetry.emit(dist.dictionary.category.interaction.action.open.label.popover.details.help);\n  }\n  /**\n   * Emit telemetry when help popover is closed\n   */\n  handleHelpPopoverClose() {\n    this.hubTelemetry.emit(dist.dictionary.category.interaction.action.close.label.popover.details.help);\n  }\n  /**\n   * Modify state when add location popover is opened\n   */\n  handleLocationPopoverOpen() {\n    this.addLocationsPopoverOpen = true;\n  }\n  /**\n   * Modify state when add location popover is closed\n   */\n  handleLocationPopoverClose() {\n    this.addLocationsPopoverOpen = false;\n  }\n  /**\n   * Called when the group search combobox is opened\n   */\n  handleGroupSearchOpened() {\n    this.hubTelemetry.emit(dist.dictionary.category.interaction.action.open.label.search);\n  }\n  /**\n   * Called when the user changes the text of the post body content\n   * @param evt An onChange event for the post body calcite-input\n   */\n  updateBodyValue(evt) {\n    this.bodyValue = evt.target.value;\n  }\n  handleFeatureRemove(evt) {\n    var _a;\n    const { detail: { properties: { relatedFeatureId, index, unsaved } } } = evt;\n    if (!unsaved) {\n      if (relatedFeatureId) {\n        // remove relatedFeature from discsussion URI\n        const { features } = parseDiscussionURI(this.discussionValue);\n        const layerId = this.discussionDetails.reference.url.split('/').pop();\n        features.splice(features.indexOf(relatedFeatureId), 1);\n        this.discussionValue = augmentDiscussionURIWithFeature(this.discussionValue.split('?')[0], layerId, features);\n      }\n      else {\n        // remove feature from discussion geometry\n        if (((_a = this.geometryValue) === null || _a === void 0 ? void 0 : _a.type) === 'GeometryCollection') {\n          if (unsaved) {\n            this.geometryValue.geometries.splice(index, 1);\n          }\n          else {\n            this.geometryValue.geometries[index] = null;\n          }\n          this.geometryValue = Object.assign({}, this.geometryValue);\n        }\n        else {\n          this.geometryValue = null;\n        }\n      }\n    }\n  }\n  handleDrawDone() {\n    this.arcgisHubDiscussionsGeometryDrawReset.emit();\n    this.addLocationsActiveGeometryType = null;\n  }\n  /**\n   * Called when the user changes the text of the post title content\n   * @param evt An onChange event for the reply body calcite-inpu\n   */\n  updateTitleValue(evt) {\n    this.titleValue = evt.target.value;\n  }\n  setActiveGeometryDrawType(evt) {\n    const { target } = evt;\n    const geometryType = target.dataset.type;\n    this.addLocationsActiveGeometryType = geometryType;\n    this.locationPopoverElement.open = false;\n    this.enableAddLocation();\n  }\n  resetActiveGeometryDrawType() {\n    this.addLocationsActiveGeometryType = undefined;\n  }\n  enableAddLocation() {\n    const { postDetails, arcgisHubDiscussionsGeometryDrawCreate } = this;\n    const id = postDetails && postDetails.postId;\n    arcgisHubDiscussionsGeometryDrawCreate.emit(id);\n  }\n  /**\n   * Computes if the title value is valid\n   */\n  get isTitleValid() {\n    const { titleValue } = this;\n    return titleValue.length <= MAX_TITLE_LENGTH;\n  }\n  /**\n   * Computes if the body value is valid\n   */\n  get isBodyValid() {\n    const { bodyValue } = this;\n    return bodyValue.trim().length > 0 && bodyValue.length <= MAX_BODY_LENGTH;\n  }\n  /**\n   * Returns true if post has new location changes or updates\n   */\n  get hasLocationChanges() {\n    if (this.postDetails) {\n      const { postDetails: { post: { discussion } }, discussionValue } = this;\n      return Boolean(this._unsavedFeatures.length + this._unsavedRelatedFeatures.length + this._unsavedExistingFeatures.length) || (discussionValue !== discussion || this.geometryValueHasChanges);\n    }\n    return false;\n  }\n  /**\n   * Computes title warning/error messages\n   */\n  get titleMessage() {\n    const { titleValue, isTitleValid, intl } = this;\n    const { length } = titleValue;\n    if (length >= MAX_TITLE_LENGTH - 5) {\n      return isTitleValid\n        ? {\n          status: 'idle',\n          text: intl.t('post.title.validation.warning')\n        }\n        : {\n          icon: 'exclamation-mark-circle',\n          status: 'invalid',\n          text: intl.t('post.title.validation.error', { characters: length - MAX_TITLE_LENGTH })\n        };\n    }\n  }\n  /**\n   * Computes body warning/error messages\n   */\n  get bodyMessage() {\n    const { bodyValue, isBodyValid, intl } = this;\n    const { length } = bodyValue;\n    if (length >= WARNING_BODY_LENGTH) {\n      return isBodyValid\n        ? {\n          status: 'idle',\n          text: intl.t('post.body.validation.warning')\n        }\n        : {\n          icon: 'exclamation-mark-circle',\n          status: 'invalid',\n          text: intl.t('post.body.validation.error')\n        };\n    }\n  }\n  /**\n   * Computes the blocked noticed variant\n   */\n  get blockedNotice() {\n    var _a;\n    let variant;\n    if (this.channelDetails) {\n      const isGroupDiscussable = isDiscussable((_a = this.channelDetails) === null || _a === void 0 ? void 0 : _a.groups[0]);\n      const isSubjectDiscussable = isDiscussable(this.discussionDetails.reference);\n      if (!isGroupDiscussable && !isSubjectDiscussable) {\n        variant = ArcgisHubDiscussionsBlockedNoticeVariant.EditPost;\n      }\n      else if (!isGroupDiscussable) {\n        variant = ArcgisHubDiscussionsBlockedNoticeVariant.EditPostGroup;\n      }\n      else if (!isSubjectDiscussable) {\n        variant = this.discussionDetails.type === 'group'\n          ? ArcgisHubDiscussionsBlockedNoticeVariant.EditPostGroup\n          : ArcgisHubDiscussionsBlockedNoticeVariant.EditPostItem;\n      }\n    }\n    return variant;\n  }\n  /**\n   * Renders the editor's primary action button for editing an existing\n   * or creating a net new post\n   */\n  renderPrimaryActionButton() {\n    const { postDetails, intl, titleValue, bodyValue, isBodyValid, isTitleValid, pending, hasLocationChanges, blockedNotice } = this;\n    let text;\n    let disabled;\n    const isInvalid = !isBodyValid || !isTitleValid;\n    if (postDetails) {\n      text = intl.t('post.save');\n      disabled = Boolean(blockedNotice) || isInvalid || (titleValue === postDetails.post.title && bodyValue === postDetails.post.body && !hasLocationChanges);\n    }\n    else {\n      text = intl.t('post.create');\n      disabled = Boolean(blockedNotice) || isInvalid;\n    }\n    return (h(\"calcite-button\", { class: \"hub-discussions-post-editor-post-actions__primary\", disabled: disabled, label: text, loading: pending, round: true, scale: \"l\", type: \"submit\" }, text));\n  }\n  /**\n   * Renders the editor's secondary action button, currently the cancel\n   * edit/create post button\n   */\n  renderSecondaryActionButton() {\n    const { intl, handleCancelOrConfirm } = this;\n    const text = intl.t('post.cancel');\n    return (h(\"calcite-button\", { appearance: \"clear\", class: \"hub-discussions-post-editor-post-actions__secondary\", color: \"neutral\", label: text, onClick: handleCancelOrConfirm, round: true, scale: \"l\", type: \"button\" }, text));\n  }\n  renderAddLocationsButton() {\n    const { hasMap, blockedNotice, addLocationsActiveGeometryType, intl, addLocationsPopoverOpen, handleLocationPopoverOpen, handleLocationPopoverClose } = this;\n    const locationActionTypes = [\n      { type: 'select', icon: 'select' },\n      { type: 'point', icon: 'pin' },\n      { type: 'polyline', icon: 'freehand' },\n      { type: 'polygon', icon: 'freehand-area' }\n    ];\n    const locationActions = locationActionTypes.map(({ type, icon }) => {\n      return (h(\"calcite-action\", { active: addLocationsActiveGeometryType === type, \"data-type\": type, icon: icon, key: type, onClick: this.setActiveGeometryDrawType, text: intl.t(`location.action.${type}`), textEnabled: true }));\n    });\n    return (h(Fragment, null, h(\"calcite-popover\", { autoClose: true, disablePointer: true, label: intl.t('location.heading'), onCalcitePopoverClose: handleLocationPopoverClose, onCalcitePopoverOpen: handleLocationPopoverOpen, ref: (locationPopoverElement) => { this.locationPopoverElement = locationPopoverElement; }, referenceElement: this.locationActionElement }, locationActions), h(\"calcite-tooltip\", { closeOnClick: true, label: intl.t('location.tooltip'), referenceElement: this.locationActionElement }, h(\"span\", null, intl.t('location.tooltip'))), h(\"calcite-action\", { active: addLocationsPopoverOpen, appearance: 'solid', class: \"add-location-post\", disabled: !hasMap || Boolean(blockedNotice), ref: (locationActionElement) => { this.locationActionElement = locationActionElement; }, text: intl.t('location.heading') }, h(\"calcite-icon\", { class: \"add-location-icon\", icon: \"pin-plus\", scale: \"s\" }))));\n  }\n  /**\n   * Renders the title field\n   */\n  renderTitleField() {\n    const { intl, titleValue, updateTitleValue, titleMessage, blockedNotice } = this;\n    return (h(Fragment, null, h(\"input\", { \"aria-label\": intl.t('post.title.label'), autofocus: true, class: \"hub-discussions-post-editor__title\", disabled: Boolean(blockedNotice), onInput: updateTitleValue, placeholder: intl.t('post.title.placeholder'), ref: (titleElement) => { this.titleElement = titleElement; }, type: \"text\", value: titleValue }), titleMessage && (h(\"calcite-input-message\", { active: true, class: \"hub-discussions-post-editor__message\", icon: titleMessage.icon, scale: \"l\", status: titleMessage.status }, titleMessage.text))));\n  }\n  /**\n   * Renders the body field\n   */\n  renderBodyField() {\n    const { intl, bodyValue, bodyMessage, pending, mentionConfig, context, blockedNotice } = this;\n    return (h(Fragment, null, h(\"arcgis-hub-rich-text\", { class: \"hub-discussions-post-editor__body\", context: context, disabled: Boolean(blockedNotice) || pending, label: intl.t('post.body.label'), mention: mentionConfig, placeholder: intl.t('post.body.placeholder'), \"text-transform\": true, toolbar: \"\", value: bodyValue }), bodyMessage && (h(\"calcite-input-message\", { active: true, class: \"hub-discussions-post-editor__message\", icon: bodyMessage.icon, scale: \"l\", status: bodyMessage.status }, bodyMessage.text))));\n  }\n  /**\n   * Renders the UI for creating/editing post content step\n   */\n  renderContentStep() {\n    var _a;\n    const { intl, hasMap, postDetails, channelDetails, discussionDetails, selectedChannelDetails, index, isHub, errorMessage, context, _unsavedFeatures, _unsavedRelatedFeatures, _unsavedExistingFeatures, postDetailsWithLocationEdits, blockedNotice, isMobile } = this;\n    return this.confirmCancel\n      ? this.renderConfirmCancel()\n      : (h(\"form\", { onSubmit: this.handleSubmit }, postDetails && channelDetails\n        ?\n          (h(\"arcgis-hub-discussions-post-header\", { channelDetails: channelDetails, class: \"hub-discussions-post-editor__header\", context: context, index: index, isHub: isHub, postDetails: postDetails }))\n        : (h(\"arcgis-hub-discussions-post-header\", { access: SharingAccess.PRIVATE, class: \"hub-discussions-post-editor__header\", context: context, groups: selectedChannelDetails.groups, index: index, isHub: isHub })), this.renderTitleField(), this.renderBodyField(), h(\"arcgis-hub-discussions-post-geography\", { channelDetails: channelDetails, context: context, disabled: Boolean(blockedNotice), discussionDetails: discussionDetails, hasMap: hasMap, isMobile: isMobile, postDetails: postDetailsWithLocationEdits, renderedInEditor: true, unsavedExistingFeatures: _unsavedExistingFeatures, unsavedFeatures: _unsavedFeatures, unsavedRelatedFeatures: _unsavedRelatedFeatures, url: (_a = discussionDetails === null || discussionDetails === void 0 ? void 0 : discussionDetails.reference) === null || _a === void 0 ? void 0 : _a.url }), h(\"div\", { class: \"hub-discussions-post-editor-post-actions\" }, this.renderAddLocationsButton(), this.renderSecondaryActionButton(), this.renderPrimaryActionButton()), blockedNotice && (h(\"arcgis-hub-discussions-blocked-notice\", { class: \"hub-discussions-post-editor__not-discussable-notice\", scale: \"s\", slot: \"list-before\", variant: blockedNotice })), errorMessage && (h(\"calcite-notice\", { active: true, class: \"hub-discussions-post-editor__crud-error\", color: \"red\", scale: \"s\" }, h(\"div\", { slot: \"title\" }, intl.t('error.title')), h(\"div\", { slot: \"message\" }, errorMessage && intl.t(errorMessage))))));\n  }\n  /**\n   * Renders the header UI for the group selection and content creation steps\n   */\n  renderHeader() {\n    const { intl, handleCancelOrConfirm, handleBack, confirmCancel, step, handleHelpPopoverOpen, handleHelpPopoverClose } = this;\n    let config = {\n      action: handleCancelOrConfirm,\n      icon: 'x'\n    };\n    if (step === STEP.CONTENT) {\n      config = {\n        action: handleBack,\n        icon: 'chevron-left'\n      };\n    }\n    return (h(\"header\", { class: \"hub-discussions-post-editor-header\" }, h(\"calcite-button\", { appearance: \"clear\", color: \"neutral\", disabled: confirmCancel, \"icon-start\": config.icon, label: intl.t(`header.${step}.back`), onClick: config.action, round: true, scale: \"l\", type: \"button\" }), h(\"p\", { class: \"hub-discussions-post-editor-header__title\" }, intl.t(`header.${step}.title`)), h(\"calcite-popover\", { dismissible: true, label: intl.t('header.help'), onCalcitePopoverClose: handleHelpPopoverClose, onCalcitePopoverOpen: handleHelpPopoverOpen, placement: \"bottom-end\", referenceElement: \"help\" }, h(\"p\", { class: \"hub-discussions-post-editor-header__popover\" }, intl.t(`header.${step}.help`))), h(\"calcite-button\", { appearance: \"transparent\", color: \"neutral\", disabled: confirmCancel, \"icon-start\": \"lightbulb\", id: \"help\", label: intl.t('header.help'), round: true, scale: \"l\", type: \"button\" })));\n  }\n  /**\n   * Renders the UI for cancel confirmation\n   */\n  renderConfirmCancel() {\n    const { intl, handleConfirmBackButtonClicked, handleCancel } = this;\n    return (h(\"div\", { class: \"hub-discussions-post-editor-cancel-confirm\" }, h(\"header\", { class: \"hub-discussions-post-editor-cancel-confirm__header\" }, intl.t('confirm.header')), h(\"p\", { class: \"hub-discussions-post-editor-cancel-confirm__message\" }, intl.t('confirm.body')), h(\"footer\", { class: \"hub-discussions-post-editor-cancel-confirm__footer\" }, h(\"calcite-button\", { appearance: \"clear\", color: \"neutral\", onClick: handleConfirmBackButtonClicked, round: true, scale: \"l\" }, intl.t('confirm.back')), h(\"calcite-button\", { color: \"red\", onClick: handleCancel, round: true, scale: \"l\" }, intl.t('confirm.discard')))));\n  }\n  /**\n   * Renders the UI for the group selection step\n   */\n  renderGroupSelectionStep() {\n    const { intl, selectedChannelDetails, handleChannelSelectedFromCombobox, context } = this;\n    return (h(Fragment, null, h(\"calcite-combobox\", { label: intl.t('groups.label'), placeholder: intl.t('groups.placeholder'), scale: \"l\", \"selection-mode\": \"single\", value: selectedChannelDetails ? selectedChannelDetails.groups[0].id : null }, context.currentUser.groups.map((group) => {\n      const canDiscuss = isDiscussable(group);\n      return (h(\"calcite-combobox-item\", { disabled: !canDiscuss, icon: canDiscuss ? undefined : 'circle-disallowed', key: group.id, textLabel: group.title, value: group.id }));\n    })), selectedChannelDetails && (h(\"calcite-button\", { class: \"hub-discussions-post-editor-groups__action\", onClick: handleChannelSelectedFromCombobox, round: true, scale: \"l\", type: \"button\", width: \"full\" }, intl.t('groups.label'))), this.renderRecentChannels()));\n  }\n  /**\n   * Renders a channel details\n   * @param channelDetails An IChannelDetails object\n   * @param index The index to build the data-channel-index value\n   * @returns\n   */\n  renderRecentChannelDetails(channelDetails, index) {\n    const { intl, context, handleSelectRecentChannel } = this;\n    const { latestUserPost, groups: [group] } = channelDetails;\n    const delta = Date.now() - new Date(latestUserPost.createdAt).valueOf();\n    const days = Math.floor(delta / TIME_INTERVAL.DAY);\n    const timeStr = intl.formatRelativeTime(-days, TIME_UNIT.DAY);\n    return (h(\"li\", { class: \"hub-discussions-post-editor-recent__item\", key: group.id }, h(\"calcite-avatar\", { class: \"hub-discussions-post-editor-recent__avatar\", \"full-name\": group.title, scale: \"l\", thumbnail: getGroupThumbnailUrl(context.session.portal, group, context.session.token) }), h(\"b\", { class: \"hub-discussions-post-editor-recent__title\" }, group.title), h(\"i\", { class: \"hub-discussions-post-editor-recent__last-activity\" }, intl.t('groups.posted', { timeStr })), h(\"calcite-button\", { appearance: \"clear\", class: \"hub-discussions-post-editor-recent__action\", color: \"neutral\", \"data-channel-index\": index, \"icon-start\": \"chevron-right\", onClick: handleSelectRecentChannel, round: true, scale: \"l\", type: \"button\" })));\n  }\n  /**\n   * Renders a recent channel skeleton loader\n   * @param index The index to build the key\n   */\n  renderRecentChannelSkeleton(index) {\n    return (h(\"li\", { class: \"hub-discussions-post-editor-recent__skeleton\", key: `skeleton-${index}` }, h(\"arcgis-skeleton-loader\", { active: true, rows: 0, showFooter: false, showHeading: false, showThumbnail: false }, h(\"div\", null), h(\"div\", null, h(\"div\", null), h(\"div\", null)))));\n  }\n  /**\n   * Renders the empty state when no recent channels exist yet\n   */\n  renderRecentChannelsEmpty() {\n    const { intl } = this;\n    return (h(\"calcite-notice\", { active: true, class: \"hub-discussions-post-editor__empty\", scale: \"m\" }, h(\"div\", { slot: \"title\" }, intl.t('empty.title')), h(\"div\", { slot: \"message\" }, intl.t('empty.message')), h(\"calcite-link\", { href: \"https://doc.arcgis.com/en/hub/team/how-discussions-work.htm\", iconEnd: \"launch\", slot: \"link\" }, intl.t('empty.link'))));\n  }\n  /**\n   * Renders the error when recent channels fail to load\n   */\n  renderRecentChannelsError() {\n    const { errorMessage, intl } = this;\n    return (h(\"calcite-notice\", { active: true, class: \"hub-discussions-post-editor__load-error\", color: \"red\" }, h(\"div\", { slot: \"title\" }, intl.t('error.load.title')), h(\"div\", { slot: \"message\" }, errorMessage && intl.t(errorMessage))));\n  }\n  /**\n   * Renders the recent channels list\n   */\n  renderRecentChannels() {\n    const { intl, errorMessage, recentChannelsDetails = Array.from({ length: 4 }).map(_ => null) } = this;\n    let rendered;\n    if (errorMessage) {\n      rendered = this.renderRecentChannelsError();\n    }\n    else if (recentChannelsDetails.length) {\n      rendered = (h(\"ul\", { class: \"hub-discussions-post-editor-recent__list\" }, recentChannelsDetails.map((channelDetails, index) => channelDetails\n        ? this.renderRecentChannelDetails(channelDetails, index)\n        : this.renderRecentChannelSkeleton(index))));\n    }\n    else {\n      rendered = this.renderRecentChannelsEmpty();\n    }\n    return (h(Fragment, null, h(\"header\", { class: \"hub-discussions-post-editor-recent__header\" }, intl.t('groups.recent')), rendered));\n  }\n  /**\n   * Renders the UI for creating net new posts\n   */\n  renderCreate() {\n    return (h(Fragment, null, this.renderHeader(), this.step === STEP.AUDIENCE\n      ? this.renderGroupSelectionStep()\n      : this.renderContentStep()));\n  }\n  /**\n   * Renders a loading indicator\n   */\n  renderLoading() {\n    return (h(\"calcite-loader\", { active: true, label: this.intl.t('loading'), scale: \"m\", type: \"indeterminate\" }));\n  }\n  /**\n   * Primary render entrypoint\n   */\n  render() {\n    const { postDetails } = this;\n    const view = postDetails\n      ? this.renderContentStep()\n      : this.renderCreate();\n    return (h(Host, { class: \"hub-discussions-post-editor\", \"data-element\": \"discussions-post-editor\" }, view));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"geometryValue\": [\"handleGeometryValueUpdated\"],\n    \"unsavedFeatures\": [\"mapFeaturePropToState\"],\n    \"unsavedExistingFeatures\": [\"mapExistingFeaturePropToState\"],\n    \"unsavedRelatedFeatures\": [\"mapRelatedFeaturePropToState\"],\n    \"addLocationsActiveGeometryType\": [\"handleAddLocationsActiveGeometryTypeChanged\"]\n  }; }\n};\n__decorate$2([\n  minPromiseDelayFactory({ delay: 300 })\n], ArcgisHubDiscussionsPostEditor.prototype, \"_fetchRecentChannelDetails\", null);\n__decorate$2([\n  CallWhenFactory({ when() { return !this.isMobile; } })\n], ArcgisHubDiscussionsPostEditor.prototype, \"renderAddLocationsButton\", null);\nArcgisHubDiscussionsPostEditor.style = arcgisHubDiscussionsPostEditorCss;\n\nconst arcgisHubDiscussionsPostHeaderCss = \":host{display:block}address{display:grid;grid-template-rows:repeat(2, minmax(0, 1fr));-moz-column-gap:0.5rem;column-gap:0.5rem;row-gap:0.25rem;font-style:normal;grid-template-columns:54px auto}arcgis-hub-discussions-popover{grid-row:span 2 / span 2}button{cursor:pointer;border-style:none;background-color:transparent;padding:0px}header{display:flex;align-items:flex-end;font-size:var(--calcite-font-size-0);line-height:1.25rem;font-weight:var(--calcite-font-weight-bold);text-transform:capitalize;color:var(--calcite-ui-text-1)}.avatars{position:relative;grid-row:span 2 / span 2;display:flex;height:54px}.avatars calcite-avatar+calcite-avatar{position:absolute;top:1rem;left:1rem;z-index:10;border-radius:9999px;border:3px solid var(--calcite-ui-foreground-1)}.metadata{display:flex;flex-wrap:nowrap;font-size:var(--calcite-font-size--1);line-height:1rem}.metadata b{max-height:1rem;word-break:break-all;font-weight:var(--calcite-font-weight-medium);font-style:normal;color:var(--calcite-ui-text-2);overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1}.metadata span{display:flex;width:1rem;justify-content:center;font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-ui-text-2)}.metadata arcgis-relative-date{white-space:nowrap}.metadata calcite-icon{margin-top:-0.125rem}\";\n\nconst ArcgisHubDiscussionsPostHeader = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n  }\n  get creator() {\n    var _a;\n    const { postDetails, context } = this;\n    return postDetails ? (_a = postDetails.creatorDetails) === null || _a === void 0 ? void 0 : _a.user : context.currentUser;\n  }\n  get group() {\n    const { channelDetails, groups } = this;\n    return channelDetails ? channelDetails.groups[0] : groups[0];\n  }\n  get creatorFullName() {\n    var _a;\n    const { intl, postDetails, creator } = this;\n    let fullName = intl.t('anonymous');\n    if (creator || ((_a = postDetails === null || postDetails === void 0 ? void 0 : postDetails.post) === null || _a === void 0 ? void 0 : _a.creator)) {\n      fullName = (creator === null || creator === void 0 ? void 0 : creator.fullName) || intl.t('privateUser');\n    }\n    return fullName;\n  }\n  get accessIcon() {\n    const { intl, channelDetails } = this;\n    const access = channelDetails ? channelDetails.channel.access : this.access;\n    let icon;\n    let label;\n    if (access === SharingAccess.PRIVATE) {\n      icon = 'lock';\n      label = intl.t('visiblePrivate');\n    }\n    else if (access === SharingAccess.ORG) {\n      icon = 'organization';\n      label = intl.t('visibleOrg');\n    }\n    else {\n      icon = 'globe';\n      label = intl.t('visibleAll');\n    }\n    return { icon, label };\n  }\n  renderAccessIcon() {\n    const { accessIcon } = this;\n    return (h(\"calcite-icon\", { icon: accessIcon.icon, scale: \"s\", \"text-label\": accessIcon.label }));\n  }\n  renderPopover(avatars) {\n    const { postDetails, channelDetails, index, context, isHub } = this;\n    return postDetails\n      ? (h(\"arcgis-hub-discussions-popover\", { channelDetails: channelDetails, context: context, index: index, isHub: isHub, postDetails: postDetails }, avatars))\n      : avatars;\n  }\n  renderAvatars() {\n    const { creator } = this;\n    let avatars = (h(\"div\", { class: \"avatars\" }, this.renderCreatorAvatar(), this.renderChannelAvatar()));\n    if (creator) {\n      avatars = this.renderPopover(avatars);\n    }\n    return avatars;\n  }\n  renderCreatorAvatar() {\n    var _a, _b;\n    const { postDetails, creator, context } = this;\n    const user = (!creator && (postDetails === null || postDetails === void 0 ? void 0 : postDetails.post))\n      ? { username: (_a = postDetails.post) === null || _a === void 0 ? void 0 : _a.creator }\n      : creator;\n    return (h(\"calcite-avatar\", { \"full-name\": user === null || user === void 0 ? void 0 : user.fullName, scale: \"l\", thumbnail: (user === null || user === void 0 ? void 0 : user.thumbnail) && getUserThumbnailUrl(context.session.portal, user, context.session.token), \"user-id\": (_b = user) === null || _b === void 0 ? void 0 : _b.id, username: user === null || user === void 0 ? void 0 : user.username }));\n  }\n  renderChannelAvatar() {\n    const { group, context } = this;\n    return (h(\"calcite-avatar\", { \"full-name\": group === null || group === void 0 ? void 0 : group.title, scale: \"m\", thumbnail: group && getGroupThumbnailUrl(context.session.portal, group, context.session.token) }));\n  }\n  render() {\n    var _a;\n    const { postDetails, group, creatorFullName, intl } = this;\n    return (h(Host, null, h(\"address\", null, this.renderAvatars(), h(\"header\", null, creatorFullName), h(\"div\", { class: {\n        metadata: true,\n        timestamp: Boolean(postDetails === null || postDetails === void 0 ? void 0 : postDetails.post)\n      } }, h(\"b\", null, (_a = group === null || group === void 0 ? void 0 : group.title) !== null && _a !== void 0 ? _a : intl.t('group.deleted')), (postDetails === null || postDetails === void 0 ? void 0 : postDetails.post) && (h(Fragment, null, h(\"span\", null, \"\\u00B7\"), h(\"arcgis-relative-date\", { dateTime: postDetails.post.createdAt, formatStyle: \"short\" }))), h(\"span\", null, \"\\u00B7\"), this.renderAccessIcon()))));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n};\nArcgisHubDiscussionsPostHeader.style = arcgisHubDiscussionsPostHeaderCss;\n\nconst arcgisHubDiscussionsReplyCss = \".sc-arcgis-hub-discussions-reply-h{display:block;background-color:var(--calcite-ui-foreground-1)}article.sc-arcgis-hub-discussions-reply{position:relative;display:grid;grid-template-rows:repeat(1, minmax(0, 1fr));gap:0.75rem;grid-template-columns:2rem auto}div.sc-arcgis-hub-discussions-reply{overflow-x:auto}.reply-lead.sc-arcgis-hub-discussions-reply{padding-bottom:1.25rem}.reply-lead.sc-arcgis-hub-discussions-reply::before{position:absolute;top:2.25rem;display:block;width:0.125rem;border-radius:0.125rem;background-color:var(--calcite-ui-foreground-2);height:calc(100% - 2.25rem);left:15px;content:\\\"\\\"}arcgis-hub-discussions-reply-editor.reply-lead.sc-arcgis-hub-discussions-reply{padding-bottom:1.5rem}arcgis-hub-discussions-reply-editor.reply-lead.sc-arcgis-hub-discussions-reply::before{z-index:-10}address.sc-arcgis-hub-discussions-reply{margin-bottom:0.125rem;display:grid;font-size:var(--calcite-font-size--1);font-style:normal;line-height:1.25rem;grid-template-columns:minmax(0, -webkit-max-content) 1rem minmax(0, -webkit-max-content);grid-template-columns:minmax(0, max-content) 1rem minmax(0, max-content)}address.sc-arcgis-hub-discussions-reply b.sc-arcgis-hub-discussions-reply{font-size:var(--calcite-font-size-0);line-height:1.25rem;font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-1)}address.sc-arcgis-hub-discussions-reply span.sc-arcgis-hub-discussions-reply{display:flex;justify-content:center;color:var(--calcite-ui-text-2)}address.sc-arcgis-hub-discussions-reply arcgis-relative-date.sc-arcgis-hub-discussions-reply{color:var(--calcite-ui-text-2)}arcgis-multiline-ellipsis.sc-arcgis-hub-discussions-reply{font-size:var(--calcite-font-size-0);line-height:1.375}calcite-action-group.sc-arcgis-hub-discussions-reply{margin-left:-0.5rem}.hidden.sc-arcgis-hub-discussions-reply{visibility:hidden}@-webkit-keyframes in-right{0%{opacity:0;transform:translate3D(-100%, 0, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-right{0%{opacity:0;transform:translate3D(-100%, 0, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}article.in.sc-arcgis-hub-discussions-reply{-webkit-animation:in-right 300ms ease-out forwards;animation:in-right 300ms ease-out forwards}@-webkit-keyframes out-left{0%{opacity:1;transform:translate3D(0, 0, 0)}100%{opacity:0;transform:translate3D(-100%, 0, 0)}}@keyframes out-left{0%{opacity:1;transform:translate3D(0, 0, 0)}100%{opacity:0;transform:translate3D(-100%, 0, 0)}}article.out.sc-arcgis-hub-discussions-reply{-webkit-animation:out-left 300ms ease-out forwards;animation:out-left 300ms ease-out forwards}arcgis-hub-discussions-reply-editor.sc-arcgis-hub-discussions-reply{padding-bottom:1rem}@-webkit-keyframes in-left{0%{opacity:0;transform:translate3D(100%, 0, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-left{0%{opacity:0;transform:translate3D(100%, 0, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}arcgis-hub-discussions-reply-editor.in.sc-arcgis-hub-discussions-reply{-webkit-animation:in-left 300ms ease-out forwards;animation:in-left 300ms ease-out forwards}@-webkit-keyframes out-right{0%{opacity:1;transform:translate3D(0, 0, 0)}100%{opacity:0;transform:translate3D(100%, 0, 0)}}@keyframes out-right{0%{opacity:1;transform:translate3D(0, 0, 0)}100%{opacity:0;transform:translate3D(100%, 0, 0)}}arcgis-hub-discussions-reply-editor.out.sc-arcgis-hub-discussions-reply{-webkit-animation:out-right 300ms ease-out forwards;animation:out-right 300ms ease-out forwards}arcgis-hub-discussions-reply-editor[data-editing].sc-arcgis-hub-discussions-reply{padding-left:0px;padding-right:0px}arcgis-multiline-ellipsis.sc-arcgis-hub-discussions-reply+calcite-notice.sc-arcgis-hub-discussions-reply{margin-top:1rem}.flipY.sc-arcgis-hub-discussions-reply{transform:scaleY(-1)}article.out-of-context.sc-arcgis-hub-discussions-reply{margin-left:1rem;margin-right:1rem;display:grid;gap:0.5rem;font-style:normal;grid-template-columns:1fr}article.out-of-context.sc-arcgis-hub-discussions-reply>div.reply-body.sc-arcgis-hub-discussions-reply{display:grid;gap:0.25rem}article.out-of-context.sc-arcgis-hub-discussions-reply>div.reply-body.sc-arcgis-hub-discussions-reply>arcgis-hub-discussions-post-geography.sc-arcgis-hub-discussions-reply{margin-left:-1rem}.reply-header.sc-arcgis-hub-discussions-reply{display:grid;grid-template-rows:repeat(2, minmax(0, 1fr));-moz-column-gap:0.5rem;column-gap:0.5rem;row-gap:0.25rem;font-style:normal;grid-template-columns:54px auto}arcgis-hub-discussions-popover.sc-arcgis-hub-discussions-reply{grid-row:span 2 / span 2}.reply-header.sc-arcgis-hub-discussions-reply header.sc-arcgis-hub-discussions-reply{display:flex;align-items:flex-end;font-size:var(--calcite-font-size-0);line-height:1.25rem;font-weight:var(--calcite-font-weight-bold);text-transform:capitalize;color:var(--calcite-ui-text-1)}.header-avatars.sc-arcgis-hub-discussions-reply{grid-row:span 2 / span 2;display:flex;height:54px}.header-avatars.sc-arcgis-hub-discussions-reply calcite-avatar.sc-arcgis-hub-discussions-reply+calcite-avatar.sc-arcgis-hub-discussions-reply{position:absolute;top:1rem;left:1rem;z-index:10;box-sizing:content-box;border-radius:9999px;border:3px solid var(--calcite-ui-foreground-1)}.reply-header.sc-arcgis-hub-discussions-reply .metadata.sc-arcgis-hub-discussions-reply{display:flex;flex-wrap:nowrap;gap:0.25rem;font-size:var(--calcite-font-size--1);line-height:1rem}.reply-header.sc-arcgis-hub-discussions-reply .metadata.sc-arcgis-hub-discussions-reply b.sc-arcgis-hub-discussions-reply{max-height:1rem;word-break:break-all;font-weight:var(--calcite-font-weight-medium);font-style:normal;color:var(--calcite-ui-text-2);overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1}.reply-header.sc-arcgis-hub-discussions-reply .metadata.sc-arcgis-hub-discussions-reply span.sc-arcgis-hub-discussions-reply{display:flex;width:0.5rem;justify-content:center;font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-ui-text-2)}\";\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar ReplyView;\n(function (ReplyView) {\n  ReplyView[\"Skeleton\"] = \"skeleton\";\n  ReplyView[\"Content\"] = \"content\";\n  ReplyView[\"OutOfContext\"] = \"outOfContext\";\n  ReplyView[\"Editor\"] = \"editor\";\n  ReplyView[\"Deleted\"] = \"deleted\";\n})(ReplyView || (ReplyView = {}));\n/**\n * Classes used by this component to facilitate the animations\n * when transitioning between default reply and editor views\n */\nvar ANIMATION_CLASSES;\n(function (ANIMATION_CLASSES) {\n  ANIMATION_CLASSES[\"IN\"] = \"in\";\n  ANIMATION_CLASSES[\"OUT\"] = \"out\";\n  ANIMATION_CLASSES[\"HIDDEN\"] = \"hidden\";\n})(ANIMATION_CLASSES || (ANIMATION_CLASSES = {}));\nconst ArcgisHubDiscussionsReply = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubDiscussionsReplyDelete = createEvent(this, \"arcgisHubDiscussionsReplyDelete\", 7);\n    this.arcgisHubDiscussionsGeometryDrawReset = createEvent(this, \"arcgisHubDiscussionsGeometryDrawReset\", 7);\n    this.arcgisHubDiscussionsViewAllReplies = createEvent(this, \"arcgisHubDiscussionsViewAllReplies\", 7);\n    this.arcgisHubDiscussionsReplyUpdate = createEvent(this, \"arcgisHubDiscussionsReplyUpdate\", 7);\n    this.arcgisHubDiscussionsPostUpdate = createEvent(this, \"arcgisHubDiscussionsPostUpdate\", 7);\n    this.arcgisHubDiscusssionsChannelUpdate = createEvent(this, \"arcgisHubDiscusssionsChannelUpdate\", 7);\n    this.arcgisHubDiscussionsReplySelect = createEvent(this, \"arcgisHubDiscussionsReplySelect\", 7);\n    this.hubTelemetry = createEvent(this, \"hubTelemetry\", 7);\n    /**\n     * Feature geometry edits for existing post locations\n     */\n    this.unsavedExistingFeatures = [];\n    /**\n     * Whether the component should show it's skeleton state\n     */\n    this.loading = true;\n    /**\n     * Denotes that the reply editor should be rendered\n     */\n    this.editing = false;\n    /**\n     * An event failed\n     */\n    this.errorMessage = null;\n    /**\n     * Enforces minimum height for the component. This is used to prevent a janky user\n     * experience where this component briefly collapses down between transitions\n     * between the reply content and reply editor when a user elects to edit the\n     * reply.\n     */\n    this.minHeight = null;\n    /**\n     * Animation class to be applied to the article element when transitioning\n     * between reply and reply editor views\n     */\n    this.replyClass = null;\n    /**\n     * Animation class to be applied to the editor element when transitioning\n     * between reply and reply editor views\n     */\n    this.editorClass = ANIMATION_CLASSES.HIDDEN;\n    /**\n     * A reference to the article or reply editor component\n     */\n    this.renderedEl = null;\n    bind(this, 'handleSetComponentRef', 'handleDelete', 'handleEdit', 'handleAnimationEnd', 'handleLinkClicked', 'handleViewThread', 'renderReply', 'renderReplyOutOfContext', 'renderEditor', 'renderDeleted', 'handleViewAllReplies');\n  }\n  /**\n   * Component pre-render setup\n   */\n  componentWillLoad() {\n    this.initialize();\n  }\n  /**\n   * Connected callback lifecycle hook\n   */\n  connectedCallback() {\n    this.addAnimationEventListeners(this.renderedEl);\n  }\n  /**\n   * Disconnected callback lifecycle hook\n   */\n  disconnectedCallback() {\n    this.removeAnimationEventListeners(this.renderedEl);\n  }\n  /**\n   * Updates loading state when intl, replyDetails or postDetails\n   * are updated\n   */\n  handleDetailsUpdates() {\n    this.addEnrichments();\n  }\n  /**\n   * Watches for changes to the renderedEl (article or editor component) and wires\n   * up animationend directly on the element reference as animation events don't bubble\n   * up the DOM.\n   * @param renderedEl The currently rendered element\n   * @param prevRenderedEl The previously rendered element\n   */\n  handleRenderedElChange(renderedEl, prevRenderedEl) {\n    this.removeAnimationEventListeners(prevRenderedEl);\n    this.addAnimationEventListeners(renderedEl);\n  }\n  /**\n   * Initiates reply details enrichmentment, initializes\n   * loading state, and loads localizations\n   */\n  async initialize() {\n    const { element } = this;\n    this.addEnrichments();\n    this.intl = await intlManager.loadIntlForComponent(element);\n  }\n  addEnrichments() {\n    const { isPostEnriched, isReplyEnriched, isChannelEnriched, replyDetails: { postId: replyId }, postDetails: { postId }, channelDetails: { channelId } } = this;\n    if (!isReplyEnriched && replyId) {\n      this.enrichReplyDetails();\n    }\n    if (!isPostEnriched && postId) {\n      this.enrichPostDetails();\n    }\n    if (!isChannelEnriched && channelId) {\n      this.enrichChannelDetails();\n    }\n    this.updateLoading();\n  }\n  updateLoading() {\n    const { isEnriched } = this;\n    this.loading = !isEnriched;\n  }\n  /**\n   * Enriches reply details and emits arcgisHubDiscussionsReplyUpdate so\n   * upstream state is updated\n   */\n  async enrichReplyDetails() {\n    const { replyDetails: rawReplyDetails, context } = this;\n    const replyDetails = await enrichPostDetails(Object.assign({ postDetails: rawReplyDetails }, context.hubRequestOptions));\n    this.arcgisHubDiscussionsReplyUpdate.emit(replyDetails);\n  }\n  /**\n   * Enriches parent post details and emits arcgisHubDiscussionsReplyUpdate so\n   * upstream state is updated\n   */\n  async enrichPostDetails() {\n    const { postDetails: rawPostDetails, context } = this;\n    const postDetails = await enrichPostDetails(Object.assign({ postDetails: rawPostDetails, includeReplyCount: true }, context.hubRequestOptions));\n    this.arcgisHubDiscussionsPostUpdate.emit(postDetails);\n  }\n  /**\n   * Enriches channel details and emits arcgisHubDiscusssionsChannelUpdate so\n   * upstream state is updated\n   */\n  async enrichChannelDetails() {\n    const { context, replyDetails, channelDetails: _channelDetails } = this;\n    const channelDetails = await enrichChannelDetails(Object.assign({ channelDetails: _channelDetails }, context.hubRequestOptions));\n    this.arcgisHubDiscusssionsChannelUpdate.emit({\n      postId: replyDetails === null || replyDetails === void 0 ? void 0 : replyDetails.postId,\n      channelDetails\n    });\n  }\n  /**\n   * Adds relevant animation event listeners to the provided element reference\n   * @param el An HTMLElement reference\n   */\n  addAnimationEventListeners(el) {\n    if (el) {\n      el.addEventListener('animationend', this.handleAnimationEnd);\n    }\n  }\n  /**\n   * Removes relevant animation event listeners from the provided element reference\n   * @param el An HTMLElement reference\n   */\n  removeAnimationEventListeners(el) {\n    if (el) {\n      el.removeEventListener('animationend', this.handleAnimationEnd);\n    }\n  }\n  /**\n   * Sanitizes body text and renders urls as links. Caches reply body so operation is only performed as needed.\n   * @returns string: body text of a reply with urls rendered as calcite-links\n   */\n  computeReplyBody() {\n    return this.replyDetails.post.body;\n  }\n  /**\n   * Emits arcgisHubDiscussionsViewAllReplies when reply is deleted and\n   * user clicks View all replies link from calcite-notice\n   */\n  handleViewAllReplies() {\n    this.arcgisHubDiscussionsViewAllReplies.emit();\n  }\n  /**\n   * Computes if the reply details are enriched\n   */\n  get isReplyEnriched() {\n    const { replyDetails: { creatorDetails, post } } = this;\n    const requiredValues = [\n      creatorDetails === null || creatorDetails === void 0 ? void 0 : creatorDetails.username,\n      creatorDetails === null || creatorDetails === void 0 ? void 0 : creatorDetails.user,\n      creatorDetails === null || creatorDetails === void 0 ? void 0 : creatorDetails.organization\n    ];\n    const isNotUndefined = (val) => val !== undefined;\n    return (post === null) || requiredValues.every(isNotUndefined);\n  }\n  /**\n   * Computes if the post details are enriched\n   */\n  get isPostEnriched() {\n    const { postDetails: { creatorDetails, post } } = this;\n    const requiredEnrichments = [\n      creatorDetails === null || creatorDetails === void 0 ? void 0 : creatorDetails.username,\n      creatorDetails === null || creatorDetails === void 0 ? void 0 : creatorDetails.user,\n      creatorDetails === null || creatorDetails === void 0 ? void 0 : creatorDetails.organization\n    ];\n    const isNotUndefined = (val) => val !== undefined;\n    return (post === null) || requiredEnrichments.every(isNotUndefined);\n  }\n  /**\n   * Computes if the channel details are enriched\n   */\n  get isChannelEnriched() {\n    const { channelDetails: { channel, groups } } = this;\n    const isNotUndefined = (value) => value !== undefined;\n    const requiredValues = [channel, groups];\n    return requiredValues.every(isNotUndefined);\n  }\n  /**\n   * Computes if all enrichments have been satisfied\n   */\n  get isEnriched() {\n    const { intl, isPostEnriched, isReplyEnriched, isChannelEnriched } = this;\n    return Boolean(intl) && isPostEnriched && isReplyEnriched && isChannelEnriched;\n  }\n  /**\n   * Computes creator full name string\n   */\n  get creatorFullName() {\n    const { intl, replyDetails: { creatorDetails: { user: creator }, post: reply } } = this;\n    let fullName = intl.t('anonymous');\n    if (creator || (reply === null || reply === void 0 ? void 0 : reply.creator)) {\n      fullName = (creator === null || creator === void 0 ? void 0 : creator.fullName) || intl.t('privateUser');\n    }\n    return fullName;\n  }\n  get group() {\n    const { channelDetails } = this;\n    return channelDetails ? channelDetails.groups[0] : undefined;\n  }\n  /**\n   * If this component is rendered out of context of parent post (post-list vs thread)\n   */\n  get outOfContext() {\n    const { index, lead } = this;\n    return lead === undefined && index !== undefined;\n  }\n  /**\n   * Computes styles object\n   */\n  get styles() {\n    const { minHeight, editing } = this;\n    const styles = {\n      zIndex: editing ? '20' : '10'\n    };\n    if (minHeight) {\n      styles.minHeight = `${minHeight}px`;\n    }\n    return styles;\n  }\n  /**\n   * Assigns a reference to the article element so we\n   * can calculate it's height\n   * @param article A reference to the article element\n   */\n  handleSetComponentRef(renderedEl) {\n    if (renderedEl) {\n      this.renderedEl = renderedEl;\n    }\n  }\n  /**\n   * Handles users clicking the Cancel button\n   * from the reply editor\n   */\n  handleReplyCancel() {\n    this.transitionToReply();\n    this.arcgisHubDiscussionsGeometryDrawReset.emit();\n  }\n  /**\n   * Handles animationend events for the renderedEl. Used to initiate\n   * secondary animation when transitioning between reply and reply editor\n   * views. Additionally removes temporarily enforced min height after chained\n   * animations complete.\n   * @param evt  An AnimationEvent\n   */\n  handleAnimationEnd(evt) {\n    if (evt.animationName === 'out-left') {\n      this.editing = true;\n      this.editorClass = ANIMATION_CLASSES.IN;\n      this.replyClass = ANIMATION_CLASSES.HIDDEN;\n    }\n    else if (evt.animationName === 'out-right') {\n      this.editing = false;\n      this.editorClass = ANIMATION_CLASSES.HIDDEN;\n      this.replyClass = ANIMATION_CLASSES.IN;\n    }\n    else {\n      this.minHeight = null;\n    }\n  }\n  /**\n   * Handles users clicking the Delete reply action menu action\n   */\n  handleDelete() {\n    const { replyDetails: { post: reply }, context } = this;\n    this.errorMessage = null;\n    return removePost(Object.assign({ postId: reply.id }, context.hubRequestOptions))\n      .then(() => {\n      this.deletedDuringSession = true;\n      this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.content.action.delete), { response: dist.constants.response.SUCCESS }));\n      this.arcgisHubDiscussionsReplyDelete.emit(reply);\n    })\n      .catch(e => {\n      this.errorMessage = 'deleteFailure';\n      this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.content.action.delete), { response: dist.constants.response.FAILURE }));\n      console.error(`Could not delete reply:`, e.message);\n    });\n  }\n  /**\n   * Handles users clicking the Edit action menu action\n   */\n  handleEdit() {\n    this.transitionEditorView(true);\n  }\n  handleViewThread() {\n    this.arcgisHubDiscussionsReplySelect.emit();\n  }\n  /**\n   * Handles users successfully editing a reply and clicking the Save button\n   */\n  transitionToReply() {\n    this.transitionEditorView(false);\n  }\n  /**\n   * Initiates the animations related to showing and hiding\n   * the reply editor\n   * @param showEditor  Whether to show or hide the reply editor\n   */\n  transitionEditorView(showEditor) {\n    var _a, _b;\n    this.minHeight = (_b = (_a = this.renderedEl) === null || _a === void 0 ? void 0 : _a.offsetHeight) !== null && _b !== void 0 ? _b : null;\n    this.editorClass = showEditor\n      ? ANIMATION_CLASSES.HIDDEN\n      : ANIMATION_CLASSES.OUT;\n    this.replyClass = showEditor\n      ? ANIMATION_CLASSES.OUT\n      : ANIMATION_CLASSES.HIDDEN;\n  }\n  /**\n   * Emits hubTelemetry event, augmenting provided telemetry info with additional, common telemetry details\n   * @param telemetry\n   */\n  emitHubTelemetry(telemetry) {\n    const { postDetails: { postId: parentId }, replyDetails: { postId }, channelDetails: { channel } } = this;\n    this.hubTelemetry.emit(Object.assign(Object.assign({}, telemetry), { postId,\n      parentId, channelId: channel.id, channelAccess: channel.access }));\n  }\n  /**\n   * When reply body is clicked, determines if a link was clicked and emits appropriate telemetry\n   * @param evt a pointer event\n   */\n  handleLinkClicked(evt) {\n    const el = evt.target;\n    if (['CALCITE-LINK'].includes(el.nodeName) && !el.hasAttribute(\"data-mention\")) {\n      const { replyDetails: { postId: replyId }, postDetails: { postId }, channelDetails: { channel }, index } = this;\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.navigation.action.external.label.link), { details: el.href, postId: replyId, parentId: postId, channelId: channel.id, channelAccess: channel.access, position: index }));\n    }\n  }\n  captureReplyDeepLinkImpression() {\n    this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.viewed.label.post.details.thread), { response: dist.constants.response.SUCCESS }));\n  }\n  captureReplyListImpression() {\n    this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.viewed.label.post.details.thread), { position: this.index }));\n  }\n  captureReplyDeletedImpression() {\n    this.emitHubTelemetry(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.viewed.label.post.details.thread), { response: dist.constants.response.FAILURE }));\n  }\n  get views() {\n    const { renderReply, renderReplyOutOfContext, renderEditor, renderDeleted, renderSkeleton } = this;\n    return {\n      [ReplyView.Skeleton]: {\n        render: renderSkeleton,\n      },\n      [ReplyView.Content]: {\n        render: renderReply,\n      },\n      [ReplyView.OutOfContext]: {\n        render: renderReplyOutOfContext,\n      },\n      [ReplyView.Editor]: {\n        render: renderEditor,\n      },\n      [ReplyView.Deleted]: {\n        render: renderDeleted,\n      }\n    };\n  }\n  get view() {\n    const { views, editing, outOfContext, replyDetails: { post: reply }, loading } = this;\n    let target;\n    if (loading) {\n      target = ReplyView.Skeleton;\n    }\n    else if (editing) {\n      target = ReplyView.Editor;\n    }\n    else if (outOfContext) {\n      target = ReplyView.OutOfContext;\n    }\n    else if (reply) {\n      target = ReplyView.Content;\n    }\n    else {\n      target = ReplyView.Deleted;\n    }\n    return views[target];\n  }\n  /**\n   * Renders the reply editor component\n   */\n  renderEditor() {\n    const { context, hasMap, unsavedFeatures, unsavedRelatedFeatures, unsavedExistingFeatures, editorClass, lead, postDetails, channelDetails, replyDetails, discussionDetails, isMobile } = this;\n    const classes = { \"reply-lead\": lead };\n    if (editorClass) {\n      classes[editorClass] = true;\n    }\n    return (h(\"arcgis-hub-discussions-reply-editor\", { channelDetails: channelDetails, class: classes, context: context, discussionDetails: discussionDetails, hasMap: hasMap, isMobile: isMobile, postDetails: postDetails, ref: this.handleSetComponentRef, replyDetails: replyDetails, unsavedExistingFeatures: unsavedExistingFeatures, unsavedFeatures: unsavedFeatures, unsavedRelatedFeatures: unsavedRelatedFeatures }));\n  }\n  /**\n   * Renders the reply creator avatar and optionally the channel avatar\n   */\n  renderAvatars() {\n    var _a;\n    const { context, isHub, postDetails, replyDetails, channelDetails, index, outOfContext, group } = this;\n    const { portal, token } = context.session;\n    const user = (!replyDetails.creatorDetails.user && replyDetails.post)\n      ? { username: replyDetails.post.creator }\n      : replyDetails.creatorDetails.user;\n    const scale = outOfContext ? 'l' : 'm';\n    let el = [(h(\"calcite-avatar\", { \"full-name\": user === null || user === void 0 ? void 0 : user.fullName, key: 'creator', scale: scale, thumbnail: (user === null || user === void 0 ? void 0 : user.thumbnail) && getUserThumbnailUrl(portal, user, token), \"user-id\": (_a = user) === null || _a === void 0 ? void 0 : _a.id, username: user === null || user === void 0 ? void 0 : user.username }))];\n    if (outOfContext && group) {\n      el.push(h(\"calcite-avatar\", { \"full-name\": group.title, scale: \"m\", thumbnail: getGroupThumbnailUrl(context.session.portal, group, context.session.token) }));\n    }\n    if (replyDetails.creatorDetails) {\n      el = (h(\"arcgis-hub-discussions-popover\", { channelDetails: channelDetails, context: context, index: index, isHub: isHub, originalPostDetails: postDetails, postDetails: replyDetails }, el));\n    }\n    return el;\n  }\n  renderActions() {\n    const { intl, context, channelDetails: { channel, groups }, replyDetails: { post: reply } } = this;\n    const actions = [];\n    if (groups.length && canModifyPost(reply, context.currentUser)) {\n      actions.push({\n        text: intl.t('edit'),\n        onClick: this.handleEdit,\n      });\n    }\n    if (canDeletePost(reply, channel, context.currentUser)) {\n      actions.push({\n        text: intl.t('delete'),\n        onClick: this.handleDelete,\n      });\n    }\n    if (actions.length) {\n      return (h(\"calcite-action-group\", { layout: \"horizontal\" }, actions.map(action => (h(\"calcite-action\", { appearance: action.appearance, \"data-action\": action.text.toLowerCase(), icon: action.icon, key: action.text || action.pin, onClick: action.onClick, onMouseOver: action.onMouseOver, scale: \"s\", text: action.text, \"text-enabled\": Boolean(action.text) })))));\n    }\n  }\n  /**\n   * Render the reply out of context\n   */\n  renderReplyOutOfContext() {\n    var _a;\n    const { intl, errorMessage, replyDetails, postDetails, channelDetails, creatorFullName, hasMap, index, discussionDetails, context, replyClass, isMobile } = this;\n    const { creatorDetails: { user: { fullName } } } = postDetails;\n    const isRtl = intl.direction === 'rtl';\n    const icon = isRtl ? 'arrow-left' : 'arrow-right';\n    const classes = { \"out-of-context\": true };\n    if (replyClass) {\n      classes[replyClass] = true;\n    }\n    (index === undefined)\n      ? this.captureReplyDeepLinkImpression()\n      : this.captureReplyListImpression();\n    return (h(\"article\", { class: classes, ref: this.handleSetComponentRef }, h(\"div\", { class: \"reply-header\" }, h(\"div\", { class: \"header-avatars\" }, this.renderAvatars()), h(\"header\", null, creatorFullName), h(\"div\", { class: \"metadata\" }, h(\"calcite-icon\", { class: \"flipY\", icon: \"right\", scale: \"s\" }), h(\"b\", null, intl.t('replyingTo', { fullName })), h(\"span\", null, \"\\u00B7\"), h(\"calcite-link\", { onClick: this.handleViewThread }, intl.t('viewPost')))), h(\"div\", { class: \"reply-body\" }, h(\"arcgis-multiline-ellipsis\", { \"collapse-enabled\": true, \"expand-enabled\": true, \"expand-icon\": icon, innerHTML: this.computeReplyBody(), lines: 4, onClick: this.handleViewThread }), this.renderActions(), h(\"arcgis-hub-discussions-post-geography\", { channelDetails: channelDetails, context: context, discussionDetails: discussionDetails, hasMap: hasMap, isMobile: isMobile, parentDetails: postDetails, postDetails: replyDetails, toggleable: true, url: (_a = discussionDetails === null || discussionDetails === void 0 ? void 0 : discussionDetails.reference) === null || _a === void 0 ? void 0 : _a.url }), errorMessage && (h(\"calcite-notice\", { active: true, color: \"red\", dismissible: true, scale: \"s\" }, h(\"div\", { slot: \"title\" }, intl.t('error')), h(\"div\", { slot: \"message\" }, intl.t(errorMessage)))))));\n  }\n  /**\n   * Renders the reply view\n   */\n  renderReply() {\n    var _a;\n    const { intl, errorMessage, postDetails, replyDetails, channelDetails, replyClass, creatorFullName, lead, hasMap, index, discussionDetails, context, isMobile } = this;\n    const classes = { \"reply-lead\": lead };\n    if (replyClass) {\n      classes[replyClass] = true;\n    }\n    (index === undefined)\n      ? this.captureReplyDeepLinkImpression()\n      : this.captureReplyListImpression();\n    return (h(\"article\", { class: classes, ref: this.handleSetComponentRef }, this.renderAvatars(), h(\"div\", null, h(\"address\", null, h(\"b\", null, creatorFullName), h(\"span\", null, \"\\u00B7\"), h(\"arcgis-relative-date\", { dateTime: replyDetails.post.createdAt, formatStyle: \"short\" })), h(\"arcgis-multiline-ellipsis\", { \"collapse-enabled\": true, \"expand-enabled\": true, innerHTML: this.computeReplyBody(), lines: 4 }), this.renderActions(), h(\"arcgis-hub-discussions-post-geography\", { channelDetails: channelDetails, context: context, discussionDetails: discussionDetails, hasMap: hasMap, isMobile: isMobile, parentDetails: postDetails, postDetails: replyDetails, toggleable: true, url: (_a = discussionDetails === null || discussionDetails === void 0 ? void 0 : discussionDetails.reference) === null || _a === void 0 ? void 0 : _a.url }), errorMessage && (h(\"calcite-notice\", { active: true, color: \"red\", dismissible: true, scale: \"s\" }, h(\"div\", { slot: \"title\" }, intl.t('error')), h(\"div\", { slot: \"message\" }, intl.t(errorMessage)))))));\n  }\n  renderDeleted() {\n    const { intl, handleViewAllReplies, deletedDuringSession } = this;\n    if (!deletedDuringSession) {\n      this.captureReplyDeletedImpression();\n    }\n    return (h(\"calcite-notice\", { active: true, color: \"red\", scale: \"m\" }, h(\"div\", { slot: \"title\" }, intl.t('deleted.title')), h(\"div\", { slot: \"message\" }, intl.t('deleted.message')), h(\"calcite-link\", { onClick: handleViewAllReplies, slot: \"link\" }, intl.t('delete.action'))));\n  }\n  renderSkeleton() {\n    return h(\"arcgis-hub-discussions-post-skeleton\", null);\n  }\n  /**\n   * Render entrypoint method\n   */\n  render() {\n    const { view, styles } = this;\n    return (h(Host, { \"data-element\": \"discussions-reply\", style: styles }, view.render()));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"intl\": [\"handleDetailsUpdates\"],\n    \"postDetails\": [\"handleDetailsUpdates\"],\n    \"replyDetails\": [\"handleDetailsUpdates\"],\n    \"channelDetails\": [\"handleDetailsUpdates\"],\n    \"renderedEl\": [\"handleRenderedElChange\"]\n  }; }\n};\n__decorate$1([\n  CacheDecoratorFactory({\n    getKey() {\n      return this.replyDetails.post.body;\n    }\n  }),\n  AutoLinkDecoratorFactory({ calcite: true }),\n  MentionPopoverTransformDecoratorFactory(),\n  SanitizeDecoratorFactory({\n    filterOptions: {\n      whiteList: {\n        'calcite-link': ['href', 'data-mention']\n      }\n    },\n    extendDefaults: true\n  })\n], ArcgisHubDiscussionsReply.prototype, \"computeReplyBody\", null);\n__decorate$1([\n  callOnceFactory()\n], ArcgisHubDiscussionsReply.prototype, \"captureReplyDeepLinkImpression\", null);\n__decorate$1([\n  callOnceFactory()\n], ArcgisHubDiscussionsReply.prototype, \"captureReplyListImpression\", null);\n__decorate$1([\n  callOnceFactory()\n], ArcgisHubDiscussionsReply.prototype, \"captureReplyDeletedImpression\", null);\nArcgisHubDiscussionsReply.style = arcgisHubDiscussionsReplyCss;\n\nconst arcgisHubDiscussionsReplyEditorCss = \".hub-discussions-reply-editor{display:block;padding-left:0.75rem;padding-right:0.75rem}.hub-discussions-reply-editor__form{border-radius:0.25rem;background-color:var(--calcite-ui-foreground-1);padding:0.75rem;--tw-shadow:0 2px 8px 0 rgba(0, 0, 0, 0.12);--tw-shadow-colored:0 2px 8px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.hub-discussions-reply-editor__button-group{margin-top:1rem;display:flex;justify-content:flex-end}.hub-discussions-reply-editor__button{margin-left:0.75rem}.hub-discussions-reply-editor__button-group>calcite-action{margin-right:auto}.hub-discussions-reply-editor-user-details{margin:0px;display:grid;align-items:center;-moz-column-gap:0.75rem;column-gap:0.75rem;grid-template-columns:32px auto}.hub-discussions-reply-editor-user-details__name{font-size:var(--calcite-font-size-0);line-height:1.25rem;font-weight:var(--calcite-font-weight-bold);font-style:normal}.hub-discussions-reply-editor__notice,.hub-discussions-reply-editor__not-discussable-notice{margin-left:0px;margin-right:0px;margin-top:1rem}.hub-discussions-reply-editor-confirmation{display:block}.hub-discussions-reply-editor-confirmation__header{margin-top:0.5rem;font-size:var(--calcite-font-size-1);line-height:1.5rem;font-weight:var(--calcite-font-weight-bold)}.hub-discussions-reply-editor-confirmation__text{margin-top:0.5rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}.hub-discussions-reply-editor-footer{display:grid;grid-auto-flow:column;grid-template-columns:repeat(2, minmax(0, 1fr));-moz-column-gap:0.75rem;column-gap:0.75rem}.hub-discussions-reply-editor-footer__button{margin:0px}.hub-discussions-reply-editor__body{margin-top:0.75rem}.hub-discussions-reply-editor__body[scale=m] .ck.ck-editor__editable{border-style:none;background-color:var(--calcite-ui-foreground-1);padding:0px;font-size:var(--calcite-font-size-0);line-height:1.25rem;color:var(--calcite-ui-text-1);outline:2px solid transparent;outline-offset:2px;min-height:6rem}.hub-discussions-reply-editor__body .ck.ck-editor__editable.ck-focused:not(.ck-editor__nested-editable){border-style:none;outline:2px solid transparent;outline-offset:2px}.hub-discussions-reply-editor__body[scale=m] .ck.ck-editor__editable .ck-placeholder:before{color:var(--calcite-ui-text-3)}.hub-discussions-reply-editor__body .ck.ck-editor__editable_inline>:first-child{margin-top:0px}.hub-discussions-reply-editor__body .ck.ck-editor__editable_inline>:last-child{margin-bottom:0px}.hub-discussions-reply-editor__message{margin-top:0.5rem}.hub-discussions-reply-editor__location-popover>div.hub-discussions-reply-editor__location-popover__content,.hub-discussions-reply-editor__location-popover__content{max-width:20rem;padding-top:0.75rem;padding-bottom:0.75rem;padding-left:1.25rem;padding-right:1.25rem}.add-location-post:active .add-location-icon{--tw-text-opacity:1;color:rgb(21 21 21 / var(--tw-text-opacity))}.add-location-post[active] .add-location-icon{--tw-text-opacity:1;color:rgb(21 21 21 / var(--tw-text-opacity))}\";\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst ArcgisHubDiscussionsReplyEditor = class {\n  /**\n   * Constructor function\n   */\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubDiscussionsReplyCreate = createEvent(this, \"arcgisHubDiscussionsReplyCreate\", 7);\n    this.arcgisHubDiscussionsReplyEdit = createEvent(this, \"arcgisHubDiscussionsReplyEdit\", 7);\n    this.arcgisHubDiscussionsReplyCancel = createEvent(this, \"arcgisHubDiscussionsReplyCancel\", 7);\n    this.arcgisHubDiscussionsGeometryDrawCreate = createEvent(this, \"arcgisHubDiscussionsGeometryDrawCreate\", 7);\n    this.arcgisHubDiscussionsGeometryDrawTypeSelect = createEvent(this, \"arcgisHubDiscussionsGeometryDrawTypeSelect\", 7);\n    this.arcgisHubDiscussionsGeometryDrawEdit = createEvent(this, \"arcgisHubDiscussionsGeometryDrawEdit\", 7);\n    this.arcgisHubDiscussionsGeometryDrawReset = createEvent(this, \"arcgisHubDiscussionsGeometryDrawReset\", 7);\n    this.arcgisHubDiscussionsGeometrySelect = createEvent(this, \"arcgisHubDiscussionsGeometrySelect\", 7);\n    this.arcgisHubDiscussionsGeometryDeselect = createEvent(this, \"arcgisHubDiscussionsGeometryDeselect\", 7);\n    this.arcgisHubDiscussionsGeometryClearAll = createEvent(this, \"arcgisHubDiscussionsGeometryClearAll\", 7);\n    this.arcgisHubDiscussionsScrollTo = createEvent(this, \"arcgisHubDiscussionsScrollTo\", 7);\n    this.hubTelemetry = createEvent(this, \"hubTelemetry\", 7);\n    /**\n     * A Feature selected from a map\n     */\n    this.unsavedFeatures = [];\n    /**\n     * A related Feature from a map\n     */\n    this.unsavedRelatedFeatures = [];\n    /**\n     * Feature geometry edits for existing post locations\n     */\n    this.unsavedExistingFeatures = [];\n    /**\n     * A Feature selected from a map for internal state management\n     */\n    this._unsavedFeatures = [];\n    /**\n     * A related Feature from a map for internal state management\n     */\n    this._unsavedRelatedFeatures = [];\n    /**\n     * Internal existing feature state tracking\n     */\n    this._unsavedExistingFeatures = [];\n    /**\n     * The text input value\n     */\n    this.inputValue = '';\n    /**\n     * A reply submission is processing\n     */\n    this.pending = false;\n    /**\n     * Initial Post discussion URI\n     */\n    this.discussionValue = '';\n    /**\n     * An event failed\n     */\n    this.errorMessage = null;\n    bind(this, 'focusInput', 'handleReplySubmit', 'handleCancel', 'handleCancelOrConfirm', 'handleConfirmBackButtonClicked', 'handleInputChange', 'handleInputRef', 'setActiveGeometryDrawType', 'handleCalcitePopoverOpen', 'handleCalcitePopoverClose');\n  }\n  /**\n   * Component pre-render setup\n   */\n  async componentWillLoad() {\n    const { replyDetails } = this;\n    if (replyDetails === null || replyDetails === void 0 ? void 0 : replyDetails.post) {\n      this.inputValue = replyDetails.post.body;\n      this.discussionValue = replyDetails.post.discussion;\n      const geometryClone = cloneObject(replyDetails.post.geometry);\n      this.geometryValue = Object.keys(geometryClone).length\n        ? geometryClone\n        : null;\n    }\n    this._unsavedFeatures = this.unsavedFeatures;\n    this._unsavedRelatedFeatures = this.unsavedRelatedFeatures;\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n  }\n  componentDidLoad() {\n    this.focusInput();\n    if (this.autoScroll) {\n      this.arcgisHubDiscussionsScrollTo.emit();\n    }\n  }\n  /**\n   * Called when the user changes the text of the post body content\n   * @param evt An onChange event for the post body calcite-input\n   */\n  updateBodyValue(evt) {\n    this.inputValue = evt.target.value;\n  }\n  handleDrawDone() {\n    this.arcgisHubDiscussionsGeometryDrawReset.emit();\n    this.addLocationsActiveGeometryType = null;\n  }\n  /**\n   * Computes the mention feature config\n   */\n  get mentionConfig() {\n    const { context, channelDetails } = this;\n    return {\n      searchUsers: (query) => searchOtherTeamMembers(Object.assign({ id: channelDetails.groups[0].id, currentUser: context.currentUser, query }, context.hubRequestOptions))\n    };\n  }\n  /**\n   * Computes if cancel action should be confirmed\n   */\n  get shouldConfirmCancel() {\n    const { replyDetails, inputValue } = this;\n    return inputValue !== replyDetails.post.body;\n  }\n  /**\n   * Computes if input value is valid\n   */\n  get isInputValid() {\n    const { inputValue } = this;\n    return inputValue.trim().length > 0 && inputValue.length <= MAX_BODY_LENGTH;\n  }\n  /**\n   * Computes input warning/error messages\n   */\n  get inputMessage() {\n    const { inputValue, isInputValid, intl } = this;\n    const { length } = inputValue;\n    if (length >= WARNING_BODY_LENGTH) {\n      return isInputValid\n        ? {\n          status: 'idle',\n          text: intl.t('reply.body.validation.warning')\n        }\n        : {\n          icon: 'exclamation-mark-circle',\n          status: 'invalid',\n          text: intl.t('reply.body.validation.error')\n        };\n    }\n  }\n  /**\n   * IPostDetails with augmented with current location edits\n   */\n  get replyDetailsWithLocationEdits() {\n    const { replyDetails } = this;\n    const { geometryValue, discussionValue } = this;\n    const _replyDetails = cloneObject(replyDetails);\n    if (_replyDetails) {\n      _replyDetails.post.geometry = geometryValue;\n      if (discussionValue !== replyDetails.post.discussion) {\n        _replyDetails.post.discussion = discussionValue;\n      }\n    }\n    return _replyDetails;\n  }\n  /**\n   * Computes the blocked noticed variant\n   */\n  get blockedNotice() {\n    const isGroupDiscussable = isDiscussable(this.channelDetails.groups[0]);\n    const isSubjectDiscussable = isDiscussable(this.discussionDetails.reference);\n    let variant;\n    if (!isGroupDiscussable && !isSubjectDiscussable) {\n      variant = ArcgisHubDiscussionsBlockedNoticeVariant.EditReply;\n    }\n    else if (!isGroupDiscussable) {\n      variant = ArcgisHubDiscussionsBlockedNoticeVariant.EditReplyGroup;\n    }\n    else if (!isSubjectDiscussable) {\n      variant = this.discussionDetails.type === 'group'\n        ? ArcgisHubDiscussionsBlockedNoticeVariant.EditReplyGroup\n        : ArcgisHubDiscussionsBlockedNoticeVariant.EditReplyItem;\n    }\n    return variant;\n  }\n  /**\n   * Sets focus on the calcite-input text input\n   */\n  focusInput() {\n    const { input } = this;\n    // input.setFocus is undefined in spec tests for some reason...\n    if (input && input.setFocus) {\n      input.setFocus();\n    }\n  }\n  handleGeometryValueUpdated() {\n    if (this.replyDetails) {\n      const { replyDetails: { post: { geometry } }, geometryValue } = this;\n      this.geometryValueHasChanges = JSON.stringify(geometryValue) !== JSON.stringify(geometry);\n    }\n  }\n  /**\n   * Handles changes to the `unsavedFeatures` property\n   * @param unsavedFeatures A array of Feature objects representing drawings on the map\n   */\n  handleFeatureChange(unsavedFeatures) {\n    var _a, _b, _c;\n    // Used to discrimate between incoming props when multiple replies open (edit post || edit reply || create reply in thread)\n    const { replyDetails } = this;\n    if (unsavedFeatures.length) {\n      const featureId = (_b = (_a = unsavedFeatures[0]) === null || _a === void 0 ? void 0 : _a.properties) === null || _b === void 0 ? void 0 : _b.id;\n      const replyId = (_c = replyDetails === null || replyDetails === void 0 ? void 0 : replyDetails.post) === null || _c === void 0 ? void 0 : _c.id;\n      const isRecipient = (replyId === featureId) || (!(replyDetails === null || replyDetails === void 0 ? void 0 : replyDetails.post) && featureId === null);\n      if (isRecipient) {\n        this._unsavedFeatures = unsavedFeatures;\n        this.resetActiveGeometryDrawType();\n      }\n    }\n    else {\n      this._unsavedFeatures = [];\n    }\n  }\n  /**\n   * Handles changes to the `unsavedRelatedFeatures` property\n   * @param unsavedRelatedFeature A IPostRelatedFeatureDetails object representing a selected feature on a map\n   */\n  handleRelatedFeatureChange(unsavedRelatedFeatures) {\n    var _a;\n    // Used to discrimate between incoming props when multiple replies open (edit post || edit reply || create reply in thread)\n    const { replyDetails } = this;\n    if (unsavedRelatedFeatures.length) {\n      const relatedFeatureId = unsavedRelatedFeatures[0].postId;\n      const replyId = (_a = replyDetails === null || replyDetails === void 0 ? void 0 : replyDetails.post) === null || _a === void 0 ? void 0 : _a.id;\n      const isRecipient = (replyId === relatedFeatureId) || (!(replyDetails === null || replyDetails === void 0 ? void 0 : replyDetails.post) && relatedFeatureId === null);\n      if (isRecipient) {\n        this._unsavedRelatedFeatures = unsavedRelatedFeatures;\n        this.resetActiveGeometryDrawType();\n      }\n    }\n    else {\n      this._unsavedRelatedFeatures = [];\n    }\n  }\n  /**\n   * Updates internal _feature state when the unsavedExistingFeatures prop value changes\n   * @param feature A Feature object\n   */\n  handleExistingFeatureChange(unsavedExistingFeatures) {\n    var _a;\n    // Used to discriminate between incoming props when multiple replies open (edit post || edit reply || create reply in thread)\n    const { replyDetails } = this;\n    if (unsavedExistingFeatures.length) {\n      const featureId = (_a = unsavedExistingFeatures[0].properties) === null || _a === void 0 ? void 0 : _a.id;\n      const replyId = replyDetails === null || replyDetails === void 0 ? void 0 : replyDetails.postId;\n      const isRecipient = (replyId === featureId);\n      if (isRecipient) {\n        this._unsavedExistingFeatures = unsavedExistingFeatures;\n        this.resetActiveGeometryDrawType();\n      }\n    }\n    else {\n      this._unsavedExistingFeatures = [];\n    }\n  }\n  handleAddLocationsActiveGeometryTypeChanged(geometryType) {\n    if (geometryType) {\n      this.arcgisHubDiscussionsGeometryDrawTypeSelect.emit(geometryType);\n    }\n  }\n  /**\n   * Handles reply create/edit form submissions and performs actions common to both\n   * @param evt An onsubmit event\n   */\n  handleReplySubmit(evt) {\n    evt.preventDefault();\n    this.pending = true;\n    const promise = this.replyDetails\n      ? this.handleEdit()\n      : this.handleCreate();\n    return promise\n      .catch((e) => {\n      console.error(`Could not create reply:`, e.message);\n      return null;\n    })\n      .finally(async () => {\n      this.pending = false;\n      this.arcgisHubDiscussionsGeometryClearAll.emit();\n      this.addLocationsActiveGeometryType = null;\n      setTimeout(this.focusInput, 100);\n    });\n  }\n  /**\n   * Handles reply create form submissions\n   */\n  handleCreate() {\n    const { context, _unsavedFeatures, _unsavedRelatedFeatures, inputValue, postDetails: { post }, channelDetails: { channel }, discussionDetails: { discussion, reference: { url } }, arcgisHubDiscussionsReplyCreate } = this;\n    let uri = discussion;\n    if (_unsavedRelatedFeatures.length) {\n      const layerId = url.split('/').pop();\n      const objectIds = new Set(_unsavedRelatedFeatures.map(feature => feature.objectId));\n      uri = augmentDiscussionURIWithFeature(uri, layerId, Array.from(objectIds));\n    }\n    let geometry = null;\n    if (_unsavedFeatures.length) {\n      geometry = _unsavedFeatures.length > 1 ? featuresToGeometryCollection(_unsavedFeatures) : _unsavedFeatures[0].geometry;\n    }\n    this.errorMessage = null;\n    return createReply(Object.assign({ postId: post.id, params: {\n        access: channel.access,\n        groups: channel.groups,\n        channelId: channel.id,\n        discussion: uri,\n        body: inputValue.trim(),\n        geometry\n      }, mentionUrl: window.location.href }, context.hubRequestOptions)).then(reply => {\n      this.inputValue = '';\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.content.action.create), { response: dist.constants.response.SUCCESS, postId: reply.id, parentId: post.id, channelId: channel.id, channelAccess: channel.access }));\n      arcgisHubDiscussionsReplyCreate.emit(reply);\n      return reply;\n    }).catch(e => {\n      console.error(\"ERROR:\", e);\n      this.errorMessage = 'createFailure';\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.content.action.create), { response: dist.constants.response.FAILURE, parentId: post.id, channelId: channel.id, channelAccess: channel.access }));\n      console.error('Failed to create reply:', e.message);\n      return null;\n    });\n  }\n  /**\n   * Handles reply edit form submissions\n   */\n  handleEdit() {\n    const { context, inputValue, replyDetails: { post: reply }, postDetails: { postId }, channelDetails: { channel }, arcgisHubDiscussionsReplyEdit, _unsavedFeatures, _unsavedRelatedFeatures, _unsavedExistingFeatures, discussionDetails: { reference: { url } } } = this;\n    this.errorMessage = null;\n    let uri = this.discussionValue;\n    if (_unsavedRelatedFeatures.length) {\n      const layerId = url.split('/').pop();\n      const objectIds = _unsavedRelatedFeatures.map(feature => feature.objectId);\n      uri = augmentDiscussionURIWithFeature(uri, layerId, objectIds);\n    }\n    const originalPostFeatures = (this.geometryValue && Object.keys(this.geometryValue).length)\n      ? postToFeatures(Object.assign(Object.assign({}, reply), { geometry: this.geometryValue }))\n      : [];\n    _unsavedExistingFeatures.forEach(feature => {\n      // Apply any existing geometry updates to originalPostFeatures\n      const { properties: { index }, geometry } = feature;\n      originalPostFeatures[+index].geometry = geometry;\n    });\n    let geometry = null;\n    const combinedFeatures = [...originalPostFeatures, ..._unsavedFeatures];\n    if (combinedFeatures.length) {\n      if (combinedFeatures.length > 1) {\n        geometry = featuresToGeometryCollection(combinedFeatures);\n      }\n      else {\n        geometry = combinedFeatures[0].geometry.coordinates.length\n          ? combinedFeatures[0].geometry\n          : null;\n      }\n    }\n    return updatePost(Object.assign({ postId: reply.id, params: {\n        body: inputValue.trim(),\n        discussion: uri,\n        geometry\n      }, mentionUrl: window.location.href }, context.hubRequestOptions)).then(updatedReply => {\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.content.action.update), { response: dist.constants.response.SUCCESS, postId: reply.id, parentId: postId, channelId: channel.id, channelAccess: channel.access }));\n      arcgisHubDiscussionsReplyEdit.emit(updatedReply);\n      return updatedReply;\n    }).catch(e => {\n      this.errorMessage = 'editFailure';\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.content.action.update), { response: dist.constants.response.FAILURE, postId: reply.id, parentId: postId, channelId: channel.id, channelAccess: channel.access }));\n      console.error('Failed to edit reply:', e.message);\n      return null;\n    });\n  }\n  /**\n   * Handles clicks to the cancel button in the edit reply form\n   */\n  handleCancel() {\n    const { replyDetails: { post: reply }, postDetails: { post }, channelDetails: { channel } } = this;\n    this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.interaction.action.close.label.editor), { postId: reply === null || reply === void 0 ? void 0 : reply.id, parentId: post === null || post === void 0 ? void 0 : post.id, channelId: channel.id, channelAccess: channel.access }));\n    this.arcgisHubDiscussionsReplyCancel.emit();\n  }\n  /**\n   * Handles clicks to the cancel action\n   */\n  handleCancelOrConfirm() {\n    if (this.shouldConfirmCancel) {\n      this.confirmCancel = true;\n    }\n    else {\n      this.handleCancel();\n    }\n    this.arcgisHubDiscussionsGeometryClearAll.emit();\n  }\n  /**\n   * Called when the cancel confirmation back button is clicked\n   */\n  handleConfirmBackButtonClicked() {\n    this.confirmCancel = false;\n  }\n  /**\n   * Handles calcite-input text changes\n   * @param evt An on change event\n   */\n  handleInputChange(evt) {\n    evt.preventDefault();\n    this.inputValue = evt.target.value;\n  }\n  /**\n   * Modify state when add location popover is opened\n   */\n  handleCalcitePopoverOpen() {\n    this.addLocationsPopoverOpen = true;\n  }\n  /**\n   * Modify state when add location popover is closed\n   */\n  handleCalcitePopoverClose() {\n    this.addLocationsPopoverOpen = false;\n  }\n  handleFeatureRemove(evt) {\n    var _a;\n    const { detail: { properties: { relatedFeatureId, index, unsaved } } } = evt;\n    if (!unsaved) {\n      if (relatedFeatureId) {\n        // remove relatedFeature from discsussion URI\n        const { features } = parseDiscussionURI(this.discussionValue);\n        const layerId = this.discussionDetails.reference.url.split('/').pop();\n        features.splice(features.indexOf(relatedFeatureId), 1);\n        this.discussionValue = augmentDiscussionURIWithFeature(this.discussionValue.split('?')[0], layerId, features);\n      }\n      else {\n        // remove feature from discussion geometry\n        if (((_a = this.geometryValue) === null || _a === void 0 ? void 0 : _a.type) === 'GeometryCollection') {\n          if (unsaved) {\n            this.geometryValue.geometries.splice(index, 1);\n          }\n          else {\n            this.geometryValue.geometries[index] = null;\n          }\n          this.geometryValue = Object.assign({}, this.geometryValue);\n        }\n        else {\n          this.geometryValue = null;\n        }\n      }\n    }\n  }\n  enableAddLocation() {\n    const { replyDetails, arcgisHubDiscussionsGeometryDrawCreate } = this;\n    const id = replyDetails && replyDetails.postId;\n    arcgisHubDiscussionsGeometryDrawCreate.emit(id);\n  }\n  resetActiveGeometryDrawType() {\n    this.addLocationsActiveGeometryType = undefined;\n  }\n  setActiveGeometryDrawType(evt) {\n    const { target } = evt;\n    const geometryType = target.dataset.type;\n    this.addLocationsActiveGeometryType = geometryType;\n    this.locationPopoverElement.open = false;\n    this.enableAddLocation();\n  }\n  /**\n   * Returns true if post has new location changes or updates\n   */\n  get hasLocationChanges() {\n    if (this.replyDetails) {\n      const { replyDetails: { post: { discussion } }, discussionValue } = this;\n      return Boolean(this._unsavedFeatures.length + this._unsavedRelatedFeatures.length + this._unsavedExistingFeatures.length) || (discussionValue !== discussion || this.geometryValueHasChanges);\n    }\n    return false;\n  }\n  /**\n   * Handles assignment of the calcite-input element reference\n   * @param input An HTMLCalciteInputElement reference\n   */\n  handleInputRef(input) {\n    this.input = input;\n  }\n  /**\n   * Renders the user details for the currently authenticated user\n   */\n  renderUserDetails() {\n    const { context } = this;\n    let avatar = (h(\"calcite-icon\", { icon: \"user\", scale: \"l\" }));\n    let fullName = this.intl.t('anonymous');\n    if (context.currentUser) {\n      fullName = context.currentUser.fullName;\n      const { username, id } = context.currentUser;\n      avatar = (h(\"calcite-avatar\", { \"full-name\": fullName, scale: \"m\", slot: \"header-actions-start\", thumbnail: getUserThumbnailUrl(context.session.portal, context.currentUser, context.session.token), \"user-id\": id, username: username }));\n    }\n    return (h(\"address\", { class: \"hub-discussions-reply-editor-user-details\" }, avatar, h(\"b\", { class: \"hub-discussions-reply-editor-user-details__name\" }, fullName)));\n  }\n  renderAddLocationsButton() {\n    const { hasMap, blockedNotice, addLocationsActiveGeometryType, intl, addLocationsPopoverOpen, handleCalcitePopoverOpen, handleCalcitePopoverClose } = this;\n    const locationActionTypes = [\n      { type: 'select', icon: 'select' },\n      { type: 'point', icon: 'pin' },\n      { type: 'polyline', icon: 'freehand' },\n      { type: 'polygon', icon: 'freehand-area' }\n    ];\n    const locationActions = locationActionTypes.map(({ type, icon }) => {\n      return (h(\"calcite-action\", { active: addLocationsActiveGeometryType === type, \"data-type\": type, icon: icon, key: type, onClick: this.setActiveGeometryDrawType, text: intl.t(`location.action.${type}`), textEnabled: true }));\n    });\n    return (h(Fragment, null, h(\"calcite-popover\", { autoClose: true, disablePointer: true, label: intl.t('location.heading'), onCalcitePopoverClose: handleCalcitePopoverClose, onCalcitePopoverOpen: handleCalcitePopoverOpen, ref: (locationPopoverElement) => { this.locationPopoverElement = locationPopoverElement; }, referenceElement: this.locationActionElement }, locationActions), h(\"calcite-tooltip\", { closeOnClick: true, label: intl.t('location.tooltip'), referenceElement: this.locationActionElement }, h(\"span\", null, intl.t('location.tooltip'))), h(\"calcite-action\", { active: addLocationsPopoverOpen, appearance: 'solid', class: \"add-location-post\", disabled: !hasMap || Boolean(blockedNotice), ref: (locationActionElement) => { this.locationActionElement = locationActionElement; }, text: intl.t('location.heading') }, h(\"calcite-icon\", { class: \"add-location-icon\", icon: \"pin-plus\", scale: \"s\" }))));\n  }\n  /**\n   * Renders the primary action button for the create/edit forms\n   */\n  renderPrimaryActionButton() {\n    const { replyDetails, intl, inputValue, pending, isInputValid, hasLocationChanges, blockedNotice } = this;\n    let text;\n    let disabled;\n    if (replyDetails) {\n      text = intl.t('saveReply');\n      disabled = Boolean(blockedNotice) || !isInputValid || inputValue === replyDetails.post.body && !hasLocationChanges;\n    }\n    else {\n      text = intl.t('createReply');\n      disabled = Boolean(blockedNotice) || !isInputValid;\n    }\n    return (h(\"calcite-button\", { class: \"hub-discussions-reply-editor__button\", disabled: disabled, label: text, loading: pending, round: true, scale: \"l\", type: \"submit\", width: \"auto\" }, text));\n  }\n  /**\n   * Renders the secondary action button for the create/edit forms\n   */\n  renderSecondaryActionButton() {\n    const { replyDetails, intl } = this;\n    if (replyDetails) {\n      const text = intl.t('cancel');\n      return (h(\"calcite-button\", { appearance: \"clear\", class: \"hub-discussions-reply-editor__button\", color: \"neutral\", disabled: false, label: text, onClick: this.handleCancelOrConfirm, round: true, scale: \"l\", type: \"reset\", width: \"auto\" }, text));\n    }\n  }\n  /**\n   * Renders the calcite-input element\n   */\n  renderInput() {\n    const { inputValue, inputMessage, pending, intl, postDetails: { creatorDetails: { user: creator } }, context, mentionConfig, blockedNotice } = this;\n    let placeholder = intl.t('replyToPost');\n    // verify private profile\n    if (creator) {\n      placeholder = intl.t('replyToUserPost', { firstName: creator.firstName });\n    }\n    return (h(Fragment, null, h(\"arcgis-hub-rich-text\", { class: \"hub-discussions-reply-editor__body\", context: context, disabled: Boolean(blockedNotice) || pending, label: intl.t('inputLabel'), mention: mentionConfig, placeholder: placeholder, \"text-transform\": true, toolbar: \"\", value: inputValue }), inputMessage && (h(\"calcite-input-message\", { active: true, class: \"hub-discussions-reply-editor__message\", icon: inputMessage.icon, scale: \"l\", status: inputMessage.status }, inputMessage.text))));\n  }\n  /**\n   * Renders the editor form controls\n   */\n  renderEditor() {\n    var _a;\n    const { intl, errorMessage, channelDetails, context, hasMap, replyDetailsWithLocationEdits, _unsavedFeatures, _unsavedRelatedFeatures, _unsavedExistingFeatures, discussionDetails, postDetails, blockedNotice, isMobile } = this;\n    return (h(Fragment, null, this.renderInput(), h(\"arcgis-hub-discussions-post-geography\", { channelDetails: channelDetails, context: context, disabled: Boolean(blockedNotice), discussionDetails: discussionDetails, hasMap: hasMap, isMobile: isMobile, parentDetails: postDetails, postDetails: replyDetailsWithLocationEdits, renderedInEditor: true, unsavedExistingFeatures: _unsavedExistingFeatures, unsavedFeatures: _unsavedFeatures, unsavedRelatedFeatures: _unsavedRelatedFeatures, url: (_a = discussionDetails === null || discussionDetails === void 0 ? void 0 : discussionDetails.reference) === null || _a === void 0 ? void 0 : _a.url }), h(\"div\", { class: \"hub-discussions-reply-editor__button-group\" }, this.renderAddLocationsButton(), this.renderSecondaryActionButton(), this.renderPrimaryActionButton()), blockedNotice && (h(\"arcgis-hub-discussions-blocked-notice\", { class: \"hub-discussions-reply-editor__not-discussable-notice\", scale: \"s\", slot: \"list-before\", variant: blockedNotice })), errorMessage && (h(\"calcite-notice\", { active: true, class: \"hub-discussions-reply-editor__notice\", color: \"red\", scale: \"s\" }, h(\"div\", { slot: \"title\" }, intl.t('error')), h(\"div\", { slot: \"message\" }, intl.t(errorMessage))))));\n  }\n  /**\n   * Renders the UI for cancel confirmation\n   */\n  renderConfirmCancel() {\n    const { intl } = this;\n    return (h(Fragment, null, h(\"div\", { class: \"hub-discussions-reply-editor-confirmation\" }, h(\"header\", { class: \"hub-discussions-reply-editor-confirmation__header\" }, intl.t('confirmHeader')), h(\"p\", { class: \"hub-discussions-reply-editor-confirmation__text\" }, intl.t('confirm'))), h(\"footer\", { class: \"hub-discussions-reply-editor-footer\" }, h(\"calcite-button\", { appearance: \"clear\", class: \"hub-discussions-reply-editor-footer__button\", color: \"neutral\", onClick: this.handleConfirmBackButtonClicked, round: true, scale: \"l\" }, intl.t('back')), h(\"calcite-button\", { class: \"hub-discussions-reply-editor-footer__button\", color: \"red\", onClick: this.handleCancel, round: true, scale: \"l\" }, intl.t('discard')))));\n  }\n  /**\n   * Main render entrypoint\n   */\n  render() {\n    const { replyDetails, confirmCancel } = this;\n    return (h(Host, { class: \"hub-discussions-reply-editor\", \"data-editing\": Boolean(replyDetails) }, h(\"form\", { class: \"hub-discussions-reply-editor__form\", onSubmit: this.handleReplySubmit }, this.renderUserDetails(), confirmCancel\n      ? this.renderConfirmCancel()\n      : this.renderEditor())));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"geometryValue\": [\"handleGeometryValueUpdated\"],\n    \"unsavedFeatures\": [\"handleFeatureChange\"],\n    \"unsavedRelatedFeatures\": [\"handleRelatedFeatureChange\"],\n    \"unsavedExistingFeatures\": [\"handleExistingFeatureChange\"],\n    \"addLocationsActiveGeometryType\": [\"handleAddLocationsActiveGeometryTypeChanged\"]\n  }; }\n};\n__decorate([\n  CallWhenFactory({ when() { return !this.isMobile; } })\n], ArcgisHubDiscussionsReplyEditor.prototype, \"renderAddLocationsButton\", null);\nArcgisHubDiscussionsReplyEditor.style = arcgisHubDiscussionsReplyEditorCss;\n\nconst arcgisLoadMoreButtonCss = \":host{display:block}\";\n\nconst ArcgisLoadMoreButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisLoadMoreChange = createEvent(this, \"arcgisLoadMoreChange\", 7);\n    /**\n     * The calcite-button color\n     *\n     * @type {ButtonColor}\n     * @memberof ArcgisLoadMoreButton\n     */\n    this.color = \"neutral\";\n    /**\n     * The calcite-button appearance\n     *\n     * @type {ButtonAppearance}\n     * @memberof ArcgisLoadMoreButton\n     */\n    this.appearance = \"clear\";\n    /**\n     * The calcite-button scale\n     *\n     * @type {Scale}\n     * @memberof ArcgisLoadMoreButton\n     */\n    this.scale = \"l\";\n    /**\n     * The calcite-button width\n     *\n     * @type {Width}\n     * @memberof ArcgisLoadMoreButton\n     */\n    this.width = \"full\";\n    /**\n     * The calcite-button applied round style\n     *\n     * @type {boolean}\n     * @memberof ArcgisLoadMoreButton\n     */\n    this.round = true;\n    /**\n     *\n     * @type {boolean}\n     * @memberof ArcgisLoadMoreButton\n     */\n    this.loading = false;\n    bind(this, 'handleLoadMore');\n  }\n  get hasMoreResults() {\n    const { nextStart } = this;\n    return nextStart !== -1;\n  }\n  get disabled() {\n    const { loading, hasMoreResults } = this;\n    return loading || !hasMoreResults;\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.el);\n  }\n  handleLoadMore() {\n    const { nextStart } = this;\n    this.arcgisLoadMoreChange.emit(nextStart);\n  }\n  render() {\n    const { loading, handleLoadMore, round, scale, width, intl, hasMoreResults, disabled, color, appearance } = this;\n    const text = intl.t('loadMore');\n    return (h(Host, null, hasMoreResults &&\n      h(\"calcite-button\", { appearance: appearance, color: color, disabled: disabled, label: text, loading: loading, onClick: handleLoadMore, round: round, scale: scale, width: width }, text)));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get el() { return getElement(this); }\n};\nArcgisLoadMoreButton.style = arcgisLoadMoreButtonCss;\n\nexport { ArcgisHubDiscussionsPost as arcgis_hub_discussions_post, ArcgisHubDiscussionsPostEditor as arcgis_hub_discussions_post_editor, ArcgisHubDiscussionsPostHeader as arcgis_hub_discussions_post_header, ArcgisHubDiscussionsReply as arcgis_hub_discussions_reply, ArcgisHubDiscussionsReplyEditor as arcgis_hub_discussions_reply_editor, ArcgisLoadMoreButton as arcgis_load_more_button };\n","/**\n * A decorator factory function for the callOnce decorator\n *\n * @returns The callOnce decorator function\n */\nfunction callOnceFactory() {\n  /**\n   * A decorator function that augments a class method with functionality that ensures it is only ever called once.\n   *\n   * @param target A reference to the class prototype\n   * @param propertyKey The name of the method being decorated\n   * @param descriptor A PropertyDescriptor for the method being decorated\n   * @returns A new PropertyDescriptor that aguments the decorated method with functionality that ensures it is only ever called once.\n   */\n  function callOnce(target, propertyKey, descriptor) {\n    // reference to the decorated function\n    const { value: original } = descriptor;\n    // companion prop to track if the decorated function has been called\n    const companionCalledKey = `_${propertyKey}Called`;\n    Object.defineProperty(target, companionCalledKey, {\n      writable: true,\n      value: false\n    });\n    // companion prop to cache the return value of the decorated function\n    const companionCacheKey = `_${propertyKey}Cache`;\n    Object.defineProperty(target, companionCacheKey, {\n      writable: true\n    });\n    // decorator method, calls decorated method only once, subsequent\n    // calls to decorator method return cached\n    const value = function callOnce(...args) {\n      if (!this[companionCalledKey]) {\n        this[companionCalledKey] = true;\n        this[companionCacheKey] = original.apply(this, args);\n      }\n      return this[companionCacheKey];\n    };\n    return Object.assign(Object.assign({}, descriptor), { value });\n  }\n  return callOnce;\n}\n\nexport { callOnceFactory as c };\n","/**\n * A method decorator factory function for the callWhen decorator\n * @param params An ICallWhenDecoratorParams object\n * @returns The callWhen method decorator function\n */\nfunction CallWhenFactory(params) {\n  /**\n   * A decorator function that conditionally call a method if when function returns truthy\n   *\n   * @param _target A reference to the class prototype\n   * @param _propertyKey The name of the method being decorated\n   * @param descriptor A PropertyDescriptor for the method being decorated\n   * @returns A new PropertyDescriptor that aguments the decorated method with conditional call behavior\n   */\n  function callWhen(_target, _propertyKey, descriptor) {\n    const { value: original } = descriptor;\n    const { when } = params;\n    const value = function callWhen(...args) {\n      const isTruthy = when.apply(this, args);\n      if (isTruthy) {\n        // when() condition passed, so call method\n        return original.apply(this, args);\n      }\n    };\n    return Object.assign(Object.assign({}, descriptor), { value });\n  }\n  return callWhen;\n}\n\nexport { CallWhenFactory as C };\n","var TIME_INTERVAL;\n(function (TIME_INTERVAL) {\n  TIME_INTERVAL[TIME_INTERVAL[\"SECOND\"] = 1000] = \"SECOND\";\n  TIME_INTERVAL[TIME_INTERVAL[\"MINUTE\"] = 60000] = \"MINUTE\";\n  TIME_INTERVAL[TIME_INTERVAL[\"HOUR\"] = 3600000] = \"HOUR\";\n  TIME_INTERVAL[TIME_INTERVAL[\"DAY\"] = 86400000] = \"DAY\";\n  TIME_INTERVAL[TIME_INTERVAL[\"WEEK\"] = 604800000] = \"WEEK\";\n  TIME_INTERVAL[TIME_INTERVAL[\"MONTH\"] = 2629800000] = \"MONTH\";\n  TIME_INTERVAL[TIME_INTERVAL[\"YEAR\"] = 31536000000] = \"YEAR\";\n})(TIME_INTERVAL || (TIME_INTERVAL = {}));\nvar TIME_UNIT;\n(function (TIME_UNIT) {\n  TIME_UNIT[\"SECOND\"] = \"second\";\n  TIME_UNIT[\"MINUTE\"] = \"minute\";\n  TIME_UNIT[\"HOUR\"] = \"hour\";\n  TIME_UNIT[\"DAY\"] = \"day\";\n  TIME_UNIT[\"WEEK\"] = \"week\";\n  TIME_UNIT[\"MONTH\"] = \"month\";\n  TIME_UNIT[\"QUARTER\"] = \"quarter\";\n  TIME_UNIT[\"YEAR\"] = \"year\";\n})(TIME_UNIT || (TIME_UNIT = {}));\n\nexport { TIME_UNIT as T, TIME_INTERVAL as a };\n","/**\n * A decorator factory function that accepts the minPromiseDelay decorator\n * configuration params\n * @param options An IMinPromiseDelayOptions object\n * @returns minPromiseDelay decorator\n */\nfunction minPromiseDelayFactory(options) {\n  const { delay } = options;\n  if (!Number.isInteger(delay) || delay < 0) {\n    throw new Error('delay must be a positive integer');\n  }\n  /**\n   * A decorator function that augments a class method with an artificially imposed wait/delay so\n   * that the promise is guaranteed to resolve/reject after a minimum amount of time has ellapsed.\n   */\n  return (_target, _name, descriptor) => {\n    const { value: original } = descriptor;\n    const value = async function minPromiseDelay(...args) {\n      const delayPromise = new Promise(resolve => setTimeout(resolve, delay));\n      const resultPromise = original.apply(this, args);\n      return delayPromise.then(() => resultPromise);\n    };\n    return Object.assign(Object.assign({}, descriptor), { value });\n  };\n}\n\nexport { minPromiseDelayFactory as m };\n","var ArcgisHubDiscussionsBlockedNoticeVariant;\n(function (ArcgisHubDiscussionsBlockedNoticeVariant) {\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"Item\"] = \"item\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"EditPost\"] = \"edit.post\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"EditPostGroup\"] = \"edit.post.group\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"EditPostItem\"] = \"edit.post.item\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"EditReply\"] = \"reply.post\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"EditReplyGroup\"] = \"edit.reply.group\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"EditReplyItem\"] = \"edit.reply.item\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"Group\"] = \"group\";\n  ArcgisHubDiscussionsBlockedNoticeVariant[\"Reply\"] = \"reply\";\n})(ArcgisHubDiscussionsBlockedNoticeVariant || (ArcgisHubDiscussionsBlockedNoticeVariant = {}));\nconst ArcgisHubDiscussionsBlockedNoticeConfigs = {\n  [ArcgisHubDiscussionsBlockedNoticeVariant.Item]: {\n    title: 'item.title',\n    message: 'item.message',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.EditPost]: {\n    title: 'post.title',\n    message: 'post.message',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.EditPostGroup]: {\n    title: 'post.title',\n    message: 'post.message.group',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.EditPostItem]: {\n    title: 'post.title',\n    message: 'post.message.item',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.EditReply]: {\n    title: 'reply.title',\n    message: 'reply.message',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.EditReplyGroup]: {\n    title: 'reply.title',\n    message: 'reply.message.group',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.EditReplyItem]: {\n    title: 'reply.title',\n    message: 'reply.message.item',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.Group]: {\n    title: 'group.title',\n    message: 'group.message',\n  },\n  [ArcgisHubDiscussionsBlockedNoticeVariant.Reply]: {\n    title: 'reply.title.generic',\n    message: 'reply.message.generic',\n  },\n};\n\nexport { ArcgisHubDiscussionsBlockedNoticeVariant as A, ArcgisHubDiscussionsBlockedNoticeConfigs as a };\n","import { c as cloneObject } from './util-3c40fe6c.js';\nimport { U as UserSession } from './UserSession-d3a97494.js';\n\n/* Copyright (c) 2018-2021 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Well known APIs\n * Short-forms for specifying common APIs\n * We will likely deprecate this\n */\nconst SEARCH_APIS = {\n    arcgis: {\n        label: \"ArcGIS Online\",\n        url: \"https://www.arcgis.com\",\n        type: \"arcgis\",\n    },\n    arcgisQA: {\n        label: \"ArcGIS Online QAEXT\",\n        url: \"https://qaext.arcgis.com\",\n        type: \"arcgis\",\n    },\n    arcgisDEV: {\n        label: \"ArcGIS Online DEVEXT\",\n        url: \"https://devext.arcgis.com\",\n        type: \"arcgis\",\n    },\n    hub: {\n        label: \"ArcGIS Hub\",\n        url: \"https://hub.arcgis.com/api\",\n        type: \"arcgis-hub\",\n    },\n    hubDEV: {\n        label: \"ArcGIS Hub DEV\",\n        url: \"https://hubdev.arcgis.com/api\",\n        type: \"arcgis-hub\",\n    },\n    hubQA: {\n        label: \"ArcGIS Hub QA\",\n        url: \"https://hubqa.arcgis.com/api\",\n        type: \"arcgis-hub\",\n    },\n};\n/**\n * @private\n * Convert an api \"name\" into a full ApiDefinition\n * @param api\n * @returns\n */\nfunction expandApi(api) {\n    if (typeof api === \"string\" && api in SEARCH_APIS) {\n        return SEARCH_APIS[api];\n    }\n    else {\n        // it's an object, so we trust that it's well formed\n        return api;\n    }\n}\n/**\n * @private\n * Convert a field value into a MatchOptions if it's not already one\n * @param value\n * @returns\n */\nfunction valueToMatchOptions(value) {\n    let result = {};\n    if (Array.isArray(value)) {\n        result = {\n            any: value,\n        };\n    }\n    else {\n        if (typeof value === \"string\") {\n            result = {\n                any: [value],\n            };\n        }\n        if (typeof value === \"object\") {\n            result = value;\n        }\n    }\n    return result;\n}\n/**\n * @private\n * Convert a RelativeDate to a DateRange<number>\n * @param relative\n * @returns\n */\nfunction relativeDateToDateRange(relative) {\n    // hash of offsets\n    const offsetMs = {\n        min: 1000 * 60,\n        hours: 1000 * 60 * 60,\n        days: 1000 * 60 * 60 * 24,\n        weeks: 1000 * 60 * 60 * 24 * 7,\n    };\n    const now = new Date();\n    // default\n    const result = {\n        type: \"date-range\",\n        from: now.getTime(),\n        to: now.getTime(),\n    };\n    //\n    switch (relative.unit) {\n        case \"hours\":\n        case \"days\":\n        case \"weeks\":\n            result.from = result.to - offsetMs[relative.unit] * relative.num;\n            break;\n        case \"months\":\n            // get the current month and subtract num\n            // NOTE: when the previous month has fewer days than this month\n            // setMonth() will return a date w/in the current month\n            // example: 3/30 -> 3/2 b/c there is no 2/28\n            now.setMonth(now.getMonth() - relative.num);\n            result.from = now.getTime();\n            break;\n        case \"years\":\n            now.setFullYear(now.getFullYear() - relative.num);\n            result.from = now.getTime();\n            break;\n    }\n    return result;\n}\n/**\n * Create a `.next()` function for a type\n * @param request\n * @param nextStart\n * @param total\n * @param fn\n * @returns\n */\nfunction getNextFunction(request, nextStart, total, fn) {\n    const clonedRequest = cloneObject(request);\n    // clone will not handle authentication so we do it manually\n    if (request.authentication) {\n        clonedRequest.authentication = UserSession.deserialize(request.authentication.serialize());\n    }\n    // figure out the start\n    clonedRequest.start = nextStart > -1 ? nextStart : total + 1;\n    return (authentication) => {\n        if (authentication) {\n            clonedRequest.authentication = authentication;\n        }\n        return fn(clonedRequest);\n    };\n}\n/**\n * Construct a the full url to a group thumbnail\n *\n * - If the group has a thumbnail, construct the full url\n * - If the group is not public, append on the token (if passed in)\n * @param portalUrl\n * @param group\n * @param token\n * @returns\n */\nfunction getGroupThumbnailUrl(portalUrl, group, token) {\n    let thumbnailUrl = null;\n    if (group.thumbnail) {\n        thumbnailUrl = `${portalUrl}/community/groups/${group.id}/info/${group.thumbnail}`;\n        if (token && group.access !== \"public\") {\n            thumbnailUrl = `${thumbnailUrl}?token=${token}`;\n        }\n    }\n    return thumbnailUrl;\n}\n/**\n * Construct a the full url to a user thumbnail\n *\n * - If the user has a thumbnail, construct the full url\n * - If the user is not public, append on the token\n * @param portalUrl\n * @param user\n * @param token\n * @returns\n */\nfunction getUserThumbnailUrl(portalUrl, user, token) {\n    let thumbnailUrl = null;\n    if (user.thumbnail) {\n        thumbnailUrl = `${portalUrl}/community/users/${user.username}/info/${user.thumbnail}`;\n        if (token && user.access !== \"public\") {\n            thumbnailUrl = `${thumbnailUrl}?token=${token}`;\n        }\n    }\n    return thumbnailUrl;\n}\n\nexport { getUserThumbnailUrl as a, getNextFunction as b, expandApi as e, getGroupThumbnailUrl as g, relativeDateToDateRange as r, valueToMatchOptions as v };\n"],"names":["CacheDecoratorFactory","params","_target","_propertyKey","descriptor","value","cache","Object","assign","AutoLinkDecoratorFactory","options","original","args","result","apply","this","autoLink","SanitizeDecoratorFactory","sanitizer","Sanitizer","filterOptions","extendDefaults","sanitize","MENTION_ELEMENTS_PATTERN","RegExp","getMentionedUser","match","mentionedUsers","username","parseMentionedUsers","find","userDetails","user","mentionPopoverTransform","input","postDetails","channel","session","originalPostId","transform","_a","matches","startIdx","indexOf","endIdx","length","before","substring","toReplace","mentionedUser","replaced","replace","access","id","creatorDetails","post","creator","fullName","organization","name","portal","region","thumbnail","token","MentionPopoverTransformDecoratorFactory","replyDetails","channelDetails","context","postId","PostView","__decorate$3","decorators","target","key","desc","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","STEP","ArcgisHubDiscussionsPost","hostRef","registerInstance","arcgisHubDiscussionsPostDelete","createEvent","arcgisHubDiscussionsPostSelect","arcgisHubDiscussionsGeometryDrawReset","arcgisHubDiscussionsGeometryDeselect","arcgisHubDiscussionsPostUpdate","arcgisHubDiscusssionsChannelUpdate","arcgisHubDiscussionsScrollTo","hubTelemetry","unsavedExistingFeatures","loading","editing","errorMessage","bind","initialize","autoFocus","emit","addEnrichments","evt","stopPropagation","preventDefault","handleViewThread","open","menuPopoverElement","toggle","index","emitHubTelemetry","dist","position","telemetry","channelId","channelAccess","element","intlManager","intl","isPostEnriched","isChannelEnriched","enrichPostDetails","enrichChannelDetails","updateLoading","isEnriched","rawPostDetails","includeReplyCount","hubRequestOptions","_channelDetails","body","title","removePost","then","deletedDuringSession","response","catch","e","console","error","message","undefined","el","includes","nodeName","hasAttribute","details","href","requiredEnrichments","every","val","groups","Boolean","renderEditor","renderDeleted","renderPost","renderSkeleton","Skeleton","render","Content","Editor","Deleted","views","hasMap","isHub","unsavedFeatures","unsavedRelatedFeatures","discussionDetails","isMobile","h","preview","icon","direction","capturePostDeepLinkImpression","capturePostListImpression","innerHTML","computePostTitle","computePostBody","lines","onClick","handleLinkClicked","renderTextActions","expandable","url","reference","renderActionGroup","renderActionMenu","active","color","dismissible","scale","slot","t","layout","handleReply","text","textEnabled","handleViewReplies","actions","canModifyPost","currentUser","push","fn","handleEdit","canDeletePost","handleDelete","Fragment","class","ref","menuActionElement","autoClose","disablePointer","flipPlacements","label","offsetDistance","placement","referenceElement","map","toLowerCase","linkToThread","appearance","disabled","replyCount","toString","capturePostDeletedImpression","Host","view","getElement","scope","getKey","calcite","whiteList","prototype","callOnceFactory","style","__decorate$2","ArcgisHubDiscussionsPostEditor","arcgisHubDiscussionsPostCancel","arcgisHubDiscussionsPostCreate","arcgisHubDiscussionsPostEdit","arcgisHubDiscussionsGeometryDrawCreate","arcgisHubDiscussionsGeometryDrawTypeSelect","arcgisHubDiscussionsGeometryDrawEdit","arcgisHubDiscussionsGeometrySelect","arcgisHubDiscussionsGeometryClearAll","_unsavedFeatures","_unsavedRelatedFeatures","_unsavedExistingFeatures","pending","titleValue","bodyValue","discussionValue","selectedChannelDetails","searchUsers","query","searchOtherTeamMembers","geometryValue","_postDetails","cloneObject","geometry","discussion","geometryClone","keys","proceedToContentCreation","step","AUDIENCE","fetchRecentChannelDetails","results","items","recentChannelsDetails","_fetchRecentChannelDetails","groupId","groupAccess","groupOrgId","orgId","dataset","channelIndex","CONTENT","selectedItems","detail","Promise","all","fetchTeamFromCache","searchChannels","num","SharingAccess","group","geometryValueHasChanges","JSON","stringify","featureId","properties","resetActiveGeometryDrawType","relatedFeatureId","geometryType","promise","handleCreate","finally","addLocationsActiveGeometryType","titleElement","uri","layerId","split","pop","objectIds","Set","feature","objectId","augmentDiscussionURIWithFeature","Array","from","featuresToGeometryCollection","createPost","trim","mentionUrl","window","location","fetchChannel","_b","focus","_c","originalPostFeatures","postToFeatures","forEach","combinedFeatures","coordinates","updatePost","editedPost","_d","_e","_f","shouldConfirmCancel","confirmCancel","handleCancel","addLocationsPopoverOpen","unsaved","features","parseDiscussionURI","splice","type","geometries","locationPopoverElement","enableAddLocation","MAX_TITLE_LENGTH","MAX_BODY_LENGTH","isTitleValid","status","characters","isBodyValid","WARNING_BODY_LENGTH","variant","isGroupDiscussable","isDiscussable","isSubjectDiscussable","ArcgisHubDiscussionsBlockedNoticeVariant","hasLocationChanges","blockedNotice","isInvalid","round","handleCancelOrConfirm","handleLocationPopoverOpen","handleLocationPopoverClose","locationActions","setActiveGeometryDrawType","onCalcitePopoverClose","onCalcitePopoverOpen","locationActionElement","closeOnClick","updateTitleValue","titleMessage","autofocus","onInput","placeholder","bodyMessage","mentionConfig","mention","toolbar","postDetailsWithLocationEdits","renderConfirmCancel","onSubmit","handleSubmit","renderTitleField","renderBodyField","renderedInEditor","renderAddLocationsButton","renderSecondaryActionButton","renderPrimaryActionButton","handleBack","handleHelpPopoverOpen","handleHelpPopoverClose","config","action","handleConfirmBackButtonClicked","handleChannelSelectedFromCombobox","canDiscuss","textLabel","width","renderRecentChannels","handleSelectRecentChannel","latestUserPost","delta","Date","now","createdAt","valueOf","days","Math","floor","TIME_INTERVAL","timeStr","formatRelativeTime","TIME_UNIT","getGroupThumbnailUrl","rows","showFooter","showHeading","showThumbnail","iconEnd","rendered","_","renderRecentChannelsError","renderRecentChannelDetails","renderRecentChannelSkeleton","renderRecentChannelsEmpty","renderHeader","renderGroupSelectionStep","renderContentStep","renderCreate","minPromiseDelayFactory","delay","CallWhenFactory","when","ArcgisHubDiscussionsPostHeader","accessIcon","avatars","renderCreatorAvatar","renderChannelAvatar","renderPopover","getUserThumbnailUrl","creatorFullName","renderAvatars","metadata","timestamp","dateTime","formatStyle","renderAccessIcon","ReplyView","ANIMATION_CLASSES","__decorate$1","ArcgisHubDiscussionsReply","arcgisHubDiscussionsReplyDelete","arcgisHubDiscussionsViewAllReplies","arcgisHubDiscussionsReplyUpdate","arcgisHubDiscussionsReplySelect","minHeight","replyClass","editorClass","HIDDEN","renderedEl","addAnimationEventListeners","removeAnimationEventListeners","prevRenderedEl","isReplyEnriched","replyId","enrichReplyDetails","rawReplyDetails","addEventListener","handleAnimationEnd","removeEventListener","requiredValues","reply","lead","styles","zIndex","transitionToReply","animationName","IN","transitionEditorView","showEditor","offsetHeight","OUT","parentId","renderReply","renderReplyOutOfContext","OutOfContext","outOfContext","classes","handleSetComponentRef","originalPostDetails","pin","onMouseOver","captureReplyDeepLinkImpression","captureReplyListImpression","computeReplyBody","renderActions","parentDetails","toggleable","handleViewAllReplies","captureReplyDeletedImpression","__decorate","ArcgisHubDiscussionsReplyEditor","arcgisHubDiscussionsReplyCreate","arcgisHubDiscussionsReplyEdit","arcgisHubDiscussionsReplyCancel","inputValue","focusInput","autoScroll","isInputValid","_replyDetails","setFocus","setTimeout","createReply","updatedReply","avatar","handleCalcitePopoverOpen","handleCalcitePopoverClose","inputMessage","firstName","replyDetailsWithLocationEdits","renderInput","handleReplySubmit","renderUserDetails","ArcgisLoadMoreButton","arcgisLoadMoreChange","nextStart","hasMoreResults","handleLoadMore","propertyKey","companionCalledKey","writable","companionCacheKey","isTruthy","Number","isInteger","Error","_name","delayPromise","resolve","resultPromise","ArcgisHubDiscussionsBlockedNoticeConfigs","Item","EditPost","EditPostGroup","EditPostItem","EditReply","EditReplyGroup","EditReplyItem","Group","Reply","SEARCH_APIS","arcgis","arcgisQA","arcgisDEV","hub","hubDEV","hubQA","expandApi","api","valueToMatchOptions","isArray","any","relativeDateToDateRange","relative","getTime","to","unit","min","hours","weeks","setMonth","getMonth","setFullYear","getFullYear","getNextFunction","request","total","clonedRequest","authentication","UserSession","serialize","start","portalUrl","thumbnailUrl"],"sourceRoot":""}