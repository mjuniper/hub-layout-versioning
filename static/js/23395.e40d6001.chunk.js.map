{"version":3,"file":"static/js/23395.e40d6001.chunk.js","mappings":"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","sources":["../.yalc/@esri/hub-components/dist/esm/arcgis-hub-discussions-options-modal.entry.js","../node_modules/@babel/runtime/helpers/esm/toArray.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { d as dist } from './index-bcc98773.js';\nimport { l as isDiscussable, u as updateDiscussable, D as DiscussionType } from './discussions-0e185b12.js';\nimport './index-4e91769f.js';\nimport './_commonjsHelpers-11ca3be1.js';\nimport './getPortalBaseFromOrgUrl-6a5781aa.js';\nimport './tslib.es6-3669ad41.js';\nimport './get-portal-url-423a76f5.js';\nimport './clean-url-be7c0879.js';\nimport './request-c15cc2af.js';\nimport './get-859a2960.js';\nimport './append-custom-params-fd9b7e72.js';\nimport './get-portal-06f7947b.js';\nimport './query-15c2c6ed.js';\nimport './tslib.es6-b2e8cdb8.js';\nimport './fetch-eff7ab83.js';\nimport './tslib.es6-e75776ba.js';\nimport './_enrichments-9747f1f3.js';\nimport './util-2150bd9e.js';\nimport './get-prop-d82e4fa6.js';\nimport './get-with-default-6db049d8.js';\nimport './_internal-f8d6239a.js';\nimport './get-portal-api-url-2391fbac.js';\nimport './extent-0f42acfc.js';\nimport './helpers-a80c0291.js';\nimport './OperationError-85fd80c7.js';\nimport './get-f2cd18e7.js';\nimport './getService-49b539e3.js';\nimport './slugs-150ad0db.js';\nimport './is-guid-8127621d.js';\nimport './request-be948455.js';\nimport './api-3826163b.js';\nimport './compose-cc2f466a.js';\nimport './get-structured-license-d1e63636.js';\nimport './get-item-thumbnail-url-7608a737.js';\nimport './update-fec93fc5.js';\n\nconst arcgisHubDiscussionsOptionsModalCss = \".sc-arcgis-hub-discussions-options-modal-h{display:block}calcite-notice.sc-arcgis-hub-discussions-options-modal{margin-top:0.5rem}p.sc-arcgis-hub-discussions-options-modal{margin:0px}\";\n\nconst ArcgisHubDiscussionsOptionsModal = class {\n  /**\n   * Constructor function\n   */\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.hubTelemetry = createEvent(this, \"hubTelemetry\", 7);\n    this.arcgisHubDiscussionsOptionsModalClosed = createEvent(this, \"arcgisHubDiscussionsOptionsModalClosed\", 7);\n    this.arcgisHubDiscussionsOptionsModalUpdated = createEvent(this, \"arcgisHubDiscussionsOptionsModalUpdated\", 7);\n    /**\n     * True when the subject does not contain cannotDiscuss typeKeyword\n     */\n    this.canDiscuss = false;\n    bind(this, 'handleCloseModal', 'handleModalClosed', 'handleSave', 'handleNoticeClosed', 'handleOptionsChanged');\n  }\n  /**\n   * Component will load lifecycle method\n   */\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n    this.updateCanDiscuss();\n  }\n  /**\n   * Updates canDiscuss state when subject or open changes. Results in the selected panel being\n   * reset to reflect the actual discussability of the subject when re-opening the modal.\n   * @param subject\n   */\n  updateCanDiscuss() {\n    this.canDiscuss = isDiscussable(this.subject);\n  }\n  /**\n   * Invoked when the modal is dismissed by either clicking close from header or cancel button\n   */\n  handleModalClosed() {\n    this.hubTelemetry.emit(dist.dictionary.category.interaction.action.close.label.modal.details.discussionOptions);\n    this.arcgisHubDiscussionsOptionsModalClosed.emit();\n  }\n  /**\n   * Handles changes to the selected tile\n   * @param evt A custom event whose details represent the updated checked state of the tiles\n   */\n  handleOptionsChanged(evt) {\n    this.canDiscuss = evt.detail;\n  }\n  /**\n   * Handles clicks to the cancel button, closes the modal\n   */\n  handleCloseModal() {\n    this.open = false;\n  }\n  /**\n   * True when the given subject is a group\n   */\n  get isGroup() {\n    return this.subject.isInvitationOnly !== undefined;\n  }\n  /**\n   * Handles clicks to the save button\n   */\n  async handleSave() {\n    const { subject, context, optionsElement, isGroup } = this;\n    const { value } = optionsElement;\n    const categoryKey = isGroup ? 'groups' : 'content';\n    const detailsKey = value ? 'allowDiscussions' : 'blockDiscussions';\n    const telemetry = dist.dictionary.category[categoryKey].action.update.label.settings.details[detailsKey];\n    this.saving = true;\n    this.error = null;\n    try {\n      const updatedSubject = await updateDiscussable(Object.assign({ subject, discussable: optionsElement.value }, context.requestOptions));\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, telemetry), { response: dist.constants.response.SUCCESS }));\n      this.subject = updatedSubject;\n      this.arcgisHubDiscussionsOptionsModalUpdated.emit(updatedSubject);\n    }\n    catch (error) {\n      this.error = error;\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, telemetry), { response: dist.constants.response.FAILURE }));\n    }\n    finally {\n      this.saving = false;\n    }\n  }\n  /**\n   * Resets error state\n   */\n  handleNoticeClosed() {\n    this.error = null;\n  }\n  render() {\n    const { intl, saving, open, error, isGroup, canDiscuss } = this;\n    return (h(Host, null, h(\"arcgis-wormhole\", null, h(\"calcite-modal\", { \"data-element\": \"discussions-options-modal\",\n      // disableCloseButton={saving}\n      // disableOutsideClose\n      onCalciteModalClose: this.handleModalClosed, open: open }, h(\"header\", { slot: \"header\" }, intl.t('header')), h(\"arcgis-hub-discussions-options\", { disabled: saving, layout: \"horizontal\", onArcgisHubDiscussionsOptionsChange: this.handleOptionsChanged, ref: (optionsElement) => { this.optionsElement = optionsElement; }, slot: \"content\", value: canDiscuss, variant: isGroup ? DiscussionType.GROUP : DiscussionType.CONTENT }), error && (h(\"calcite-notice\", {\n      // active\n      closable: true, color: \"red\", onCalciteNoticeClose: this.handleNoticeClosed, slot: \"content\"\n    }, h(\"header\", { slot: \"title\" }, this.intl.t('error.title')), h(\"p\", { slot: \"message\" }, this.intl.t('error.message')))), h(\"calcite-button\", { appearance: \"outline\", disabled: saving, onClick: this.handleCloseModal, slot: \"secondary\", type: \"button\" }, intl.t('secondary')), h(\"calcite-button\", { loading: saving, onClick: this.handleSave, slot: \"primary\", type: \"submit\" }, intl.t(saving ? 'pending' : 'primary'))))));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"open\": [\"updateCanDiscuss\"],\n    \"subject\": [\"updateCanDiscuss\"]\n  }; }\n};\nArcgisHubDiscussionsOptionsModal.style = arcgisHubDiscussionsOptionsModalCss;\n\nexport { ArcgisHubDiscussionsOptionsModal as arcgis_hub_discussions_options_modal };\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}"],"names":["ArcgisHubDiscussionsOptionsModal","hostRef","registerInstance","this","hubTelemetry","createEvent","arcgisHubDiscussionsOptionsModalClosed","arcgisHubDiscussionsOptionsModalUpdated","canDiscuss","bind","intlManager","element","intl","updateCanDiscuss","isDiscussable","subject","emit","dist","evt","detail","open","undefined","isInvitationOnly","context","optionsElement","isGroup","value","categoryKey","detailsKey","telemetry","action","update","label","settings","details","saving","error","updateDiscussable","Object","assign","discussable","requestOptions","updatedSubject","response","h","Host","onCalciteModalClose","handleModalClosed","slot","t","disabled","layout","onArcgisHubDiscussionsOptionsChange","handleOptionsChanged","ref","variant","DiscussionType","closable","color","onCalciteNoticeClose","handleNoticeClosed","appearance","onClick","handleCloseModal","type","loading","handleSave","getElement","style","_toArray","arr"],"sourceRoot":""}