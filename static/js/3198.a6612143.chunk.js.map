{"version":3,"file":"static/js/3198.a6612143.chunk.js","mappings":"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","sources":["../.yalc/@esri/hub-components/dist/esm/hub-download-notice.entry.js"],"sourcesContent":["import { r as registerInstance, h, g as getElement } from './index-0d95d9d4.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport './index-4e91769f.js';\n\nconst hubDownloadNoticeCss = \"div{font-size:var(--calcite-font-size--1);line-height:1rem}calcite-notice{margin-bottom:0.5rem}calcite-loader{margin-right:0.5rem}calcite-loader[active]{display:inline-block}\";\n\nconst HubDownloadNotice = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Flag indicating if the user has triggered an export\n     */\n    this.exportRequested = false;\n    /**\n     * Current user is unable to request exports\n     */\n    this.cannotExport = false;\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n    this.setLabels();\n    this.resetUndefinedProps();\n  }\n  resetUndefinedProps() {\n    // Storybook knobs will set some of these to \"undefined\"\n    ['fileStatus', 'exportRequested', 'apiError'].forEach(prop => {\n      this[prop] = this[prop] === 'undefined' ? undefined : this[prop];\n    });\n  }\n  async setLocalization() {\n    this.setLabels();\n  }\n  setLabels() {\n    this.labels = {\n      titleFileGeneration: this.intl.t('titleFileGeneration'),\n      titleDatasetNotFound: this.intl.t('titleDatasetNotFound'),\n      titleApiError: this.intl.t('titleApiError'),\n      titleFormatDisabled: this.intl.t('titleFormatDisabled'),\n      titleFileGenerationFailed: this.intl.t('titleFileGenerationFailed'),\n      messageCreatingFile: this.intl.t('messageCreatingFile'),\n      messageUpdatingFile: this.intl.t('messageUpdatingFile'),\n      messageFailedStaleAvailable: this.intl.t('messageFailedStaleAvailable'),\n      messageFileNeedsGenerating: this.intl.t('messageFileNeedsGenerating'),\n      messageFormatDisabled: this.intl.t('messageFormatDisabled'),\n    };\n  }\n  getNoticeTitle() {\n    if (this.fileStatus === 'disabled') {\n      return this.labels.titleFormatDisabled;\n    }\n    if (this.exportInProgress()) {\n      return this.labels.titleFileGeneration;\n    }\n    if (this.apiError === '404') {\n      return this.labels.titleDatasetNotFound;\n    }\n    if (this.apiError) {\n      return this.labels.titleApiError;\n    }\n    if (this.requestedExportHasFailed()) {\n      return this.labels.titleFileGenerationFailed;\n    }\n  }\n  getNoticeMessage() {\n    if (this.fileStatus === 'disabled') {\n      return this.labels.messageFormatDisabled;\n    }\n    if (this.fileStatus === 'creating') {\n      return this.labels.messageCreatingFile;\n    }\n    if (this.fileStatus === 'updating') {\n      return this.labels.messageUpdatingFile;\n    }\n    if (this.downloadCached() && this.requestedExportHasFailed()) {\n      return this.labels.messageFailedStaleAvailable;\n    }\n    if (this.fileStatus === 'ready_unknown') {\n      return this.labels.messageFileNeedsGenerating;\n    }\n    if (this.fileStatus === 'locked' || this.fileStatus === 'stale_locked') {\n      return this.labels.messageDataSourceLocked;\n    }\n    if (this.downloadCached()) {\n      return this.labels.messageFileNeedsGenerating;\n    }\n    return this.labels.messageFileNeedsGenerating;\n  }\n  shouldShowMessage() {\n    return !this.apiError && !this.exportFailed() && !this.requestedExportIsReady();\n  }\n  getNoticeColor() {\n    if (this.requestedExportHasFailed() || this.apiError) {\n      return 'red';\n    }\n    return 'yellow';\n  }\n  exportFailed() {\n    return this.fileStatus === 'error' || this.fileStatus === 'error_creating' || this.fileStatus === 'error_updating';\n  }\n  exportInProgress() {\n    return this.fileStatus === 'creating' || this.fileStatus === 'updating';\n  }\n  requestedExportIsReady() {\n    return this.exportRequested && this.downloadUpToDate();\n  }\n  requestedExportHasFailed() {\n    const { exportRequested, fileStatus } = this;\n    return exportRequested && (fileStatus === 'error' || fileStatus === 'error_updating' || fileStatus === 'error_creating');\n  }\n  downloadCached() {\n    return ['ready', 'ready_unknown', 'stale', 'updating', 'error_updating'].includes(this.fileStatus);\n  }\n  downloadUpToDate() {\n    return this.fileStatus === 'ready';\n  }\n  shouldHide() {\n    return this.downloadUpToDate()\n      || this.cannotExport // just hide the notice because the user can't do anything\n      || (this.exportFailed() && !this.exportRequested);\n  }\n  render() {\n    if (this.shouldHide()) {\n      return (h(\"calcite-notice\", null));\n    }\n    const message = this.shouldShowMessage() ? h(\"div\", { slot: \"message\" }, this.getNoticeMessage()) : null;\n    return (h(\"calcite-notice\", { color: this.getNoticeColor(), dir: \"ltr\", scale: \"m\", width: \"full\" }, h(\"div\", { slot: \"title\" }, h(\"calcite-loader\", { inline: true, label: this.getNoticeMessage() }), this.getNoticeTitle()), message));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n};\nHubDownloadNotice.style = hubDownloadNoticeCss;\n\nexport { HubDownloadNotice as hub_download_notice };\n"],"names":["HubDownloadNotice","hostRef","registerInstance","this","exportRequested","cannotExport","intlManager","element","intl","setLabels","resetUndefinedProps","forEach","prop","undefined","labels","titleFileGeneration","t","titleDatasetNotFound","titleApiError","titleFormatDisabled","titleFileGenerationFailed","messageCreatingFile","messageUpdatingFile","messageFailedStaleAvailable","messageFileNeedsGenerating","messageFormatDisabled","fileStatus","exportInProgress","apiError","requestedExportHasFailed","downloadCached","messageDataSourceLocked","exportFailed","requestedExportIsReady","downloadUpToDate","includes","shouldHide","h","message","shouldShowMessage","slot","getNoticeMessage","color","getNoticeColor","dir","scale","width","inline","label","getNoticeTitle","getElement","style"],"sourceRoot":""}