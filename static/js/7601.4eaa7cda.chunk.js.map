{"version":3,"file":"static/js/7601.4eaa7cda.chunk.js","mappings":"qKAAA,IAAMA,EAAO,SAACC,GAA4B,2BAAhBC,EAAW,iCAAXA,EAAW,kBACnCA,EAAYC,SAAQ,SAAAC,GAClB,GAAmC,oBAAxBH,EAAQG,GACjB,MAAM,IAAIC,MAAM,wBAAD,OAAyBD,EAAU,wBAEpDH,EAAQG,GAAcH,EAAQG,GAAYJ,KAAKC,EACjD,GACF,C,2ICJMK,EAAK,WACT,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,2CAA4CC,EAAAA,EAAAA,GAAYF,KAAM,4CAA6C,IAChHT,EAAAA,EAAAA,GAAKS,KAAM,0BACb,CAyBC,OAzBA,+CACD,SAAwBG,GACtBH,KAAKC,0CAA0CG,KAAKD,EAAIE,OAAOC,MACjE,GAAC,gBACD,WAAW,MACLC,EAAIC,EAKR,OAJkB,eACf,YAAc,mBAAgB,SAC9B,YAAc,SAAO,GAEJR,KAAKS,OAAOC,OAAOC,SAClCX,KAAKS,OAAOC,OAAOC,SACqE,QAAtFH,EAAqC,QAA/BD,EAAKP,KAAKS,OAAOG,gBAA6B,IAAPL,OAAgB,EAASA,EAAGM,eAA4B,IAAPL,OAAgB,EAASA,EAAGM,OAC5H,MACP,GAAC,6BACD,WACE,GAAId,KAAKS,OAAOC,OAAOK,UAAW,CAChC,IAAMT,EAAQN,KAAKS,OAAOH,MAE1B,OAAOU,EAAAA,EAAAA,GAAE,gBAAiB,MAAiB,OAAVV,QAA4B,IAAVA,OAAmB,EAASA,EAAMW,SAAW,EAAG,IAAKjB,KAAKS,OAAOC,OAAOK,UAC7H,CACF,GAAC,oBACD,WACE,IAAML,EAASV,KAAKS,OAAOC,OAC3B,OAAQM,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAOlB,KAAKS,OAAOC,OAAOK,UAAY,kBAAoB,KAAMC,EAAAA,EAAAA,GAAE,gBAAiB,CAAEE,MAAO,cAAeC,SAAUnB,KAAKS,OAAOU,SAAUC,MAAOV,EAAOW,MAAON,UAAWL,EAAOK,UAAWO,oBAAqBtB,KAAKuB,wBAAyBC,SAAUxB,KAAKS,OAAOe,SAAUC,OAAQzB,KAAKS,OAAOgB,OAAQX,KAAMd,KAAKc,KAAMR,MAAON,KAAKS,OAAOH,QAAUN,KAAK0B,kBACpX,KAAC,EA9BQ,E","sources":["../node_modules/@esri/hub-components/dist/esm/context-7d8f7366.js","../node_modules/@esri/hub-components/dist/esm/hub-field-input-input.entry.js"],"sourcesContent":["const bind = (context, ...methodNames) => {\n  methodNames.forEach(methodName => {\n    if (typeof context[methodName] !== 'function') {\n      throw new Error(`Cannot bind context. ${methodName} must be a function`);\n    }\n    context[methodName] = context[methodName].bind(context);\n  });\n};\n\nexport { bind as b };\n","import { r as registerInstance, c as createEvent, h } from './index-0d95d9d4.js';\nimport { b as bind } from './context-7d8f7366.js';\n\nconst Input = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisConfigurationEditorFieldInputChange = createEvent(this, \"arcgisConfigurationEditorFieldInputChange\", 7);\n    bind(this, 'handleCalciteInputInput');\n  }\n  handleCalciteInputInput(evt) {\n    this.arcgisConfigurationEditorFieldInputChange.emit(evt.detail.value);\n  }\n  get type() {\n    var _a, _b;\n    const formatToType = {\n      ['date-time']: 'datetime-local',\n      ['idn-email']: 'email'\n    };\n    return formatToType[this.params.schema.format]\n      || this.params.schema.format\n      || ((_b = (_a = this.params.uiSchema) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.type)\n      || 'text';\n  }\n  renderCharCount() {\n    if (this.params.schema.maxLength) {\n      const value = this.params.value;\n      // value can be undefined, so to prevent errors we'll let it fall back on 0\n      return h(\"calcite-label\", null, (value === null || value === void 0 ? void 0 : value.length) || 0, \"/\", this.params.schema.maxLength);\n    }\n  }\n  render() {\n    const schema = this.params.schema;\n    return (h(\"div\", { class: this.params.schema.maxLength ? 'input-container' : '' }, h(\"calcite-input\", { class: 'input-field', disabled: this.params.disabled, label: schema.title, maxLength: schema.maxLength, onCalciteInputInput: this.handleCalciteInputInput, required: this.params.required, status: this.params.status, type: this.type, value: this.params.value }), this.renderCharCount()));\n  }\n};\n\nexport { Input as hub_field_input_input };\n"],"names":["bind","context","methodNames","forEach","methodName","Error","Input","hostRef","registerInstance","this","arcgisConfigurationEditorFieldInputChange","createEvent","evt","emit","detail","value","_a","_b","params","schema","format","uiSchema","options","type","maxLength","h","length","class","disabled","label","title","onCalciteInputInput","handleCalciteInputInput","required","status","renderCharCount"],"sourceRoot":""}