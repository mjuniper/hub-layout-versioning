{"version":3,"file":"static/js/11612.5ab0c8df.chunk.js","mappings":"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","sources":["../.yalc/@esri/hub-components/dist/esm/InitiativeBusinessRules-04858900.js","../.yalc/@esri/hub-components/dist/esm/arcgis-hub-workspace.entry.js","../.yalc/@esri/hub-components/dist/esm/context-7d8f7366.js"],"sourcesContent":["/**\n * Default capabilities for a Initiative. If not listed here, the capability will not be available\n * This hash is combined with the capabilities hash stored in the item data. Regardless of what\n * properties are defined in the item data, only the capabilities defined here will be available\n * @private\n */\nconst InitiativeDefaultCapabilities = {\n    overview: true,\n    details: true,\n    settings: true,\n};\n/**\n * List of all the Initiative Capability Permissions\n * These are considered Hub Business Rules and are not intended\n * to be modified by consumers\n * @private\n */\nconst InitiativeCapabilityPermissions = [\n    {\n        entity: \"initiative\",\n        capability: \"overview\",\n        permissions: [\"hub:initiative:view\"],\n    },\n    {\n        entity: \"initiative\",\n        capability: \"details\",\n        permissions: [\"hub:initiative:edit\"],\n    },\n    {\n        entity: \"initiative\",\n        capability: \"settings\",\n        permissions: [\"hub:initiative:edit\"],\n    },\n];\n/**\n * Initiative Permission Policies\n * These define the requirements any user must meet to perform related actions\n * @private\n */\nconst InitiativePermissions = [\n    \"hub:initiative:create\",\n    \"hub:initiative:delete\",\n    \"hub:initiative:edit\",\n    \"hub:initiative:view\",\n];\n/**\n * Initiative permission policies\n * @private\n */\nconst InitiativePermissionPolicies = [\n    {\n        permission: \"hub:initiative:create\",\n        subsystems: [\"projects\"],\n        authenticated: true,\n        privileges: [\"portal:user:createItem\"],\n        licenses: [\"hub-premium\"],\n    },\n    {\n        permission: \"hub:initiative:view\",\n        subsystems: [\"projects\"],\n        authenticated: false,\n        licenses: [\"hub-premium\"],\n    },\n    {\n        permission: \"hub:initiative:edit\",\n        authenticated: true,\n        subsystems: [\"projects\"],\n        entityEdit: true,\n        licenses: [\"hub-premium\"],\n    },\n    {\n        permission: \"hub:initiative:delete\",\n        authenticated: true,\n        subsystems: [\"projects\"],\n        entityOwner: true,\n        licenses: [\"hub-premium\"],\n    },\n];\n\nexport { InitiativePermissionPolicies as I, InitiativePermissions as a, InitiativeCapabilityPermissions as b, InitiativeDefaultCapabilities as c };\n","import { r as registerInstance, h, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport { i as getBasePropertyMap, p as processEntityCapabilities, j as getItemBySlug, k as fetchModelFromItem, P as PropertyMapper } from './getPropertyMap-7bed72e1.js';\nimport { c as InitiativeDefaultCapabilities } from './InitiativeBusinessRules-04858900.js';\nimport { a as getItemThumbnailUrl } from './get-item-thumbnail-url-7608a737.js';\nimport { i as isGuid } from './is-guid-8127621d.js';\nimport { g as getItem } from './get-f2cd18e7.js';\nimport { f as fetchSite, a as fetchProject } from './HubSites-36599d40.js';\nimport './index-4e91769f.js';\nimport './search-3af9e278.js';\nimport './generic-search-069e22da.js';\nimport './get-portal-url-423a76f5.js';\nimport './clean-url-be7c0879.js';\nimport './append-custom-params-fd9b7e72.js';\nimport './request-c15cc2af.js';\nimport './extent-0f42acfc.js';\nimport './get-prop-d82e4fa6.js';\nimport './util-2150bd9e.js';\nimport './create-7cf3c372.js';\nimport './tslib.es6-3669ad41.js';\nimport './get-with-default-6db049d8.js';\nimport './OperationError-85fd80c7.js';\nimport './get-portal-api-url-2391fbac.js';\nimport './update-fec93fc5.js';\nimport './fail-safe-1c23dad8.js';\nimport './set-prop-c51a6d0c.js';\nimport './ProjectBusinessRules-bb655b17.js';\nimport './_internal-f8d6239a.js';\nimport './helpers-a80c0291.js';\nimport './_enrichments-9747f1f3.js';\nimport './getPortalBaseFromOrgUrl-6a5781aa.js';\nimport './get-portal-06f7947b.js';\nimport './getService-49b539e3.js';\nimport './tslib.es6-b2e8cdb8.js';\nimport './SiteBusinessRules-05d0a02f.js';\n\n/**\n * Returns an Array of IPropertyMap objects\n * that define the projection of properties from a IModel to an IHubProject\n * @returns\n * @private\n */\nfunction getPropertyMap() {\n    const map = getBasePropertyMap();\n    // Type specific mappings\n    map.push({ objectKey: \"status\", modelKey: \"data.status\" });\n    map.push({ objectKey: \"catalog\", modelKey: \"data.catalog\" });\n    map.push({ objectKey: \"permissions\", modelKey: \"data.permissions\" });\n    map.push({\n        objectKey: \"capabilities\",\n        modelKey: \"data.settings.capabilities\",\n    });\n    map.push({ objectKey: \"contacts\", modelKey: \"data.contacts\" });\n    map.push({ objectKey: \"timeline\", modelKey: \"data.timeline\" });\n    return map;\n}\n\n/**\n * Given a model and an Initiative, set various computed properties that can't be directly mapped\n * @private\n * @param model\n * @param initiative\n * @param requestOptions\n * @returns\n */\nfunction computeProps(model, initiative, requestOptions) {\n    var _a;\n    let token;\n    if (requestOptions.authentication) {\n        const session = requestOptions.authentication;\n        token = session.token;\n    }\n    // thumbnail url\n    initiative.thumbnailUrl = getItemThumbnailUrl(model.item, requestOptions, token);\n    // Handle Dates\n    initiative.createdDate = new Date(model.item.created);\n    initiative.createdDateSource = \"item.created\";\n    initiative.updatedDate = new Date(model.item.modified);\n    initiative.updatedDateSource = \"item.modified\";\n    // Handle capabilities\n    initiative.capabilities = processEntityCapabilities(((_a = model.data.settings) === null || _a === void 0 ? void 0 : _a.capabilities) || {}, InitiativeDefaultCapabilities);\n    // cast b/c this takes a partial but returns a full object\n    return initiative;\n}\n\n// Note - we separate these imports so we can cleanly spy on things in tests\n/**\n * @private\n * Get a Hub Initiative by id or slug\n * @param identifier item id or slug\n * @param requestOptions\n */\nfunction fetchInitiative(identifier, requestOptions) {\n    let getPrms;\n    if (isGuid(identifier)) {\n        // get item by id\n        getPrms = getItem(identifier, requestOptions);\n    }\n    else {\n        getPrms = getItemBySlug(identifier, requestOptions);\n    }\n    return getPrms.then((item) => {\n        if (!item)\n            return null;\n        return convertItemToInitiative(item, requestOptions);\n    });\n}\n/**\n * @private\n * Convert an Hub Initiative Item into a Hub Initiative, fetching any additional\n * information that may be required\n * @param item\n * @param auth\n * @returns\n */\nasync function convertItemToInitiative(item, requestOptions) {\n    const model = await fetchModelFromItem(item, requestOptions);\n    const mapper = new PropertyMapper(getPropertyMap());\n    const prj = mapper.modelToObject(model, {});\n    return computeProps(model, prj, requestOptions);\n}\n\n/**\n * Fetch a Hub entity by identifier (id or slug)\n * @param type\n * @param identifier\n * @param context\n * @returns\n */\nasync function fetchHubEntity(type, identifier, context) {\n    let result;\n    switch (type) {\n        case \"project\":\n            result = await fetchProject(identifier, context.requestOptions);\n            break;\n        case \"site\":\n            result = await fetchSite(identifier, context.hubRequestOptions);\n            break;\n        case \"initiative\":\n            result = await fetchInitiative(identifier, context.requestOptions);\n            break;\n        case \"page\":\n            throw new Error(`FetchPage not implemented`);\n    }\n    return result;\n}\n\nconst arcgisHubWorkspaceCss = \".sc-arcgis-hub-workspace-h{position:relative;display:block;height:100vh}.workspace__navigation.sc-arcgis-hub-workspace{margin-top:1rem;margin-left:0.5rem;margin-right:2rem}.workspace__panel.sc-arcgis-hub-workspace{padding:10px}.workspace__top-navigation.sc-arcgis-hub-workspace,.workspace__footer.sc-arcgis-hub-workspace{background-color:var(--calcite-ui-text-2);display:flex;height:4rem;align-items:center;justify-content:center;color:var(--calcite-ui-text-inverse)}\";\n\nconst ArcgisHubWorkspace = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.panel = \"overview\";\n    bind(this, 'handleWorkspaceNavigationLinkClicked');\n  }\n  async fetchEntity() {\n    let _entity = this.entity;\n    if (!_entity && this.identifier) {\n      this.isLoading = true;\n      _entity = this.context && await fetchHubEntity(this.type, this.identifier, this.context);\n    }\n    this.isLoading = !this.context;\n    this._entity = _entity;\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n    await this.fetchEntity();\n  }\n  get headerIcon() {\n    const entityTypeToIcon = {\n      project: 'projects',\n      site: 'web', // dummy -- needs to be updated with correct icon\n    };\n    return entityTypeToIcon[this.type];\n  }\n  get headerLabel() {\n    return this.intl.t(`${this.type}Workspace`);\n  }\n  /**\n   * For now this is a simple getter that maps panels to a single\n   * component. Although we'd ideally like panel components to be\n   * generic enough to work for any entity, this may be unrealistic\n   * and we may need to eventually extend this logic to account for\n   * entity-specific panel components\n   */\n  get panelComponent() {\n    const panelToComponent = {\n      overview: 'arcgis-hub-entity-overview',\n      details: 'arcgis-hub-entity-editor',\n      settings: 'arcgis-hub-entity-settings'\n    };\n    return panelToComponent[this.panel] || 'arcgis-hub-workspace-missing-panel';\n  }\n  handleWorkspaceNavigationLinkClicked(evt) {\n    this.panel = evt.detail;\n  }\n  renderHeader() {\n    return (h(\"div\", { slot: \"header\" }, h(\"div\", { class: \"workspace__top-navigation\" }, \"This is a top navigation placeholder\"), h(\"arcgis-hub-workspace-header\", { class: \"workspace__header\", icon: this.headerIcon, label: this.headerLabel, text: this._entity.name })));\n  }\n  ;\n  renderNavigation() {\n    return (h(\"div\", { class: \"workspace__navigation\", slot: \"primary-panel\" }, h(\"slot\", { name: \"workspace-navigation\" }, h(\"arcgis-hub-workspace-navigation\", { context: this.context, entity: this._entity, onArcgisHubWorkspaceNavigationLinkClicked: this.handleWorkspaceNavigationLinkClicked }))));\n  }\n  ;\n  renderPanel() {\n    const Component = this.panelComponent;\n    return (h(Component, { class: \"workspace__panel\", context: this.context, entity: this._entity, panel: this.panel }));\n  }\n  renderFooter() {\n    return (h(\"div\", { class: \"workspace__footer\", slot: \"footer\" }, \"This is a footer placeholder\"));\n  }\n  render() {\n    // TODO: Loader should be representative of the UX being loaded\n    return (this.isLoading\n      ? h(\"arcgis-skeleton-loader\", { active: true, class: \"workspace__loader\", rows: 3, \"show-heading\": \"true\" })\n      : h(Host, { \"data-element\": \"workspace\", unthemed: true }, h(\"calcite-shell\", null, this.renderHeader(), this.renderNavigation(), this.renderPanel(), this.renderFooter())));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"context\": [\"fetchEntity\"]\n  }; }\n};\nArcgisHubWorkspace.style = arcgisHubWorkspaceCss;\n\nexport { ArcgisHubWorkspace as arcgis_hub_workspace };\n","const bind = (context, ...methodNames) => {\n  methodNames.forEach(methodName => {\n    if (typeof context[methodName] !== 'function') {\n      throw new Error(`Cannot bind context. ${methodName} must be a function`);\n    }\n    context[methodName] = context[methodName].bind(context);\n  });\n};\n\nexport { bind as b };\n"],"names":["InitiativeDefaultCapabilities","overview","details","settings","InitiativeCapabilityPermissions","entity","capability","permissions","InitiativePermissions","InitiativePermissionPolicies","permission","subsystems","authenticated","privileges","licenses","entityEdit","entityOwner","getPropertyMap","map","getBasePropertyMap","push","objectKey","modelKey","computeProps","model","initiative","requestOptions","_a","token","authentication","thumbnailUrl","getItemThumbnailUrl","item","createdDate","Date","created","createdDateSource","updatedDate","modified","updatedDateSource","capabilities","processEntityCapabilities","data","fetchInitiative","identifier","isGuid","getItem","getItemBySlug","then","convertItemToInitiative","fetchModelFromItem","mapper","PropertyMapper","prj","modelToObject","fetchHubEntity","type","context","fetchProject","result","fetchSite","hubRequestOptions","Error","ArcgisHubWorkspace","hostRef","registerInstance","this","panel","bind","_entity","isLoading","intlManager","element","intl","fetchEntity","project","site","t","evt","detail","h","slot","class","icon","headerIcon","label","headerLabel","text","name","onArcgisHubWorkspaceNavigationLinkClicked","handleWorkspaceNavigationLinkClicked","Component","panelComponent","active","rows","Host","unthemed","renderHeader","renderNavigation","renderPanel","renderFooter","getElement","style","methodNames","forEach","methodName"],"sourceRoot":""}