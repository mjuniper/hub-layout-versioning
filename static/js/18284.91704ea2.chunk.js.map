{"version":3,"file":"static/js/18284.91704ea2.chunk.js","mappings":"0OAIMA,EAAc,WAClB,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,sBAAuBC,EAAAA,EAAAA,GAAYF,KAAM,uBAAwB,GAItEA,KAAKG,UAAW,EAChBH,KAAKI,aAAe,EACtB,CA2DI,OA1DJ,2CAGA,SAAoBC,GAClBL,KAAKI,aAAeE,MAAMC,QAAQF,GAAUA,EAASA,EAAOG,MAAM,IACpE,GACA,oCAGA,SAAuBC,GACrB,IAAMC,EAAcD,EAAME,OAAOC,MAC3BC,EAAQb,KAAKI,aAAaU,WAAU,SAACF,GAAK,OAAKA,IAAUF,CAAW,IAE1EV,KAAKI,aAAe,GAAH,eACZJ,KAAKI,aAAaW,MAAM,EAAGF,KAAM,OACjCb,KAAKI,aAAaW,MAAMF,EAAQ,KAErCb,KAAKC,qBAAqBe,KAAK,CAC7BX,OAAQL,KAAKI,aAAaW,SAE9B,GAAC,4BACD,SAAeN,GACb,IAAMQ,EAAQR,EAAMS,OAKpB,GAAkB,UAAdT,EAAMU,KAAmBF,EAAML,QAAUZ,KAAKI,aAAagB,SAASH,EAAML,OAAQ,CACpF,IAAMS,EAAWJ,EAAML,MAEvBZ,KAAKI,aAAe,GAAH,eACZJ,KAAKI,cAAY,CACpBiB,IAEFrB,KAAKC,qBAAqBe,KAAK,CAC7BX,OAAQL,KAAKI,aAAaW,UAE5BE,EAAML,MAAQ,EAChB,CACF,GACA,+BAGA,WACMZ,KAAKK,QACPL,KAAKsB,oBAAoBtB,KAAKK,OAElC,GACA,oBAGA,WAAS,WACP,OAAQkB,EAAAA,EAAAA,GAAE,MAAO,KAAMvB,KAAKG,SACxB,MACAoB,EAAAA,EAAAA,GAAE,gBAAiB,CAAEpB,SAAUH,KAAKG,SAAUqB,MAAOxB,KAAKwB,QAAUxB,KAAKI,aAAaqB,KAAI,SAACb,GAAK,OAAKW,EAAAA,EAAAA,GAAE,eAAgB,CAAEG,aAAc,EAAKvB,SAAUgB,IAAKP,EAAOA,MAAOA,GAASA,EAAM,IAC9L,IAAC,qBACD,WAAwB,MAAO,CAC7B,OAAU,CAAC,uBACV,KAAC,EApEc,GAsEpBf,EAAe8B,MAxEW,gE","sources":["../node_modules/@esri/hub-components/dist/esm/hub-multiselect.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h } from './index-0d95d9d4.js';\n\nconst hubMultiselectCss = \"calcite-chip{margin:0.25rem;margin-bottom:0px;margin-left:0px}\";\n\nconst HubMultiselect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.hubMultiselectChange = createEvent(this, \"hubMultiselectChange\", 7);\n    /**\n     * A boolean value indicating whether the multiselect is disabled.\n     */\n    this.disabled = false;\n    this.parsedValues = [];\n  }\n  /**\n   * Property watchers\n   */\n  handleValuesChanged(values) {\n    this.parsedValues = Array.isArray(values) ? values : values.split(',');\n  }\n  /**\n   * Event handling\n   */\n  handleChipDismissEvent(event) {\n    const optionValue = event.detail.value;\n    const index = this.parsedValues.findIndex((value) => value === optionValue);\n    // update the reference\n    this.parsedValues = [\n      ...this.parsedValues.slice(0, index),\n      ...this.parsedValues.slice(index + 1)\n    ];\n    this.hubMultiselectChange.emit({\n      values: this.parsedValues.slice()\n    });\n  }\n  handleKeyEvent(event) {\n    const input = event.target;\n    // only response when\n    // * the Enter key is pressed\n    // * the input box has a value\n    // * the input box value is not duplicated with any selected value\n    if (event.key === 'Enter' && input.value && !this.parsedValues.includes(input.value)) {\n      const newValue = input.value;\n      // update reference\n      this.parsedValues = [\n        ...this.parsedValues,\n        newValue\n      ];\n      this.hubMultiselectChange.emit({\n        values: this.parsedValues.slice()\n      });\n      input.value = '';\n    }\n  }\n  /**\n   * Hooks\n   */\n  componentWillLoad() {\n    if (this.values) {\n      this.handleValuesChanged(this.values);\n    }\n  }\n  /**\n   * Functions\n   */\n  render() {\n    return (h(\"div\", null, this.disabled\n      ? null\n      : h(\"calcite-input\", { disabled: this.disabled, label: this.label }), this.parsedValues.map((value) => h(\"calcite-chip\", { dismissible: !this.disabled, key: value, value: value }, value))));\n  }\n  static get watchers() { return {\n    \"values\": [\"handleValuesChanged\"]\n  }; }\n};\nHubMultiselect.style = hubMultiselectCss;\n\nexport { HubMultiselect as hub_multiselect };\n"],"names":["HubMultiselect","hostRef","registerInstance","this","hubMultiselectChange","createEvent","disabled","parsedValues","values","Array","isArray","split","event","optionValue","detail","value","index","findIndex","slice","emit","input","target","key","includes","newValue","handleValuesChanged","h","label","map","dismissible","style"],"sourceRoot":""}