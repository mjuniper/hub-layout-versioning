{"version":3,"file":"static/js/28023.c7106621.chunk.js","mappings":"uLAIoEA,E,sDAAE,SAASC,EAAEA,EAAEC,GAAG,IAAIC,EAAED,EAAEE,aAAaD,EAAE,iBAAiBA,GAAG,SAASA,GAAG,SAASA,GAAG,WAAWA,GAAG,wBAAwBA,GAAG,SAASA,IAAIA,EAAE,QAAQA,EAAE,OAAOD,EAAEE,aAAaD,EAAE,IAAME,GAAEC,EAAAA,EAAAA,IAAEJ,EAAEK,QAAQ,cAAcL,EAAEK,OAAOC,WAAWC,oBAAoB,UAAU,CAACC,IAAIT,EAAEU,QAAQT,GAAG,CAACK,OAAOF,IAAIO,KAAI,yCAAE,WAAMN,GAAC,4FAAoBA,EAAEO,KAAI,sBAAIP,EAAEO,gBAAgBC,aAAW,oBAAO,SAASX,GAAG,SAASA,GAAG,SAASA,IAAIY,EAAE,IAAIC,KAAK,CAACV,EAAEO,OAAO,SAASV,GAAG,SAASA,IAAIH,IAAIA,EAAE,IAAIiB,gBAAgBC,EAAElB,EAAEmB,WAAWJ,GAAG,SAASZ,IAAG,0BAAOiB,EAAEC,KAAKC,MAAMJ,GAAG,MAAK,uBAA8C,MAA9C,yBAAgBZ,GAAC,4BAAOI,IAAIT,EAAEsB,eAAerB,IAAS,IAAIsB,EAAAA,EAAE,iBAAiB,KAAEC,QAAQnB,GAAE,YAAIc,EAAEM,MAAK,iBAA4C,MAApCpB,GAAC,kBAAKc,EAAEM,OAAK,IAAChB,IAAIT,EAAEsB,eAAerB,IAAS,IAAIsB,EAAAA,EAAE,iBAAiBJ,EAAEM,MAAMD,QAAQnB,GAAE,gCAAmB,GAAnB,KAAO,WAAWH,GAAC,sBAAkB,OAAfG,EAAEO,KAAKN,OAAOF,EAAC,UAASsB,MAAMrB,EAAEO,KAAKH,IAAIJ,EAAEO,MAAK,QAAhCe,EAAC,OAAgCtB,EAAEuB,WAAWD,EAAEE,OAAM,aAAS3B,EAAC,OAAM,SAAN,KAAY,GAAe,SAAf,KAAqB,GAAe,WAAf,KAAuB,GAAe,SAAf,KAAqB,oBAA5D,OAAJ4B,EAAEhB,EAAE,6BAAqB,OAAJgB,EAAEX,EAAE,6BAAuB,OAAJW,EAAEH,EAAE,6BAAqB,OAAJG,EAAEb,EAAE,6BAAca,EAAEzB,EAAEO,KAAI,iCAAO,CAACA,KAAKkB,EAAEF,WAAWvB,EAAEuB,WAAWN,eAAerB,EAAE8B,IAAI1B,EAAE0B,IAAItB,IAAIT,IAAE,yDAAC,mDAA1sB,GAA4sB,C","sources":["../node_modules/@arcgis/core/core/workers/request.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from\"../Error.js\";import{unwrap as t}from\"../maybe.js\";let s;function r(r,a){let n=a.responseType;n?\"array-buffer\"!==n&&\"blob\"!==n&&\"json\"!==n&&\"native\"!==n&&\"native-request-init\"!==n&&\"text\"!==n&&(n=\"text\"):n=\"json\",a.responseType=n;const o=t(a.signal);return delete a.signal,globalThis.invokeStaticMessage(\"request\",{url:r,options:a},{signal:o}).then((async t=>{let i,l,u,c,p;if(t.data)if(t.data instanceof ArrayBuffer){if(!(\"json\"!==n&&\"text\"!==n&&\"blob\"!==n||(i=new Blob([t.data]),\"json\"!==n&&\"text\"!==n||(s||(s=new FileReaderSync),c=s.readAsText(i),\"json\"!==n)))){try{l=JSON.parse(c||null)}catch(b){const t={...b,url:r,requestOptions:a};throw new e(\"request:server\",b.message,t)}if(l.error){const t={...l.error,url:r,requestOptions:a};throw new e(\"request:server\",l.error.message,t)}}}else\"native\"===n&&(t.data.signal=o,u=await fetch(t.data.url,t.data),t.httpStatus=u.status);switch(n){case\"blob\":p=i;break;case\"json\":p=l;break;case\"native\":p=u;break;case\"text\":p=c;break;default:p=t.data}return{data:p,httpStatus:t.httpStatus,requestOptions:a,ssl:t.ssl,url:r}}))}export{r as execute};\n"],"names":["s","r","a","n","responseType","o","t","signal","globalThis","invokeStaticMessage","url","options","then","data","ArrayBuffer","i","Blob","FileReaderSync","c","readAsText","l","JSON","parse","requestOptions","e","message","error","fetch","u","httpStatus","status","p","ssl"],"sourceRoot":""}