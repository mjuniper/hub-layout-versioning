{"version":3,"file":"static/js/42444.4a8c3cf6.chunk.js","mappings":"wSAqCMA,G,sIAAmB,WACvB,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,EACzB,CAmEI,OAnEH,uCACD,WAEEE,KAAKC,SAAWD,KAAKE,OACvB,GAEA,6BACA,WACE,IAAMC,EAAUH,KAAKG,QACE,kBAAZA,EAETH,KAAKI,aAAaD,GAGlBH,KAAKK,SAAWF,CAEpB,GAAC,6BACD,WACEH,KAAKM,mBACP,GAAC,+BACD,WACMN,KAAKO,GAAGC,cAAc,oBACxBR,KAAKS,OAAST,KAAKO,GAAGC,cAAc,mBAEtCR,KAAKU,kBACLV,KAAKW,iBACP,GACA,mEACA,WAAmBC,GAAU,iFACtBZ,KAAKC,SAAU,CAAF,eAEoD,OAA9DY,EAAUb,KAAKc,OAAS,CAAEC,UAAWf,KAAKc,aAAWE,EAAS,SAClDC,EAAAA,EAAAA,OAA4BJ,GAAQ,OAAhDK,EAAM,EAAH,KACTlB,KAAKC,SAAWiB,EAAIhB,QAAQ,wBAERiB,EAAAA,EAAAA,GAAaP,EAAYZ,KAAKC,SAASmB,mBAAkB,OAA/EpB,KAAKK,SAAW,EAAH,qDACd,mDATD,IASC,+BACD,WAEML,KAAKS,SACPT,KAAKS,OAAOY,OAASrB,KAAKsB,QAC1BtB,KAAKS,OAAOc,SAAW,CAACvB,KAAKwB,UAEjC,GAAC,mBACD,WACE,OAAOxB,KAAKK,UAGRoB,EAAAA,EAAAA,GAAazB,KAAKK,SAASgB,aAC3BL,CACN,GAAC,oBACD,WACE,IAAIU,EAAIC,EACFC,EAA4F,QAAhFD,EAA8B,QAAxBD,EAAK1B,KAAKK,gBAA6B,IAAPqB,OAAgB,EAASA,EAAGG,gBAA6B,IAAPF,OAAgB,EAASA,EAAGC,SACtI,MAAO,CACLE,QAAQC,EAAAA,EAAAA,KACRH,SAAAA,EAEJ,GAAC,oBACD,WACE,OAAQI,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,MAAMD,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,KAAM,QAASF,EAAAA,EAAAA,GAAE,iBAAkB,CAAEG,QAAS,cAAeC,OAAQ,IAAKf,OAAQrB,KAAKsB,QAASC,SAAU,CAACvB,KAAKwB,aACpJ,GAAC,cACD,WAAW,OAAOa,EAAAA,EAAAA,GAAWrC,KAAO,IAAC,qBACrC,WAAwB,MAAO,CAC7B,QAAW,CAAC,mBACZ,QAAW,CAAC,mBACZ,SAAY,CAAC,mBACZ,KAAC,EAtEmB,IAwEzBH,EAAoByC,MA1EW,kG,wDCnC/B,IAAMC,EAAgB,CACpBC,MAAO,CAAC,GAAI,IAAK,IAAK,IACtBC,QAAS,CACPD,MAAO,CAAC,IAAK,IAAK,IAAK,GACvBE,MAAO,EACPC,KAAM,cACNL,MAAO,SAETK,KAAM,cACNL,MAAO,SAEHM,EAAsB,CAC1BJ,MAAO,CAAC,GAAI,IAAK,IAAK,KACtBC,QAAS,CACPD,MAAO,CAAC,IAAK,IAAK,IAAK,GACvBE,MAAO,EACPC,KAAM,cACNL,MAAO,SAETK,KAAM,cACNL,MAAO,SAEHP,EAAkB,SAACc,GACvB,OAAOA,EAAWD,EAAsBL,CAC1C,C","sources":["../node_modules/@esri/hub-components/dist/esm/arcgis-hub-content-map.entry.js","../node_modules/@esri/hub-components/dist/esm/map-ec53fbbc.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { g as getExtentSymbol } from './map-ec53fbbc.js';\nimport { A as ArcGISContextManager } from './ArcGISContextManager-4351a238.js';\nimport { f as fetchContent } from './fetch-e59da0af.js';\nimport { b as bBoxToExtent } from './extent-0f42acfc.js';\nimport './get-prop-d82e4fa6.js';\nimport './get-with-default-6db049d8.js';\nimport './getPortalBaseFromOrgUrl-6a5781aa.js';\nimport './tslib.es6-3669ad41.js';\nimport './get-portal-url-423a76f5.js';\nimport './clean-url-be7c0879.js';\nimport './request-c15cc2af.js';\nimport './logger-0c7a68de.js';\nimport './util-3c40fe6c.js';\nimport './get-portal-06f7947b.js';\nimport './tslib.es6-e75776ba.js';\nimport './_enrichments-7716cdcc.js';\nimport './_internal-89d3dc92.js';\nimport './helpers-a80c0291.js';\nimport './OperationError-85fd80c7.js';\nimport './get-f2cd18e7.js';\nimport './append-custom-params-fd9b7e72.js';\nimport './getService-49b539e3.js';\nimport './tslib.es6-b2e8cdb8.js';\nimport './slugs-150ad0db.js';\nimport './is-guid-8127621d.js';\nimport './request-f9ca03b5.js';\nimport './api-196fe0e3.js';\nimport './get-portal-api-url-ccd8fd10.js';\nimport './compose-bfd77ec4.js';\nimport './get-structured-license-d1e63636.js';\nimport './get-item-thumbnail-url-7e5ae2fd.js';\nimport './get-item-home-url-9ff2898b.js';\nimport './query-15c2c6ed.js';\n\nconst arcgisHubContentMapCss = \".sc-arcgis-hub-content-map-h{display:block}arcgis-hub-map.sc-arcgis-hub-content-map{height:100%}\";\n\nconst ArcgisHubContentMap = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  onContextChange() {\n    // override default context or context derived from portal\n    this._context = this.context;\n  }\n  // TODO: how to share this handler with arcgis-hub-boundary-picker?\n  // TODO: @Watch('requestOptions')\n  onContentUpdate() {\n    const content = this.content;\n    if (typeof content === 'string') {\n      // identifier was passed in, fetch the content\n      this._loadContent(content);\n    }\n    else {\n      this._content = content;\n    }\n  }\n  onContentChange() {\n    this._updateMapElProps();\n  }\n  componentWillLoad() {\n    if (this.el.querySelector('arcgis-hub-map')) {\n      this._mapEl = this.el.querySelector('arcgis-hub-map');\n    }\n    this.onContentUpdate();\n    this.onContextChange();\n  }\n  // TODO: how to share this arcgis-hub-boundary-picker?\n  async _loadContent(identifier) {\n    if (!this._context) {\n      // lazy initialize context\n      const options = this.portal ? { portalUrl: this.portal } : undefined;\n      const ctx = await ArcGISContextManager.create(options);\n      this._context = ctx.context;\n    }\n    this._content = await fetchContent(identifier, this._context.hubRequestOptions);\n  }\n  _updateMapElProps() {\n    // NOTE: I _think_ this._mapEl will only be defined if a map was passed in via the slot\n    if (this._mapEl) {\n      this._mapEl.extent = this._extent;\n      this._mapEl.graphics = [this._graphic];\n    }\n  }\n  get _extent() {\n    return this._content\n      // TODO: should this use this._content.item.extent instead?\n      // this._content.extent could be from the layer or service\n      ? bBoxToExtent(this._content.extent)\n      : undefined;\n  }\n  get _graphic() {\n    var _a, _b;\n    const geometry = (_b = (_a = this._content) === null || _a === void 0 ? void 0 : _a.boundary) === null || _b === void 0 ? void 0 : _b.geometry;\n    return {\n      symbol: getExtentSymbol(),\n      geometry\n    };\n  }\n  render() {\n    return (h(Host, null, h(\"slot\", { name: \"map\" }, h(\"arcgis-hub-map\", { basemap: \"gray-vector\", expand: 1.5, extent: this._extent, graphics: [this._graphic] }))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"context\": [\"onContextChange\"],\n    \"content\": [\"onContentUpdate\"],\n    \"_content\": [\"onContentChange\"]\n  }; }\n};\nArcgisHubContentMap.style = arcgisHubContentMapCss;\n\nexport { ArcgisHubContentMap as arcgis_hub_content_map };\n","const EXTENT_SYMBOL = {\n  color: [93, 173, 221, 0.1],\n  outline: {\n    color: [255, 255, 255, 1],\n    width: 1,\n    type: 'simple-line',\n    style: 'solid'\n  },\n  type: 'simple-fill',\n  style: 'solid'\n};\nconst EXTENT_HOVER_SYMBOL = {\n  color: [93, 173, 221, 0.25],\n  outline: {\n    color: [155, 155, 155, 1],\n    width: 4,\n    type: 'simple-line',\n    style: 'solid'\n  },\n  type: 'simple-fill',\n  style: 'solid'\n};\nconst getExtentSymbol = (useHover) => {\n  return useHover ? EXTENT_HOVER_SYMBOL : EXTENT_SYMBOL;\n};\n\nexport { getExtentSymbol as g };\n"],"names":["ArcgisHubContentMap","hostRef","registerInstance","this","_context","context","content","_loadContent","_content","_updateMapElProps","el","querySelector","_mapEl","onContentUpdate","onContextChange","identifier","options","portal","portalUrl","undefined","ArcGISContextManager","ctx","fetchContent","hubRequestOptions","extent","_extent","graphics","_graphic","bBoxToExtent","_a","_b","geometry","boundary","symbol","getExtentSymbol","h","Host","name","basemap","expand","getElement","style","EXTENT_SYMBOL","color","outline","width","type","EXTENT_HOVER_SYMBOL","useHover"],"sourceRoot":""}