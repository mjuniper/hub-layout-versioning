{"version":3,"file":"static/js/13518.5879c254.chunk.js","mappings":"oRAkCMA,G,sIAAqB,WACzB,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,SAAW,KAChBD,KAAKE,SAAW,GAChBF,KAAKG,OAAS,CAAC,EAIfH,KAAKI,WAAY,CACnB,CA0DI,OA1DH,uCACD,SAAgBC,GACdC,QAAQC,IAAI,kCAAmCF,GAC3CA,IACFL,KAAKE,SAAWM,KAAKC,MAAMJ,GAE/B,GAAC,6BACD,SAAgBA,GACVA,GACFL,KAAKU,YAAYL,EAErB,GAEA,oBACA,SAAOM,EAAmBC,GACxB,IAAMC,GAAQC,EAAAA,EAAAA,GAAQF,EAAQD,EAAkBI,SAC5CC,EAAeH,EAEnB,GAAc,OAAVA,EACF,OAAQF,EAAkBM,QACxB,IAAK,WAEHD,EAAe,IAAIE,KAAKL,GAAOM,cAC/B,MAEF,IAAK,QAECC,MAAMC,QAAQR,KAChBG,EAAeH,EAAMS,KAAK,OAMlC,OAAON,CACT,GAAC,kEACD,WAAkBO,GAAK,uFAIDC,EAAAA,EAAAA,GAAaD,GAAM,OAAvCvB,KAAKG,OAAS,EAAH,KACXH,KAAKI,WAAY,EACjBE,QAAQC,IAAI,qCAAsC,CAChDP,KAAKG,OAAc,MACnBH,KAAKG,OAAOsB,MACZzB,KAAKE,SACLF,KAAKG,SACJ,gDACJ,mDAbA,IAaA,+BACD,WACEH,KAAKU,YAAYV,KAAKC,SACxB,GAAC,oBACD,WAAS,WACP,OAAQyB,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAE,eAAgB,kBAAmBD,EAAAA,EAAAA,GAAE,OAAQ,OAAOA,EAAAA,EAAAA,GAAE,QAAS,KAAM1B,KAAKE,SAAS0B,KAAI,SAAAC,GAAe,OAAIH,EAAAA,EAAAA,GAAE,KAAM,CAAEI,IAAKD,EAAgBE,QAASL,EAAAA,EAAAA,GAAE,KAAM,KAAMG,EAAgBE,QAAQL,EAAAA,EAAAA,GAAE,KAAM,KAAM,EAAKtB,UAAY,qCAA6B,EAAK4B,OAAOH,EAAiB,EAAK1B,SAAS,KACnT,IAAC,qBACD,WAAwB,MAAO,CAC7B,SAAY,CAAC,mBACb,SAAY,CAAC,mBACZ,KAAC,EApEqB,IAsE3BN,EAAsBoC,MAxEW,ylB","sources":["../node_modules/@esri/hub-components/dist/esm/arcgis-hub-metadata-list.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-0d95d9d4.js';\nimport { g as getProp } from './get-prop-d82e4fa6.js';\nimport { f as fetchContent } from './fetch-e59da0af.js';\nimport './tslib.es6-e75776ba.js';\nimport './_enrichments-7716cdcc.js';\nimport './util-3c40fe6c.js';\nimport './get-with-default-6db049d8.js';\nimport './_internal-89d3dc92.js';\nimport './extent-0f42acfc.js';\nimport './request-c15cc2af.js';\nimport './helpers-a80c0291.js';\nimport './clean-url-be7c0879.js';\nimport './OperationError-85fd80c7.js';\nimport './get-f2cd18e7.js';\nimport './tslib.es6-3669ad41.js';\nimport './get-portal-url-423a76f5.js';\nimport './append-custom-params-fd9b7e72.js';\nimport './getPortalBaseFromOrgUrl-6a5781aa.js';\nimport './get-portal-06f7947b.js';\nimport './getService-49b539e3.js';\nimport './tslib.es6-b2e8cdb8.js';\nimport './slugs-150ad0db.js';\nimport './is-guid-8127621d.js';\nimport './request-f9ca03b5.js';\nimport './api-196fe0e3.js';\nimport './get-portal-api-url-ccd8fd10.js';\nimport './compose-bfd77ec4.js';\nimport './get-structured-license-d1e63636.js';\nimport './get-item-thumbnail-url-7e5ae2fd.js';\nimport './get-item-home-url-9ff2898b.js';\nimport './query-15c2c6ed.js';\n\nconst arcgisHubMetadataListCss = \":host{display:block;border:thin solid #DDD;margin:0.5rem 0}tr:nth-child(even){background-color:#f3f3f3}th,td{padding:0.8rem 1rem}@-webkit-keyframes shimmer{0%{background-size:200% 100%;background-position:100% 0}100%{background-size:200% 100%;background-position:-100% 0}}@keyframes shimmer{0%{background-size:200% 100%;background-position:100% 0}100%{background-size:200% 100%;background-position:-100% 0}}td.loading{-webkit-animation:shimmer 2s cubic-bezier(0.4, 0, 0.2, 0.8) infinite;animation:shimmer 2s cubic-bezier(0.4, 0, 0.2, 0.8) infinite}tbody tr.active-row{font-weight:bold;color:#009879}\";\n\nconst ArcgisHubMetadataList = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.entityId = null;\n    this.metadata = [];\n    this.entity = {};\n    /**\n     * Is the component still loading data\n     */\n    this.isLoading = true;\n  }\n  metadataUpdated(newValue) {\n    console.log(\"ArcGISHubMetadataList: metadata\", newValue);\n    if (newValue) {\n      this.metadata = JSON.parse(newValue);\n    }\n  }\n  entityIdUpdated(newValue) {\n    if (newValue) {\n      this.fetchEntity(newValue);\n    }\n  }\n  // Utility function for deep addressing an object\n  // 'a.b.etc'.split('.').reduce(index, obj)\n  lookup(elementDefinition, object) {\n    const value = getProp(object, elementDefinition.element);\n    let displayValue = value;\n    // Check for null vs falsey b/c false could be a legit value\n    if (value !== null) {\n      switch (elementDefinition.format) {\n        case \"datetime\": {\n          // TODO: This should be a locale based format\n          displayValue = new Date(value).toISOString();\n          break;\n        }\n        case \"array\": {\n          // ensure it's actually an array\n          if (Array.isArray(value)) {\n            displayValue = value.join(\", \");\n          }\n          break;\n        }\n      }\n    }\n    return displayValue;\n  }\n  async fetchEntity(newId) {\n    // TODO request additional elements based on configured metadata or lazy-load\n    // When asking only for metadata and org, FetchContent makes a request to v3 api for something that 404s?\n    // this.entity = await fetchContent( newId, {enrichments: ['metadata', 'org'] } );\n    this.entity = await fetchContent(newId);\n    this.isLoading = false;\n    console.log('ArcGISHubMetadataList: fetchEntity', [\n      this.entity['title'],\n      this.entity.title,\n      this.metadata,\n      this.entity,\n    ]);\n  }\n  componentWillLoad() {\n    this.fetchEntity(this.entityId);\n  }\n  render() {\n    return (h(Host, { \"data-element\": \"metadata-list\" }, h(\"slot\", null), h(\"table\", null, this.metadata.map(metadataElement => h(\"tr\", { key: metadataElement.label }, h(\"td\", null, metadataElement.label), h(\"td\", null, this.isLoading ? \"Lame Loading State ðŸ¤®...\" : this.lookup(metadataElement, this.entity)))))));\n  }\n  static get watchers() { return {\n    \"metadata\": [\"metadataUpdated\"],\n    \"entityId\": [\"entityIdUpdated\"]\n  }; }\n};\nArcgisHubMetadataList.style = arcgisHubMetadataListCss;\n\nexport { ArcgisHubMetadataList as arcgis_hub_metadata_list };\n"],"names":["ArcgisHubMetadataList","hostRef","registerInstance","this","entityId","metadata","entity","isLoading","newValue","console","log","JSON","parse","fetchEntity","elementDefinition","object","value","getProp","element","displayValue","format","Date","toISOString","Array","isArray","join","newId","fetchContent","title","h","Host","map","metadataElement","key","label","lookup","style"],"sourceRoot":""}