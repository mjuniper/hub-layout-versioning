{"version":3,"file":"static/js/51199.85883a2c.chunk.js","mappings":"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","sources":["../.yalc/@esri/hub-components/dist/esm/arcgis-item-icon.entry.js"],"sourcesContent":["import { r as registerInstance, a as getAssetPath, h, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport './index-4e91769f.js';\n\nconst arcgisItemIconCss = \":host{display:inline-block}.item-type-icon{width:16px;height:16px}\";\n\nconst ArcgisItemIcon = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    //--------------------------------------------------------------------------\n    //\n    //  Properties (public)\n    //\n    //--------------------------------------------------------------------------\n    /**\n     * Indicate if this is running in portal on-premises\n     */\n    this.isPortal = false;\n    /**\n     * The type for the item\n     */\n    this.itemType = '';\n    /**\n     * Comma-separated list of typeKeywords for the item\n     */\n    this.typeKeywords = '';\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  async componentWillLoad() {\n    // load messages for this component and expose methods to access and format them via this.intl\n    this.intl = await intlManager.loadIntlForComponent(this.el);\n  }\n  render() {\n    const iconName = this._getIcon();\n    const imgDir = './item-icons/';\n    const size = '16'; //for now we only support 16x16 pixel images\n    const iconUrl = getAssetPath(imgDir + iconName + size + '.png');\n    return (h(Host, { title: this.intl.t(this.itemType) }, h(\"img\", { class: 'item-type-icon', height: size, src: iconUrl, width: size })));\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods (async)\n  //\n  //--------------------------------------------------------------------------\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * This function was copied and slightly modified from the arcgis-portal-app.\n   *\n   * This will construct the path to the icon based on type and typeKeyword info.\n   *\n   * @returns Name of image to use\n   */\n  _getIcon() {\n    var _a;\n    const isPortal = this.isPortal, itemType = ((_a = this.itemType) === null || _a === void 0 ? void 0 : _a.toLowerCase()) || \"\", typeKeywords = this.typeKeywords || \"\";\n    let isHosted = false, isRouteLayer = false, isMarkupLayer = false, isTable = false, isSpatiotemporal = false, isRelational = false, imgName = \"\";\n    if (itemType.indexOf(\"service\") > 0 || itemType === \"feature collection\" || itemType === \"kml\" || itemType === \"wms\" || itemType === \"wmts\" || itemType === \"wfs\") {\n      isHosted = typeKeywords.indexOf(\"Hosted Service\") > -1;\n      if (itemType === \"feature service\" || itemType === \"feature collection\" || itemType === \"kml\" || itemType === \"wfs\") {\n        isTable = typeKeywords.indexOf(\"Table\") > -1;\n        isRouteLayer = typeKeywords.indexOf(\"Route Layer\") > -1;\n        isMarkupLayer = typeKeywords.indexOf(\"Markup\") > -1;\n        isSpatiotemporal = typeKeywords.indexOf(\"Spatiotemporal\") !== -1;\n        imgName = isSpatiotemporal && isTable ? \"spatiotemporaltable\" : (isTable ? \"table\" : (isRouteLayer ? \"routelayer\" : (isMarkupLayer ? \"markup\" : (isSpatiotemporal ? \"spatiotemporal\" : (isHosted ? \"featureshosted\" : \"features\")))));\n      }\n      else if (itemType === \"map service\" || itemType === \"wms\" || itemType === \"wmts\") {\n        isSpatiotemporal = typeKeywords.indexOf(\"Spatiotemporal\") !== -1;\n        isRelational = typeKeywords.indexOf(\"Relational\") !== -1;\n        if (isSpatiotemporal || isRelational) {\n          imgName = \"mapimages\";\n        }\n        else {\n          imgName = (isHosted || typeKeywords.indexOf(\"Tiled\") > -1 || itemType === \"wmts\") ? \"maptiles\" : \"mapimages\";\n        }\n      }\n      else if (itemType === \"scene service\") {\n        if (typeKeywords.indexOf(\"Line\") > -1) {\n          imgName = \"sceneweblayerline\";\n        }\n        else if (typeKeywords.indexOf(\"3DObject\") > -1) {\n          imgName = \"sceneweblayermultipatch\";\n        }\n        else if (typeKeywords.indexOf(\"Point\") > -1) {\n          imgName = \"sceneweblayerpoint\";\n        }\n        else if (typeKeywords.indexOf(\"IntegratedMesh\") > -1) {\n          imgName = \"sceneweblayermesh\";\n        }\n        else if (typeKeywords.indexOf(\"PointCloud\") > -1) {\n          imgName = \"sceneweblayerpointcloud\";\n        }\n        else if (typeKeywords.indexOf(\"Polygon\") > -1) {\n          imgName = \"sceneweblayerpolygon\";\n        }\n        else if (typeKeywords.indexOf(\"Building\") > -1) {\n          imgName = \"sceneweblayerbuilding\";\n        }\n        else {\n          imgName = \"sceneweblayer\";\n        }\n      }\n      else if (itemType === \"image service\") {\n        imgName = typeKeywords.indexOf(\"Elevation 3D Layer\") > -1 ? \"elevationlayer\" : (typeKeywords.indexOf(\"Tiled Imagery\") > -1 ? \"tiledimagerylayer\" : \"imagery\");\n      }\n      else if (itemType === \"stream service\") {\n        imgName = \"streamlayer\";\n      }\n      else if (itemType === \"vector tile service\") {\n        imgName = \"vectortile\";\n      }\n      else if (itemType === \"datastore catalog service\") {\n        imgName = \"datastorecollection\";\n      }\n      else if (itemType === \"geocoding service\") {\n        imgName = \"geocodeservice\";\n      }\n      else if (itemType === \"geoprocessing service\") {\n        imgName = (typeKeywords.indexOf(\"Web Tool\") > -1 && (isPortal)) ? \"tool\" : \"layers\";\n      }\n      else {\n        imgName = \"layers\";\n      }\n    }\n    else if (itemType === \"web map\" || itemType === \"cityengine web scene\") {\n      imgName = \"maps\";\n    }\n    else if (itemType === \"web scene\") {\n      imgName = typeKeywords.indexOf(\"ViewingMode-Local\") > -1 ? \"webscenelocal\" : \"websceneglobal\";\n    }\n    else if (itemType === \"web mapping application\" || itemType === \"mobile application\" || itemType === \"application\" ||\n      itemType === \"operation view\" || itemType === \"desktop application\") {\n      imgName = \"apps\";\n    }\n    else if (itemType === \"map document\" || itemType === \"map package\" || itemType === \"published map\" || itemType === \"scene document\" ||\n      itemType === \"globe document\" || itemType === \"basemap package\" || itemType === \"mobile basemap package\" || itemType === \"mobile map package\" ||\n      itemType === \"project package\" || itemType === \"project template\" || itemType === \"pro map\" || itemType === \"layout\" ||\n      (itemType === \"layer\" && typeKeywords.indexOf(\"ArcGIS Pro\") > -1) || (itemType === \"explorer map\" && typeKeywords.indexOf(\"Explorer Document\"))) {\n      imgName = \"mapsgray\";\n    }\n    else if (itemType === \"service definition\" || itemType === \"csv\" || itemType === \"shapefile\" || itemType === \"cad drawing\" || itemType === \"geojson\" || itemType === \"360 vr experience\" || itemType === \"netcdf\" || itemType === \"administrative report\") {\n      imgName = \"datafiles\";\n    }\n    else if (itemType === \"explorer add in\" || itemType === \"desktop add in\" || itemType === \"windows viewer add in\" || itemType === \"windows viewer configuration\") {\n      imgName = \"appsgray\";\n    }\n    else if (itemType === \"arcgis pro add in\" || itemType === \"arcgis pro configuration\") {\n      imgName = \"addindesktop\";\n    }\n    else if (itemType === \"rule package\" || itemType === \"file geodatabase\" || itemType === \"sqlite geodatabase\" || itemType === \"csv collection\" || itemType === \"kml collection\" ||\n      itemType === \"windows mobile package\" || itemType === \"map template\" || itemType === \"desktop application template\" || itemType === \"gml\" ||\n      itemType === \"arcpad package\" || itemType === \"code sample\" || itemType === \"form\" || itemType === \"document link\" ||\n      itemType === \"operations dashboard add in\" || itemType === \"rules package\" || itemType === \"image\" || itemType === \"workflow manager package\" ||\n      (itemType === \"explorer map\" && typeKeywords.indexOf(\"Explorer Mapping Application\") > -1 || typeKeywords.indexOf(\"Document\") > -1)) {\n      imgName = \"datafilesgray\";\n    }\n    else if (itemType === \"network analysis service\" || itemType === \"geoprocessing service\" ||\n      itemType === \"geodata service\" || itemType === \"geometry service\" || itemType === \"geoprocessing package\" ||\n      itemType === \"locator package\" || itemType === \"geoprocessing sample\" || itemType === \"workflow manager service\") {\n      imgName = \"toolsgray\";\n    }\n    else if (itemType === \"layer\" || itemType === \"layer package\" || itemType === \"explorer layer\") {\n      imgName = \"layersgray\";\n    }\n    else if (itemType === \"scene package\") {\n      imgName = \"scenepackage\";\n    }\n    else if (itemType === \"mobile scene package\") {\n      imgName = \"mobilescenepackage\";\n    }\n    else if (itemType === \"tile package\" || itemType === \"compact tile package\") {\n      imgName = \"tilepackage\";\n    }\n    else if (itemType === \"task file\") {\n      imgName = \"taskfile\";\n    }\n    else if (itemType === \"report template\") {\n      imgName = \"report-template\";\n    }\n    else if (itemType === \"statistical data collection\") {\n      imgName = \"statisticaldatacollection\";\n    }\n    else if (itemType === \"insights workbook\") {\n      imgName = \"workbook\";\n    }\n    else if (itemType === \"insights model\") {\n      imgName = \"insightsmodel\";\n    }\n    else if (itemType === \"insights page\") {\n      imgName = \"insightspage\";\n    }\n    else if (itemType === \"insights theme\") {\n      imgName = \"insightstheme\";\n    }\n    else if (itemType === \"hub initiative\") {\n      imgName = \"hubinitiative\";\n    }\n    else if (itemType === \"hub page\") {\n      imgName = \"hubpage\";\n    }\n    else if (itemType === \"hub site application\") {\n      imgName = \"hubsite\";\n    }\n    else if (itemType === \"hub event\") {\n      imgName = \"hubevent\";\n    }\n    else if (itemType === \"relational database connection\") {\n      imgName = \"relationaldatabaseconnection\";\n    }\n    else if (itemType === \"big data file share\") {\n      imgName = \"datastorecollection\";\n    }\n    else if (itemType === \"image collection\") {\n      imgName = \"imagecollection\";\n    }\n    else if (itemType === \"desktop style\") {\n      imgName = \"desktopstyle\";\n    }\n    else if (itemType === \"style\") {\n      imgName = \"style\";\n    }\n    else if (itemType === \"dashboard\") {\n      imgName = \"dashboard\";\n    }\n    else if (itemType === \"raster function template\") {\n      imgName = \"rasterprocessingtemplate\";\n    }\n    else if (itemType === \"vector tile package\") {\n      imgName = \"vectortilepackage\";\n    }\n    else if (itemType === \"ortho mapping project\") {\n      imgName = \"orthomappingproject\";\n    }\n    else if (itemType === \"ortho mapping template\") {\n      imgName = \"orthomappingtemplate\";\n    }\n    else if (itemType === \"solution\") {\n      imgName = \"solutions\";\n    }\n    else if (itemType === \"geopackage\") {\n      imgName = \"geopackage\";\n    }\n    else if (itemType === \"deep learning package\") {\n      imgName = \"deeplearningpackage\";\n    }\n    else if (itemType === \"real time analytic\") {\n      imgName = \"realtimeanalytics\";\n    }\n    else if (itemType === \"big data analytic\") {\n      imgName = \"bigdataanalytics\";\n    }\n    else if (itemType === \"feed\") {\n      imgName = \"feed\";\n    }\n    else if (itemType === \"excalibur imagery project\") {\n      imgName = \"excaliburimageryproject\";\n    }\n    else if (itemType === \"notebook\") {\n      imgName = \"notebook\";\n    }\n    else if (itemType === \"storymap\") {\n      imgName = \"storymap\";\n    }\n    else if (itemType === \"survey123 add in\") {\n      imgName = \"survey123addin\";\n    }\n    else if (itemType === \"mission\") {\n      imgName = \"mission\";\n    }\n    else if (itemType === \"mission report\") {\n      imgName = \"missionreport\";\n    }\n    else if (itemType === \"quickcapture project\") {\n      imgName = \"quickcaptureproject\";\n    }\n    else if (itemType === \"pro report\") {\n      imgName = \"proreport\";\n    }\n    else if (itemType === \"urban model\") {\n      imgName = \"urbanmodel\";\n    }\n    else if (itemType === \"web experience\") {\n      imgName = \"experiencebuilder\";\n    }\n    else if (itemType === \"web experience template\") {\n      imgName = \"webexperiencetemplate\";\n    }\n    else if (itemType === \"workflow\") {\n      imgName = \"workflow\";\n    }\n    else if (itemType === \"kernel gateway connection\") {\n      imgName = \"kernelgatewayconnection\";\n    }\n    else if (itemType === \"insights script\") {\n      imgName = \"insightsscript\";\n    }\n    else if (itemType === \"hub initiative template\") {\n      imgName = \"hubinitiativetemplate\";\n    }\n    else if (itemType === \"storymap theme\") {\n      imgName = \"storymaptheme\";\n    }\n    else if (itemType === \"group\") {\n      imgName = \"group\";\n    }\n    else {\n      imgName = \"maps\";\n    }\n    return imgName;\n  }\n  static get assetsDirs() { return [\"item-icons\", \"locales\"]; }\n  get el() { return getElement(this); }\n};\nArcgisItemIcon.style = arcgisItemIconCss;\n\nexport { ArcgisItemIcon as arcgis_item_icon };\n"],"names":["ArcgisItemIcon","hostRef","registerInstance","this","isPortal","itemType","typeKeywords","intlManager","el","intl","iconName","_getIcon","size","iconUrl","getAssetPath","imgDir","h","Host","title","t","class","height","src","width","_a","toLowerCase","isHosted","isRouteLayer","isMarkupLayer","isTable","isSpatiotemporal","isRelational","imgName","indexOf","getElement","style"],"sourceRoot":""}