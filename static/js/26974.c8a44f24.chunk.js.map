{"version":3,"file":"static/js/26974.c8a44f24.chunk.js","mappings":"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","sources":["../.yalc/@esri/hub-components/dist/esm/context-7d8f7366.js","../.yalc/@esri/hub-components/dist/esm/hub-field-input-gallery-picker.entry.js"],"sourcesContent":["const bind = (context, ...methodNames) => {\n  methodNames.forEach(methodName => {\n    if (typeof context[methodName] !== 'function') {\n      throw new Error(`Cannot bind context. ${methodName} must be a function`);\n    }\n    context[methodName] = context[methodName].bind(context);\n  });\n};\n\nexport { bind as b };\n","import { r as registerInstance, c as createEvent, h, F as Fragment, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport { h as hubSearch } from './HubGroups-a67cd255.js';\nimport { b as getContentTypeIcon } from './compose-cc2f466a.js';\nimport './index-4e91769f.js';\nimport './getPropertyMap-7bed72e1.js';\nimport './search-3af9e278.js';\nimport './generic-search-069e22da.js';\nimport './get-portal-url-423a76f5.js';\nimport './clean-url-be7c0879.js';\nimport './append-custom-params-fd9b7e72.js';\nimport './request-c15cc2af.js';\nimport './extent-0f42acfc.js';\nimport './get-prop-d82e4fa6.js';\nimport './util-2150bd9e.js';\nimport './create-7cf3c372.js';\nimport './tslib.es6-3669ad41.js';\nimport './get-f2cd18e7.js';\nimport './get-with-default-6db049d8.js';\nimport './OperationError-85fd80c7.js';\nimport './get-portal-api-url-2391fbac.js';\nimport './update-fec93fc5.js';\nimport './fail-safe-1c23dad8.js';\nimport './set-prop-c51a6d0c.js';\nimport './ProjectBusinessRules-bb655b17.js';\nimport './get-item-thumbnail-url-7608a737.js';\nimport './utils-f1c97eba.js';\nimport './UserSession-d3a97494.js';\nimport './_internal-f8d6239a.js';\nimport './helpers-a80c0291.js';\nimport './_enrichments-9747f1f3.js';\nimport './getPortalBaseFromOrgUrl-6a5781aa.js';\nimport './get-portal-06f7947b.js';\nimport './getService-49b539e3.js';\nimport './tslib.es6-b2e8cdb8.js';\nimport './HubSites-36599d40.js';\nimport './is-guid-8127621d.js';\nimport './SiteBusinessRules-05d0a02f.js';\nimport './search-users-5cfad933.js';\nimport './request-be948455.js';\nimport './api-3826163b.js';\nimport './get-859a2960.js';\nimport './get-structured-license-d1e63636.js';\n\n/**\n * Build an IQuery based on the IGallerySelection and EntityType provided\n * @param gallerySelection gallery selection as an IGallerySelection object\n * @returns query as an IQuery\n */\nfunction buildQueryFromGallerySelection(gallerySelection, entityType) {\n  return {\n    targetEntity: entityType,\n    filters: [\n      {\n        operation: \"OR\",\n        predicates: [\n          {\n            id: gallerySelection[entityType]\n          }\n        ]\n      }\n    ]\n  };\n}\n\nconst galleryPickerCss = \".gallery-picker__selected-entities{margin-bottom:1.5rem}calcite-value-list-item calcite-icon:first-child{margin-top:10px;margin-left:0.75rem}calcite-value-list-item{--calcite-font-size--2:var(--calcite-font-size--1)}\";\n\nconst GalleryPicker = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisConfigurationEditorFieldInputChange = createEvent(this, \"arcgisConfigurationEditorFieldInputChange\", 7);\n    bind(this, 'handleGalleryPickerSelectionUpdate', 'handleOpenGalleryPicker', 'handleGallerySelectionRemove');\n  }\n  handleGalleryPickerClose() {\n    this.isOpen = false;\n  }\n  async fetchEntities() {\n    const gallerySelection = this.convertEntityIdsToGallerySelection();\n    this.selectedEntities = this.context && await this.fetchGallerySelectionEntities(gallerySelection);\n  }\n  async componentWillLoad() {\n    await this.fetchEntities();\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n  }\n  get targetEntity() {\n    var _a, _b;\n    return ((_b = (_a = this.params.uiSchema) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.targetEntity) || 'item';\n  }\n  get limit() {\n    var _a, _b;\n    return (_b = (_a = this.params.uiSchema) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.limit;\n  }\n  /**\n   * Convert the list of entity IDs to an IGallerySelection\n   * based on the entity type\n   */\n  convertEntityIdsToGallerySelection() {\n    return { [this.targetEntity]: this.params.value };\n  }\n  /**\n   * Convert the IGallerySelection received from the Hub Gallery Picker\n   * to an array of entity IDs based on the entity type\n   */\n  convertGallerySelectionToEntityIds(gallerySelection) {\n    return gallerySelection[this.targetEntity];\n  }\n  async handleGalleryPickerSelectionUpdate(evt) {\n    this.selectedEntities = await this.fetchGallerySelectionEntities(evt.detail);\n    const ids = this.convertGallerySelectionToEntityIds(evt.detail);\n    this.arcgisConfigurationEditorFieldInputChange.emit(ids);\n    this.isOpen = false;\n  }\n  async fetchGallerySelectionEntities(gallerySelection) {\n    var _a;\n    const query = buildQueryFromGallerySelection(gallerySelection, this.targetEntity);\n    const hubSearchOptions = { requestOptions: (_a = this.context) === null || _a === void 0 ? void 0 : _a.hubRequestOptions };\n    let results = [];\n    try {\n      ({ results } = await hubSearch(query, hubSearchOptions));\n      // TODO: move this logic to a util or somewhere so it can be reused\n      // sort the results according to the way it's sorted\n      // but if it is not in the array, put it at the end\n      const sortByIds = gallerySelection[this.targetEntity];\n      results = results.slice().sort((a, b) => {\n        const aIdx = sortByIds.includes(a.id) ? sortByIds.indexOf(a.id) : Infinity;\n        const bIdx = sortByIds.includes(b.id) ? sortByIds.indexOf(b.id) : Infinity;\n        return aIdx - bIdx;\n      });\n    }\n    catch (error) {\n      console.error(\"Unable to fetch selected entities:\", error);\n    }\n    finally {\n      this.gallerySelection = gallerySelection;\n    }\n    return results;\n  }\n  handleOpenGalleryPicker() {\n    this.isOpen = true;\n  }\n  handleGallerySelectionRemove(evt) {\n    const el = evt.target;\n    const entityIdx = Number(el.getAttribute('data-index'));\n    const { id } = this.selectedEntities[entityIdx];\n    this.selectedEntities = [\n      ...this.selectedEntities.slice(0, entityIdx),\n      ...this.selectedEntities.slice(entityIdx + 1)\n    ];\n    this.isOpen = false;\n    this.removeEntityFromGallerySelection(id);\n    const ids = this.convertGallerySelectionToEntityIds(this.gallerySelection);\n    this.arcgisConfigurationEditorFieldInputChange.emit(ids);\n  }\n  removeEntityFromGallerySelection(entityId) {\n    this.gallerySelection[this.targetEntity] = this.gallerySelection[this.targetEntity]\n      .filter(id => id !== entityId);\n  }\n  handleSelectEntitiesOrderChange(evt) {\n    this.gallerySelection[this.targetEntity] = evt.detail;\n    this.selectedEntities = this.gallerySelection[this.targetEntity]\n      .reduce((accum, id) => {\n      this.selectedEntities.forEach(entity => {\n        if (entity.id === id) {\n          accum.push(entity);\n        }\n      });\n      return accum;\n    }, []);\n    const ids = this.convertGallerySelectionToEntityIds(this.gallerySelection);\n    this.arcgisConfigurationEditorFieldInputChange.emit(ids);\n  }\n  renderSelectedEntities(entities) {\n    return (h(\"calcite-value-list\", { class: \"gallery-picker__selected-entities\", \"drag-enabled\": true }, entities.map((entity, idx) => this.renderEntity(entity, idx))));\n  }\n  /**\n   * Get the icon for the content type\n   */\n  getTypeIcon(type) {\n    return type ? getContentTypeIcon(type) : \"file\";\n  }\n  renderEntity(entity, idx) {\n    const { updatedDate, owner, id, name, type } = entity;\n    return (h(\"calcite-value-list-item\", { \"data-index\": idx, description: `${owner} | ${this.intl.t('updated')} ${updatedDate.toLocaleDateString()}`, key: id, label: name, nonInteractive: true, value: id }, h(\"calcite-icon\", { icon: this.getTypeIcon(type), scale: \"l\", slot: \"actions-start\" }), h(\"calcite-action\", { \"data-index\": idx, icon: \"trash\", onClick: this.handleGallerySelectionRemove, slot: \"actions-end\", text: \"\" })));\n  }\n  renderGalleryPickerButton() {\n    return (h(Fragment, null, h(\"calcite-button\", { appearance: \"outline\", class: \"gallery-picker__select\", color: \"blue\", onClick: this.handleOpenGalleryPicker, round: true }, this.intl.t('selectContent'))));\n  }\n  renderGalleryPicker() {\n    var _a, _b, _c, _d, _e, _f;\n    return (h(\"arcgis-hub-gallery-picker\", { catalogs: (_b = (_a = this.params.uiSchema) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.catalogs, context: this.context, facets: (_d = (_c = this.params.uiSchema) === null || _c === void 0 ? void 0 : _c.options) === null || _d === void 0 ? void 0 : _d.facets, gallerySelection: this.gallerySelection, limit: this.limit, modalTitle: this.intl.t('selectContent'), open: this.isOpen, showSelection: (_f = (_e = this.params.uiSchema) === null || _e === void 0 ? void 0 : _e.options) === null || _f === void 0 ? void 0 : _f.showSelection }));\n  }\n  render() {\n    var _a;\n    return (h(Host, null, !!((_a = this.selectedEntities) === null || _a === void 0 ? void 0 : _a.length) && this.renderSelectedEntities(this.selectedEntities), this.renderGalleryPickerButton(), this.isOpen && this.renderGalleryPicker()));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"context\": [\"fetchEntities\"]\n  }; }\n};\nGalleryPicker.style = galleryPickerCss;\n\nexport { GalleryPicker as hub_field_input_gallery_picker };\n"],"names":["bind","context","methodNames","forEach","methodName","Error","buildQueryFromGallerySelection","gallerySelection","entityType","targetEntity","filters","operation","predicates","id","GalleryPicker","hostRef","registerInstance","this","arcgisConfigurationEditorFieldInputChange","createEvent","isOpen","convertEntityIdsToGallerySelection","fetchGallerySelectionEntities","selectedEntities","fetchEntities","intlManager","element","intl","_a","_b","params","uiSchema","options","limit","value","evt","detail","ids","convertGallerySelectionToEntityIds","emit","query","hubSearchOptions","requestOptions","hubRequestOptions","results","hubSearch","sortByIds","slice","sort","a","b","includes","indexOf","Infinity","console","error","el","target","entityIdx","Number","getAttribute","removeEntityFromGallerySelection","entityId","filter","reduce","accum","entity","push","entities","h","class","map","idx","renderEntity","type","getContentTypeIcon","updatedDate","owner","name","description","t","toLocaleDateString","key","label","nonInteractive","icon","getTypeIcon","scale","slot","onClick","handleGallerySelectionRemove","text","Fragment","appearance","color","handleOpenGalleryPicker","round","_c","_d","_e","_f","catalogs","facets","modalTitle","open","showSelection","Host","length","renderSelectedEntities","renderGalleryPickerButton","renderGalleryPicker","getElement","style"],"sourceRoot":""}