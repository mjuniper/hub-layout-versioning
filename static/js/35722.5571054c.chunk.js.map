{"version":3,"file":"static/js/35722.5571054c.chunk.js","mappings":"sKAAA,IAAMA,EAAO,SAACC,GAA4B,2BAAhBC,EAAW,iCAAXA,EAAW,kBACnCA,EAAYC,SAAQ,SAAAC,GAClB,GAAmC,oBAAxBH,EAAQG,GACjB,MAAM,IAAIC,MAAM,wBAAD,OAAyBD,EAAU,wBAEpDH,EAAQG,GAAcH,EAAQG,GAAYJ,KAAKC,EACjD,GACF,C,wBCHA,SAASK,EAAQC,EAAKC,GAClB,OAAOA,EAAKC,MAAM,KAAKC,QAAO,SAAUC,EAAMC,GAE1C,OAAOD,EAAOA,EAAKC,QAAQC,CAC/B,GAAGN,EACP,C,sGCFMO,EAAW,SAACC,EAAiBC,EAAGC,GACpC,OAA6BA,GAAeX,EAAAA,EAAAA,GAAQS,EAAiBE,GAAgBF,IAAoB,CAAC,EAAlGG,EAAQ,EAARA,SACJC,EADmB,EAALC,MAKlB,OAHIF,IACFC,EAASH,EAAEE,IAENC,CACT,C,oJCPME,EAAW,WACf,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,2CAA4CC,EAAAA,EAAAA,GAAYF,KAAM,4CAA6C,IAChHxB,EAAAA,EAAAA,GAAKwB,KAAM,WAAY,mCACzB,CA6BC,OA7BA,qCACD,WACE,OAAOV,EAAAA,EAAAA,GAASU,KAAKG,OAAOC,SAAUJ,KAAKG,OAAOX,EAAG,0BACvD,GAAC,+BACD,WACE,IAAIa,EAAIC,EAAIC,EAAIC,GAC2E,QAAtFF,EAAqC,QAA/BD,EAAKL,KAAKG,OAAOC,gBAA6B,IAAPC,OAAgB,EAASA,EAAGI,eAA4B,IAAPH,OAAgB,EAASA,EAAGI,UAC7HV,KAAKU,OAAgG,QAAtFF,EAAqC,QAA/BD,EAAKP,KAAKG,OAAOC,gBAA6B,IAAPG,OAAgB,EAASA,EAAGE,eAA4B,IAAPD,OAAgB,EAASA,EAAGE,OAE7I,GAAC,8CACD,SAAiCC,GAC/BX,KAAKU,OAASC,EAAIC,OAAOC,OACzBb,KAAKC,0CAA0Ca,KAAKH,EAAIC,OAC1D,GAAC,sBACD,WACEZ,KAAKU,YAASrB,EACdW,KAAKC,0CAA0Ca,KAAK,CAClDC,UAAM1B,EACNwB,YAAQxB,EACR2B,cAAU3B,EACV4B,YAAQ5B,GAEZ,GAAC,oBACD,WACE,IAAIgB,EACEa,EAA4C,QAA/Bb,EAAKL,KAAKG,OAAOC,gBAA6B,IAAPC,OAAgB,EAASA,EAAGI,QACtF,OAAOT,KAAKU,QACTS,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,kBAAmBD,EAAAA,EAAAA,GAAE,MAAO,CAAEE,IAAKrB,KAAKU,UAAWS,EAAAA,EAAAA,GAAE,iBAAkB,CAAEG,WAAY,UAAWC,UAAW,QAASC,QAASxB,KAAKyB,aAClJN,EAAAA,EAAAA,GAAE,0BAA2B,CAAEO,YAA2B,OAAdR,QAAoC,IAAdA,OAAuB,EAASA,EAAUQ,YAAaC,eAA8B,OAAdT,QAAoC,IAAdA,OAAuB,EAASA,EAAUS,eAAgBC,OAAsB,OAAdV,QAAoC,IAAdA,OAAuB,EAASA,EAAUU,OAAQC,QAAQ,EAAMC,UAAyB,OAAdZ,QAAoC,IAAdA,OAAuB,EAASA,EAAUY,UAAWC,SAAwB,OAAdb,QAAoC,IAAdA,OAAuB,EAASA,EAAUa,SAAUC,wBAAyBhC,KAAKiC,iCAAkCC,gBAAiBlC,KAAKkC,iBAC9jB,KAAC,EAlCc,GAoCjBrC,EAAYsC,MAtCW,iH","sources":["../node_modules/@esri/hub-components/dist/esm/context-7d8f7366.js","../node_modules/@esri/hub-components/dist/esm/get-prop-d82e4fa6.js","../node_modules/@esri/hub-components/dist/esm/getLabel-23d1a78d.js","../node_modules/@esri/hub-components/dist/esm/hub-field-input-image-picker.entry.js"],"sourcesContent":["const bind = (context, ...methodNames) => {\n  methodNames.forEach(methodName => {\n    if (typeof context[methodName] !== 'function') {\n      throw new Error(`Cannot bind context. ${methodName} must be a function`);\n    }\n    context[methodName] = context[methodName].bind(context);\n  });\n};\n\nexport { bind as b };\n","/**\n * Get a property out of a deeply nested object\n * Does not handle anything but nested object graph\n */\nfunction getProp(obj, path) {\n    return path.split(\".\").reduce(function (prev, curr) {\n        /* istanbul ignore next no need to test undefined scenario */\n        return prev ? prev[curr] : undefined;\n    }, obj);\n}\n\nexport { getProp as g };\n","import { g as getProp } from './get-prop-d82e4fa6.js';\n\n/**\n * function to return the translated value of uiSchema element.\n * If a translation function or labelKey are not provided, we fall\n * back to the provided label\n */\nconst getLabel = (uiSchemaElement, t, propertyPath) => {\n  const { labelKey, label } = (propertyPath ? getProp(uiSchemaElement, propertyPath) : uiSchemaElement) || {};\n  let result = label;\n  if (labelKey) {\n    result = t(labelKey);\n  }\n  return result;\n};\n\nexport { getLabel as g };\n","import { r as registerInstance, c as createEvent, h } from './index-0d95d9d4.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { g as getLabel } from './getLabel-23d1a78d.js';\nimport './get-prop-d82e4fa6.js';\n\nconst imagePickerCss = \".image-wrapper{display:flex;align-items:flex-end}.image-wrapper calcite-button{height:2rem;padding-left:0.5rem}\";\n\nconst ImagePicker = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisConfigurationEditorFieldInputChange = createEvent(this, \"arcgisConfigurationEditorFieldInputChange\", 7);\n    bind(this, 'clearSrc', 'handleArcgisInputImageUploadSave');\n  }\n  get sizeDescription() {\n    return getLabel(this.params.uiSchema, this.params.t, 'options.sizeDescription');\n  }\n  componentWillLoad() {\n    var _a, _b, _c, _d;\n    if ((_b = (_a = this.params.uiSchema) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.imgSrc) {\n      this.imgSrc = (_d = (_c = this.params.uiSchema) === null || _c === void 0 ? void 0 : _c.options) === null || _d === void 0 ? void 0 : _d.imgSrc;\n    }\n  }\n  handleArcgisInputImageUploadSave(evt) {\n    this.imgSrc = evt.detail.base64;\n    this.arcgisConfigurationEditorFieldInputChange.emit(evt.detail);\n  }\n  clearSrc() {\n    this.imgSrc = undefined;\n    this.arcgisConfigurationEditorFieldInputChange.emit({\n      blob: undefined,\n      base64: undefined,\n      fileName: undefined,\n      format: undefined,\n    });\n  }\n  render() {\n    var _a;\n    const uiOptions = (_a = this.params.uiSchema) === null || _a === void 0 ? void 0 : _a.options;\n    return this.imgSrc ?\n      (h(\"div\", { class: \"image-wrapper\" }, h(\"img\", { src: this.imgSrc }), h(\"calcite-button\", { appearance: \"outline\", iconStart: \"trash\", onClick: this.clearSrc })))\n      : (h(\"arcgis-hub-image-upload\", { aspectRatio: uiOptions === null || uiOptions === void 0 ? void 0 : uiOptions.aspectRatio, fillBackground: uiOptions === null || uiOptions === void 0 ? void 0 : uiOptions.fillBackground, height: uiOptions === null || uiOptions === void 0 ? void 0 : uiOptions.height, inline: true, maxHeight: uiOptions === null || uiOptions === void 0 ? void 0 : uiOptions.maxHeight, maxWidth: uiOptions === null || uiOptions === void 0 ? void 0 : uiOptions.maxWidth, onArcgisImageUploadSave: this.handleArcgisInputImageUploadSave, sizeDescription: this.sizeDescription }));\n  }\n};\nImagePicker.style = imagePickerCss;\n\nexport { ImagePicker as hub_field_input_image_picker };\n"],"names":["bind","context","methodNames","forEach","methodName","Error","getProp","obj","path","split","reduce","prev","curr","undefined","getLabel","uiSchemaElement","t","propertyPath","labelKey","result","label","ImagePicker","hostRef","registerInstance","this","arcgisConfigurationEditorFieldInputChange","createEvent","params","uiSchema","_a","_b","_c","_d","options","imgSrc","evt","detail","base64","emit","blob","fileName","format","uiOptions","h","class","src","appearance","iconStart","onClick","clearSrc","aspectRatio","fillBackground","height","inline","maxHeight","maxWidth","onArcgisImageUploadSave","handleArcgisInputImageUploadSave","sizeDescription","style"],"sourceRoot":""}