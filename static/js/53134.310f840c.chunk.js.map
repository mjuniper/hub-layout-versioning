{"version":3,"file":"static/js/53134.310f840c.chunk.js","mappings":"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","sources":["../.yalc/@esri/hub-components/dist/esm/append-custom-params-fd9b7e72.js","../.yalc/@esri/hub-components/dist/esm/arcgis-hub-item-resource-viewer.entry.js","../.yalc/@esri/hub-components/dist/esm/clean-url-be7c0879.js","../.yalc/@esri/hub-components/dist/esm/get-f2cd18e7.js","../.yalc/@esri/hub-components/dist/esm/get-portal-06f7947b.js","../.yalc/@esri/hub-components/dist/esm/get-portal-url-423a76f5.js","../.yalc/@esri/hub-components/dist/esm/get-prop-d82e4fa6.js","../.yalc/@esri/hub-components/dist/esm/get-with-default-6db049d8.js","../.yalc/@esri/hub-components/dist/esm/getPortalBaseFromOrgUrl-6a5781aa.js","../.yalc/@esri/hub-components/dist/esm/tslib.es6-3669ad41.js","../.yalc/@esri/hub-components/dist/esm/util-2150bd9e.js"],"sourcesContent":["import { _ as __assign } from './request-c15cc2af.js';\n\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper for methods with lots of first order request options to pass through as request parameters.\n */\nfunction appendCustomParams(customOptions, keys, baseOptions) {\n    var requestOptionsKeys = [\n        \"params\",\n        \"httpMethod\",\n        \"rawResponse\",\n        \"authentication\",\n        \"portal\",\n        \"fetch\",\n        \"maxUrlLength\",\n        \"headers\"\n    ];\n    var options = __assign(__assign({ params: {} }, baseOptions), customOptions);\n    // merge all keys in customOptions into options.params\n    options.params = keys.reduce(function (value, key) {\n        if (customOptions[key] || typeof customOptions[key] === \"boolean\") {\n            value[key] = customOptions[key];\n        }\n        return value;\n    }, options.params);\n    // now remove all properties in options that don't exist in IRequestOptions\n    return requestOptionsKeys.reduce(function (value, key) {\n        if (options[key]) {\n            value[key] = options[key];\n        }\n        return value;\n    }, {});\n}\n\nexport { appendCustomParams as a };\n","import { r as registerInstance, h, g as getElement, H as Host } from './index-0d95d9d4.js';\nimport { a as Logger, L as Level } from './logger-0c7a68de.js';\nimport { A as ArcGISContextManager } from './ArcGISContextManager-546abc28.js';\nimport { f as getItemResources } from './get-f2cd18e7.js';\nimport { g as getProp } from './get-prop-d82e4fa6.js';\nimport './get-with-default-6db049d8.js';\nimport './getPortalBaseFromOrgUrl-6a5781aa.js';\nimport './tslib.es6-3669ad41.js';\nimport './get-portal-url-423a76f5.js';\nimport './clean-url-be7c0879.js';\nimport './request-c15cc2af.js';\nimport './util-2150bd9e.js';\nimport './get-portal-06f7947b.js';\nimport './append-custom-params-fd9b7e72.js';\n\n/*\n * This util is temporarily copied from hub-components in opendata-ui for dev purposes\n */\nconst UNITS = [\n  'B',\n  'kB',\n  'MB',\n  'GB',\n  'TB',\n  'PB',\n  'EB',\n  'ZB',\n  'YB'\n];\n/**\n * Convert the given byte number into a human-readable format.\n * @param  {number} number       byte number\n * @param  {Object} [options={}] options\n * @param  {string} [options.unit]  output unit\n * @param  {string} [options.locale]  locale string\n * @param  {number} [options.round=2] max decimal digits for rounding\n * @return {string}              human-readable string\n */\nfunction formatBytes(number, options = {}) {\n  let exponent;\n  if (number === 0) {\n    exponent = UNITS.indexOf(options.unit || 'kB');\n  }\n  else if (options.unit) {\n    exponent = UNITS.indexOf(options.unit);\n  }\n  else {\n    exponent = Math.min(Math.floor(Math.log10(number) / 3), UNITS.length - 1);\n  }\n  const round = Number.isInteger(options.round) ? options.round : 2;\n  const factor = Math.pow(10, round);\n  number = number / Math.pow(1000, exponent);\n  number = Math.round(number * factor) / factor;\n  const numberString = number.toLocaleString(options.locale);\n  return numberString + ' ' + UNITS[exponent];\n}\n\nconst arcgisHubItemResourceViewerCss = \":host([layout='grid']){display:grid;gap:0.5rem;grid-template-columns:repeat(auto-fill, minmax(max(400px, (100% - (4 - 1) * 0.5rem) / 4), 1fr))}:host([layout='list']) calcite-card{margin-bottom:0.5rem}span[slot=\\\"thumbnail\\\"] img{width:100%}\";\n\nLogger.setLogLevel(Level.info);\nconst allowedResourceTypes = ['jpg', 'jpeg', 'gif', 'png'];\nconst ArcgisHubItemResourceViewer = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Portal url. If `context` is not passed in,\n     * then a `context` will be created using the portal\n     * value.\n     * Should not have /sharing/rest on the end\n     * defaults to https://www.arcgis.com\n     */\n    this.portal = \"https://www.arcgis.com\";\n    this.layout = 'list';\n  }\n  onitemIdChanged(newVal) {\n    Logger.error(`${newVal} changed`);\n    this.fetchResources(this.itemId);\n  }\n  async onPortalChange() {\n    // Update the context by creating a context manager and getting the context\n    const ctx = await ArcGISContextManager.create({ portalUrl: this.portal });\n    this.context = ctx.context;\n    console.log(`this.context: ${this.context}`);\n    console.log(`this.portal: ${this.portal}`);\n    // changing the context should fire the watch for that property thus re-running the search\n  }\n  getImageUrl(file) {\n    const id = this.itemId;\n    const portalSharingUrl = this.context.sharingApiUrl;\n    return `${portalSharingUrl}/content/items/${id}/resources/${file}`;\n  }\n  /**\n   * Convert the unix timestamp to 'month day, year' format\n   */\n  parseCreatedDate(timestamp) {\n    const dateFormatOptions = { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit', hour12: true };\n    this.dateTimeFormatter = new Intl.DateTimeFormat('en-us', dateFormatOptions);\n    return this.dateTimeFormatter.format(new Date(timestamp));\n  }\n  /**\n   * Fetch the resources of itemId\n   */\n  async fetchResources(id) {\n    try {\n      const portalSharingUrl = this.context.sharingApiUrl;\n      const response = await getItemResources(id, { portal: portalSharingUrl });\n      this.resources = response.resources;\n    }\n    catch (error) {\n      const msg = getProp(error, 'message');\n      Logger.error(msg);\n      this.resources = [];\n    }\n  }\n  async componentWillLoad() {\n    if (!this.itemId) {\n      return;\n    }\n    if (!this.context) {\n      const ctx = await ArcGISContextManager.create({ portalUrl: this.portal });\n      this.context = ctx.context;\n      console.log(`this.context.portalUrl: ${this.context.portalUrl}`);\n      console.log(`this.portal: ${this.portal}`);\n    }\n    const id = this.itemId;\n    return this.fetchResources(id);\n  }\n  renderThumbnail(layout, imageUrl) {\n    let result;\n    if (layout === 'grid') {\n      result = h(\"span\", { slot: \"thumbnail\" }, h(\"img\", { alt: \"\", src: this.getImageUrl(imageUrl) }));\n    }\n    return result;\n  }\n  render() {\n    let imageResources;\n    if (this.resources) {\n      const imageResourcesFiltered = this.resources.filter(element => allowedResourceTypes.includes(element.resource.split('.').pop()));\n      imageResources = imageResourcesFiltered.map(res => {\n        return (h(\"calcite-card\", { selectable: this.selectable }, this.renderThumbnail(this.layout, res.resource), h(\"span\", { slot: \"title\" }, res.resource), h(\"div\", { slot: \"footer-leading\" }, h(\"div\", null, \"Created: \", this.parseCreatedDate(res.created)), h(\"div\", null, \"size: \", formatBytes(res.size)))));\n      });\n    }\n    return (h(Host, null, imageResources));\n  }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"itemId\": [\"onitemIdChanged\", \"fetchResources\"],\n    \"portal\": [\"onPortalChange\"]\n  }; }\n};\nArcgisHubItemResourceViewer.style = arcgisHubItemResourceViewerCss;\n\nexport { ArcgisHubItemResourceViewer as arcgis_hub_item_resource_viewer };\n","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper method to ensure that user supplied urls don't include whitespace or a trailing slash.\n */\nfunction cleanUrl(url) {\n    // Guard so we don't try to trim something that's not a string\n    if (typeof url !== \"string\") {\n        return url;\n    }\n    // trim leading and trailing spaces, but not spaces inside the url\n    url = url.trim();\n    // remove the trailing slash to the url if one was included\n    if (url[url.length - 1] === \"/\") {\n        url = url.slice(0, -1);\n    }\n    return url;\n}\n\nexport { cleanUrl as c };\n","import { _ as __assign } from './tslib.es6-3669ad41.js';\nimport { g as getPortalUrl } from './get-portal-url-423a76f5.js';\nimport { r as request } from './request-c15cc2af.js';\nimport { a as appendCustomParams } from './append-custom-params-fd9b7e72.js';\n\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Serialize an item and its data into a json format accepted by the Portal API for create and update operations\n *\n * @param item Item to be serialized\n * @returns a formatted json object to be sent to Portal\n */\nfunction serializeItem(item) {\n    // create a clone so we're not messing with the original\n    var clone = JSON.parse(JSON.stringify(item));\n    // binary data needs POSTed as a `file`\n    // JSON object literals should be passed as `text`.\n    if (clone.data) {\n        (typeof Blob !== \"undefined\" && item.data instanceof Blob) ||\n            // Node.js doesn't implement Blob\n            item.data.constructor.name === \"ReadStream\"\n            ? (clone.file = item.data)\n            : (clone.text = item.data);\n        delete clone.data;\n    }\n    return clone;\n}\n/**\n * `requestOptions.owner` is given priority, `requestOptions.item.owner` will be checked next. If neither are present, `authentication.getUserName()` will be used instead.\n */\nfunction determineOwner(requestOptions) {\n    if (requestOptions.owner) {\n        return Promise.resolve(requestOptions.owner);\n    }\n    else if (requestOptions.item && requestOptions.item.owner) {\n        return Promise.resolve(requestOptions.item.owner);\n    }\n    else if (requestOptions.authentication &&\n        requestOptions.authentication.getUsername) {\n        return requestOptions.authentication.getUsername();\n    }\n    else {\n        return Promise.reject(new Error(\"Could not determine the owner of this item. Pass the `owner`, `item.owner`, or `authentication` option.\"));\n    }\n}\n/**\n * checks if the extent is a valid BBox (2 element array of coordinate pair arrays)\n * @param extent\n * @returns\n */\nfunction isBBox(extent) {\n    return (Array.isArray(extent) &&\n        Array.isArray(extent[0]) &&\n        Array.isArray(extent[1]));\n}\n/**\n * Given a Bbox, convert it to a string. Some api endpoints expect a string\n *\n * @param {BBox} extent\n * @return {*}  {string}\n */\nfunction bboxToString(extent) {\n    return extent.join(\",\");\n}\n\n// eslint-disable-next-line no-control-regex\nvar CONTROL_CHAR_MATCHER = /[\\x00-\\x1F\\x7F-\\x9F\\xA0]/g;\n/**\n * Returns a new string with all control characters removed.\n *\n * Doesn't remove characters from input string.\n *\n * @param str - the string to scrub\n */\nfunction scrubControlChars(str) {\n    return str.replace(CONTROL_CHAR_MATCHER, \"\");\n}\n\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * ```\n * import { getItem } from \"@esri/arcgis-rest-portal\";\n * //\n * getItem(\"ae7\")\n *   .then(response);\n * // or\n * getItem(\"ae7\", { authentication })\n *   .then(response)\n * ```\n * Get an item by id. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item.htm) for more information.\n *\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction getItem(id, requestOptions) {\n    var url = getItemBaseUrl(id, requestOptions);\n    // default to a GET request\n    var options = __assign({ httpMethod: \"GET\" }, requestOptions);\n    return request(url, options);\n}\n/**\n * Get the fully qualified base URL to the REST end point for an item.\n * @param id Item Id\n * @param portalUrlOrRequestOptions a portal URL or request options\n * @returns URL to the item's REST end point, defaults to `https://www.arcgis.com/sharing/rest/content/items/{id}`\n */\nvar getItemBaseUrl = function (id, portalUrlOrRequestOptions) {\n    var portalUrl = typeof portalUrlOrRequestOptions === \"string\"\n        ? portalUrlOrRequestOptions\n        : getPortalUrl(portalUrlOrRequestOptions);\n    return portalUrl + \"/content/items/\" + id;\n};\n/**\n * ```\n * import { getItemData } from \"@esri/arcgis-rest-portal\";\n * //\n * getItemData(\"ae7\")\n *   .then(response)\n * // or\n * getItemData(\"ae7\", { authentication })\n *   .then(response)\n * ```\n * Get the /data for an item. If no data exists, returns `undefined`. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item-data.htm) for more information.\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the json data for the item.\n */\nfunction getItemData(id, requestOptions) {\n    var url = getItemBaseUrl(id, requestOptions) + \"/data\";\n    // default to a GET request\n    var options = __assign({ httpMethod: \"GET\", params: {} }, requestOptions);\n    if (options.file) {\n        options.params.f = null;\n    }\n    return request(url, options).catch(function (err) {\n        /* if the item doesn't include data, the response will be empty\n           and the internal call to response.json() will fail */\n        var emptyResponseErr = RegExp(/The string did not match the expected pattern|(Unexpected end of (JSON input|data at line 1 column 1))/i);\n        /* istanbul ignore else */\n        if (emptyResponseErr.test(err.message)) {\n            return;\n        }\n        else\n            throw err;\n    });\n}\n/**\n * Get the resources associated with an item\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to get some item resources.\n */\nfunction getItemResources(id, requestOptions) {\n    var url = getItemBaseUrl(id, requestOptions) + \"/resources\";\n    // Mix in num:1000 with any user supplied params\n    // Key thing - we don't want to mutate the passed in requestOptions\n    // as that may be used in other (subsequent) calls in the course\n    // of a long promise chains\n    var options = __assign({}, requestOptions);\n    options.params = __assign({ num: 1000 }, options.params);\n    return request(url, options);\n}\n/**\n * ```js\n * import { getItemResource } from \"@esri/arcgis-rest-portal\";\n *\n * // Parses contents as blob by default\n * getItemResource(\"3ef\", { fileName: \"resource.jpg\", ...})\n *  .then(resourceContents => {});\n *\n * // Can override parse method\n * getItemResource(\"3ef\", { fileName: \"resource.json\", readAs: 'json', ...})\n *  .then(resourceContents => {});\n *\n * // Get the response object instead\n * getItemResource(\"3ef\",{ rawResponse: true, fileName: \"resource.json\" })\n *  .then(response => {})\n * ```\n * Fetches an item resource and optionally parses it to the correct format.\n *\n * Note: provides JSON parse error protection by sanitizing out any unescaped control\n * characters before parsing that would otherwise cause an error to be thrown\n *\n * @param {string} itemId\n * @param {IGetItemResourceOptions} requestOptions\n */\nfunction getItemResource(itemId, requestOptions) {\n    var readAs = requestOptions.readAs || 'blob';\n    return getItemFile(itemId, \"/resources/\" + requestOptions.fileName, readAs, requestOptions);\n}\n/**\n * ```js\n * import { getItemGroups } from \"@esri/arcgis-rest-portal\";\n * //\n * getItemGroups(\"30e5fe3149c34df1ba922e6f5bbf808f\")\n *   .then(response)\n * ```\n * Lists the groups of which the item is a part, only showing the groups that the calling user can access. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/groups.htm) for more information.\n *\n * @param id - The Id of the item to query group association for.\n * @param requestOptions - Options for the request\n * @returns A Promise to get some item groups.\n */\nfunction getItemGroups(id, requestOptions) {\n    var url = getItemBaseUrl(id, requestOptions) + \"/groups\";\n    return request(url, requestOptions);\n}\n/**\n * ```js\n * import { getItemStatus } from \"@esri/arcgis-rest-portal\";\n * //\n * getItemStatus({\n *   id: \"30e5fe3149c34df1ba922e6f5bbf808f\",\n *   authentication\n * })\n *   .then(response)\n * ```\n * Inquire about status when publishing an item, adding an item in async mode, or adding with a multipart upload. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/status.htm) for more information.\n *\n * @param id - The Id of the item to get status for.\n * @param requestOptions - Options for the request\n * @returns A Promise to get the item status.\n */\nfunction getItemStatus(requestOptions) {\n    return determineOwner(requestOptions).then(function (owner) {\n        var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/status\";\n        var options = appendCustomParams(requestOptions, [\"jobId\", \"jobType\"], { params: __assign({}, requestOptions.params) });\n        return request(url, options);\n    });\n}\n/**\n * ```\n * import { getItemInfo } from \"@esri/arcgis-rest-portal\";\n * // get the \"Info Card\" for the item\n * getItemInfo(\"ae7\")\n *   .then(itemInfoXml) // XML document as a string\n * // or get the contents of a specific file\n * getItemInfo(\"ae7\", { fileName: \"form.json\", readAs: \"json\", authentication })\n *   .then(formJson) // JSON document as JSON\n * ```\n * Get an info file for an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item-info-file.htm) for more information.\n * @param id - Item Id\n * @param requestOptions - Options for the request, including the file name which defaults to `iteminfo.xml`.\n * If the file is not a text file (XML, HTML, etc) you will need to specify the `readAs` parameter\n * @returns A Promise that will resolve with the contents of the info file for the item.\n */\nfunction getItemInfo(id, requestOptions) {\n    var _a = requestOptions || {}, _b = _a.fileName, fileName = _b === void 0 ? \"iteminfo.xml\" : _b, _c = _a.readAs, readAs = _c === void 0 ? \"text\" : _c;\n    var options = __assign({ httpMethod: \"GET\" }, requestOptions);\n    return getItemFile(id, \"/info/\" + fileName, readAs, options);\n}\n/**\n * ```\n * import { getItemMetadata } from \"@esri/arcgis-rest-portal\";\n * // get the metadata for the item\n * getItemMetadata(\"ae7\")\n *   .then(itemMetadataXml) // XML document as a string\n * // or with additional request options\n * getItemMetadata(\"ae7\", { authentication })\n *   .then(itemMetadataXml) // XML document as a string\n * ```\n * Get the standard formal metadata XML file for an item (`/info/metadata/metadata.xml`)\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the contents of the metadata file for the item as a string.\n */\nfunction getItemMetadata(id, requestOptions) {\n    var options = __assign(__assign({}, requestOptions), { fileName: \"metadata/metadata.xml\" });\n    return getItemInfo(id, options);\n}\n// overrides request()'s default behavior for reading the response\n// which is based on `params.f` and defaults to JSON\n// Also adds JSON parse error protection by sanitizing out any unescaped control characters before parsing\nfunction getItemFile(id, \n// NOTE: fileName should include any folder/subfolders\nfileName, readMethod, requestOptions) {\n    var url = \"\" + getItemBaseUrl(id, requestOptions) + fileName;\n    // preserve escape hatch to let the consumer read the response\n    // and ensure the f param is not appended to the query string\n    var options = __assign({ params: {} }, requestOptions);\n    var justReturnResponse = options.rawResponse;\n    options.rawResponse = true;\n    options.params.f = null;\n    return request(url, options).then(function (response) {\n        if (justReturnResponse) {\n            return response;\n        }\n        return readMethod !== 'json'\n            ? response[readMethod]()\n            : response.text().then(function (text) { return JSON.parse(scrubControlChars(text)); });\n    });\n}\n\nexport { getItemGroups as a, bboxToString as b, getItemData as c, determineOwner as d, getItemMetadata as e, getItemResources as f, getItem as g, getItemResource as h, isBBox as i, getItemStatus as j, serializeItem as s };\n","import { _ as __assign } from './tslib.es6-3669ad41.js';\nimport { g as getPortalUrl } from './get-portal-url-423a76f5.js';\nimport { r as request } from './request-c15cc2af.js';\n\n/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Get the portal\n * @param requestOptions\n */\nfunction getSelf(requestOptions) {\n    // just delegate to getPortal w/o an id\n    return getPortal(null, requestOptions);\n}\n/**\n * ```js\n * import { getPortal } from \"@esri/arcgis-rest-request\";\n * //\n * getPortal()\n * getPortal(\"fe8\")\n * getPortal(null, { portal: \"https://custom.maps.arcgis.com/sharing/rest/\" })\n * ```\n * Fetch information about the specified portal by id. If no id is passed, portals/self will be called.\n * Note that if you intend to request a portal by id and it is different from the portal specified by options.authentication, you must also pass options.portal.\n * @param id\n * @param requestOptions\n */\nfunction getPortal(id, requestOptions) {\n    // construct the search url\n    var idOrSelf = id ? id : \"self\";\n    var url = getPortalUrl(requestOptions) + \"/portals/\" + idOrSelf;\n    // default to a GET request\n    var options = __assign({ httpMethod: \"GET\" }, requestOptions);\n    // send the request\n    return request(url, options);\n}\n\nexport { getPortal as a, getSelf as g };\n","import { c as cleanUrl } from './clean-url-be7c0879.js';\n\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper that returns the appropriate portal url for a given request. `requestOptions.portal` is given\n * precedence over `authentication.portal`. If neither `portal` nor `authentication` is present,\n * `www.arcgis.com/sharing/rest` is returned.\n *\n * @param requestOptions - Request options that may have authentication manager\n * @returns Portal url to be used in API requests\n */\nfunction getPortalUrl(requestOptions) {\n    if (requestOptions === void 0) { requestOptions = {}; }\n    // use portal in options if specified\n    if (requestOptions.portal) {\n        return cleanUrl(requestOptions.portal);\n    }\n    // if auth was passed, use that portal\n    if (requestOptions.authentication) {\n        // the portal url is already scrubbed in the auth package\n        return requestOptions.authentication.portal;\n    }\n    // default to arcgis.com\n    return \"https://www.arcgis.com/sharing/rest\";\n}\n\nexport { getPortalUrl as g };\n","/**\n * Get a property out of a deeply nested object\n * Does not handle anything but nested object graph\n */\nfunction getProp(obj, path) {\n    return path.split(\".\").reduce(function (prev, curr) {\n        /* istanbul ignore next no need to test undefined scenario */\n        return prev ? prev[curr] : undefined;\n    }, obj);\n}\n\nexport { getProp as g };\n","import { g as getProp } from './get-prop-d82e4fa6.js';\n\n/**\n * Gets the value of a property from an object with a\n * default if that prop is undefined\n * @param obj\n * @param prop\n * @param def\n */\nfunction getWithDefault(obj, prop, def) {\n    const res = getProp(obj, prop);\n    return res !== undefined ? res : def;\n}\n\nexport { getWithDefault as g };\n","import { _ as __assign } from './tslib.es6-3669ad41.js';\nimport { g as getPortalUrl } from './get-portal-url-423a76f5.js';\nimport { r as request } from './request-c15cc2af.js';\n\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * ```js\n * import { getUser } from '@esri/arcgis-rest-portal';\n * //\n * getUser(\"jsmith\")\n *   .then(response)\n * // => { firstName: \"John\", lastName: \"Smith\",tags: [\"GIS Analyst\", \"City of Redlands\"] }\n * ```\n * Get information about a user. This method has proven so generically useful that you can also call [`UserSession.getUser()`](/arcgis-rest-js/api/auth/UserSession#getUser-summary).\n *\n * @param requestOptions - options to pass through in the request\n * @returns A Promise that will resolve with metadata about the user\n */\nfunction getUser(requestOptions) {\n    var url;\n    var options = { httpMethod: \"GET\" };\n    // if a username is passed, assume ArcGIS Online\n    if (typeof requestOptions === \"string\") {\n        url = \"https://www.arcgis.com/sharing/rest/community/users/\" + requestOptions;\n    }\n    else {\n        // if an authenticated session is passed, default to that user/portal unless another username is provided manually\n        var username = requestOptions.username || requestOptions.authentication.username;\n        url = getPortalUrl(requestOptions) + \"/community/users/\" + encodeURIComponent(username);\n        options = __assign(__assign({}, requestOptions), options);\n    }\n    // send the request\n    return request(url, options);\n}\n\n/**\n * Given an org url, get the portal base url\n *\n * i.e. https://myorg.maps.arcgis.com will return https://www.arcgis.com\n *\n * @param orgUrl\n * @returns\n */\nfunction getPortalBaseFromOrgUrl(orgUrl) {\n    let result = orgUrl;\n    if (orgUrl.match(/(qaext|\\.mapsqa)\\.arcgis.com/)) {\n        result = \"https://qaext.arcgis.com\";\n    }\n    else if (orgUrl.match(/(devext|\\.mapsdevext)\\.arcgis.com/)) {\n        result = \"https://devext.arcgis.com\";\n    }\n    else {\n        /* istanbul ignore else */\n        if (orgUrl.match(/(www|\\.maps)\\.arcgis.com/)) {\n            result = \"https://www.arcgis.com\";\n        }\n    }\n    return result;\n}\n\nexport { getUser as a, getPortalBaseFromOrgUrl as g };\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nexport { __assign as _, __spreadArrays as a };\n","import { g as getProp } from './get-prop-d82e4fa6.js';\n\n/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * ```js\n * import { cloneObject } from \"@esri/hub-common\";\n * const original = { foo: \"bar\" }\n * const copy = cloneObject(original)\n * copy.foo // \"bar\"\n * copy === original // false\n * ```\n * Make a deep clone, including arrays. Does not handle functions!\n */\nfunction cloneObject(obj) {\n    let clone = {};\n    // first check array\n    if (Array.isArray(obj)) {\n        clone = obj.map(cloneObject);\n    }\n    else if (typeof obj === \"object\") {\n        for (const i in obj) {\n            if (obj.hasOwnProperty(i)) {\n                const value = obj[i];\n                if (value != null && typeof value === \"object\") {\n                    if (value instanceof Date) {\n                        clone[i] = new Date(value.getTime());\n                    }\n                    else if (typeof Blob !== \"undefined\" && value instanceof Blob) {\n                        clone[i] = new Blob([value], { type: value.type });\n                    }\n                    else {\n                        clone[i] = cloneObject(value);\n                    }\n                }\n                else {\n                    clone[i] = value;\n                }\n            }\n        }\n    }\n    else {\n        clone = obj;\n    }\n    return clone;\n}\n/**\n * Return an entry from an array by a property name\n */\nfunction findBy(arr, prop, value) {\n    if (!arr) {\n        return null;\n    }\n    const res = arr.reduce((acc, entry) => {\n        if (getProp(entry, prop) === value) {\n            acc = entry;\n        }\n        return acc;\n    }, null);\n    return res;\n}\n/**\n * Return a new array without the specified value.\n *\n * @export\n * @param {any[]} arr\n * @param {*} val value or object to remove\n * @returns {any[]} Array without the value\n */\nfunction without(arr, value) {\n    const res = arr.filter((entry) => entry !== value);\n    return res;\n}\n/**\n * Return a random number, prefixed with a string. Used for unique identifiers that do not require\n * the rigor of a full UUID - i.e. node id's, process ids etc.\n * @param prefix String to prefix the random number with so the result is a valid javascript property\n */\nfunction createId(prefix = \"i\") {\n    // prepend some char so it's always a valid dotable property name\n    // get a random number, convert to base 36 representation, then grab chars 2-8\n    return `${prefix}${Math.random().toString(36).substr(2, 8)}`;\n}\n/**\n * Append or replace a value on an object, using a specified key, if the value is not null.\n * This is a very useful companion to the [getProp()](../getProp/) utility.\n *\n * Note: object that is passed in is cloned before the property is appended.\n *\n * Allows for code like:\n *\n * ```js\n * let model = {\n *  item: {\n *    title: 'some example object',\n *    description: 'this is some longer text',\n *    type: 'Web Map',\n *    properties: {\n *      sourceId: '3ef'\n *    }\n *  },\n *  data: {\n *    theme: 'orange',\n *    parcelLayer: {\n *      primaryField: 'PIN'\n *    }\n *  }\n * };\n *\n * // Let's extract some details into an object.\n * const summary = [\n *  'item.title',\n *  'item.description',\n *  'item.missingProp',\n *  'data.parcelLayer.primaryField'].reduce((acc, prop) => {\n *   // create the property name... you could do this however...\n *   let propName = prop.split('.').reverse()[0];\n *   return maybeAdd(propName, getProp(model, key), acc);\n * }, {});\n *\n * // summary =>\n * // {\n * //   title: 'some example object',\n * //   description: 'this is some longer text',\n * //   primaryField: 'PIN'\n * // }\n * ```\n * @param key - key to use when appending to the object\n * @param val - the possibly null value\n * @param target - the object to update\n */\nfunction maybeAdd(key, val, target) {\n    // see if we got something...\n    if (val !== null && val !== undefined) {\n        target = cloneObject(target);\n        // attach using the key\n        target[key] = val;\n    }\n    return target;\n}\n/**\n * Append a value to an array, if the value is not null.\n * This is a very useful companion to the [getProp()](../getProp/) utility.\n *\n * Note: the array that is passed in is cloned before being appended to.\n *\n * Allows for code like:\n * ```js\n *  // example object\n * let model = {\n *  item: {\n *    id: 'c00',\n *    title: 'some example object',\n *    description: 'this is some longer text',\n *    type: 'Web Map',\n *    properties: {\n *      sourceId: '3ef'\n *    }\n *  },\n *  data: {\n *    theme: 'orange',\n *    parcelLayer: {\n *      itemId: '7ca',\n *      primaryField: 'PIN'\n *    }\n *  }\n * };\n * // lets pluck some id's into an array...\n * maybePush(getProp(model, 'item.properties.sourceId'), []);\n * // > ['3ef']\n *\n * // now try to get a value from a property that is missing...\n * maybePush(getProp(obj, 'item.properties.childId'), []);\n * // > []\n *\n * // easily pluck values via property paths\n * const summary = [\n *  'item.id',\n *  'item.properties.sourceId',\n *  'item.properties.childId',\n *  'data.parcelLayer.itemId'].reduce((acc, prop) => {\n *   return maybePush(getProp(model, key), acc);\n * }, []);\n *\n * // summary => ['c00', '3ef', '7ca']\n *\n * ```\n *\n * @param val - the possibly null value\n * @param target - the array to add the value to\n */\nfunction maybePush(val, target) {\n    if (val !== null && val !== undefined) {\n        // create a clone because mutation makes us sad...\n        target = cloneObject(target);\n        target.push(val);\n    }\n    return target;\n}\n/**\n * Convert a string to camelCase\n *\n * @export\n * @param {string} value\n * @returns {string} camelCased string\n */\nfunction camelize(value) {\n    // lower case the whole thing to start...\n    value = value.toLowerCase();\n    // strip out any/all special chars...\n    value = value.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, \" \");\n    // Hoisted from EmberJS (MIT License)\n    // https://github.com/emberjs/ember.js/blob/v2.0.1/packages/ember-runtime/lib/system/string.js#L23-L27\n    const STRING_CAMELIZE_REGEXP_1 = /(\\-|\\_|\\.|\\s)+(.)?/g;\n    const STRING_CAMELIZE_REGEXP_2 = /(^|\\/)([A-Z])/g;\n    return value\n        .replace(STRING_CAMELIZE_REGEXP_1, function (match, separator, chr) {\n        return chr ? chr.toUpperCase() : \"\";\n    })\n        .replace(STRING_CAMELIZE_REGEXP_2, function (match, separator, chr) {\n        return match.toLowerCase();\n    });\n}\n/**\n * Determines if a value is unique in an array\n * Allows for code like:\n *\n * ```js\n * const ary = [ 1, 2, 3, 3, 4, 5, 1 ];\n *\n * const result = ary.filter(unique);\n *\n * result => [ 1, 2, 3, 4, 5 ]\n * ```\n * @param value - the value to search for\n * @param index - the index of the searched value\n * @param ary - the array to search\n * @returns {boolean} - indicating if the value is unique in the array\n */\nfunction unique(value, index, ary) {\n    return ary.indexOf(value) === index;\n}\n/**\n * Determine if a value is null or undefined\n * @param value anything\n * @returns\n */\nconst isNil = (value) => value == null;\n/**\n * Upper case first letter (only) of a string\n * @param word\n * @returns Word\n */\nconst capitalize = (word) => {\n    // upper case first letter and return as element in array for backwards compatibility\n    const chars = Array.from(word);\n    chars[0] = chars[0].toUpperCase();\n    return chars.join(\"\");\n};\n/**\n * An IE-compatible stand-in for Javascript's [array.flat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat)\n * @param arr the array\n * @returns an array\n */\nfunction flattenArray(arr) {\n    return arr.reduce((acc, val) => acc.concat(val), []);\n}\n\nexport { createId as a, camelize as b, cloneObject as c, maybePush as d, capitalize as e, flattenArray as f, findBy as g, isNil as i, maybeAdd as m, unique as u, without as w };\n"],"names":["appendCustomParams","customOptions","keys","baseOptions","options","__assign","params","reduce","value","key","UNITS","Logger","Level","allowedResourceTypes","ArcgisHubItemResourceViewer","hostRef","registerInstance","this","portal","layout","newVal","fetchResources","itemId","ArcGISContextManager","portalUrl","ctx","context","console","log","file","id","portalSharingUrl","sharingApiUrl","timestamp","dateTimeFormatter","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","Date","getItemResources","response","resources","msg","getProp","imageUrl","result","h","slot","alt","src","getImageUrl","imageResources","filter","element","includes","resource","split","pop","map","res","selectable","renderThumbnail","parseCreatedDate","created","number","exponent","indexOf","unit","Math","min","floor","log10","length","round","Number","isInteger","factor","pow","toLocaleString","locale","formatBytes","size","Host","getElement","style","cleanUrl","url","trim","slice","serializeItem","item","clone","JSON","parse","stringify","data","Blob","constructor","name","text","determineOwner","requestOptions","owner","Promise","resolve","authentication","getUsername","reject","Error","isBBox","extent","Array","isArray","bboxToString","join","CONTROL_CHAR_MATCHER","getItem","getItemBaseUrl","httpMethod","request","portalUrlOrRequestOptions","getPortalUrl","getItemData","f","catch","err","RegExp","test","message","num","getItemResource","readAs","getItemFile","fileName","getItemGroups","getItemStatus","then","getItemMetadata","_a","_b","_c","getItemInfo","readMethod","justReturnResponse","rawResponse","replace","getSelf","getPortal","idOrSelf","obj","path","prev","curr","undefined","getWithDefault","prop","def","getUser","username","encodeURIComponent","getPortalBaseFromOrgUrl","orgUrl","match","Object","assign","t","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","k","a","j","jl","cloneObject","getTime","type","findBy","arr","acc","entry","without","createId","prefix","random","toString","substr","maybeAdd","val","target","maybePush","push","camelize","toLowerCase","separator","chr","toUpperCase","unique","index","ary","isNil","capitalize","word","chars","from","flattenArray","concat"],"sourceRoot":""}