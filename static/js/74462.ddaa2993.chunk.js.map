{"version":3,"file":"static/js/74462.ddaa2993.chunk.js","mappings":"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","sources":["../.yalc/@esri/hub-components/dist/esm/arcgis-hub-input-color.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-0d95d9d4.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { a as ajv } from './ajv-efdbda66.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport './_commonjsHelpers-11ca3be1.js';\nimport './index-4e91769f.js';\n\nconst CSS = {\n  noColor: \"no-color\",\n  swatch: \"swatch\",\n  swatchProp: \"--swatch-color\"\n};\n\nconst arcgisHubInputColorCss = \":host{display:block}#color-picker-toggle-button{--calcite-ui-brand:var(--calcite-ui-border-input);margin-left:-1px}.swatch{background-color:var(--swatch-color, transparent);width:1.25rem}.swatch.no-color{background-image:linear-gradient(45deg, #ededed 25%, #a6a6a6 25%, #a6a6a6 50%, #ededed 50%, #ededed 75%, #a6a6a6 75%, #a6a6a6 100%);background-size:15px 15px;outline:solid 1px #a6a6a6}\";\n\nconst ArcgisHubInputColor = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubInputColorChange = createEvent(this, \"arcgisHubInputColorChange\", 7);\n    /**\n     * A boolean value indicating whether the control is disabled\n     */\n    this.disabled = false;\n    /**\n     * A boolean value indicating whether the control should consider empty values valid\n     */\n    this.required = false;\n    this.savedColors = [];\n    this.status = 'idle';\n    this.storageId = \"saved-colors\";\n    bind(this, 'handleColorPickerChange', 'handleInputInput', 'setColorPickerEl');\n  }\n  /**\n   * Property watchers\n   */\n  handleValueChanged(value) {\n    this.setColor(value);\n  }\n  /**\n   * Event handling\n   */\n  handleColorPickerChange(event) {\n    var _a;\n    event.stopPropagation();\n    const newColor = (_a = this.colorPickerEl.value) !== null && _a !== void 0 ? _a : '';\n    if (newColor === this.value) {\n      return;\n    }\n    const validationResult = this.setColor(newColor);\n    this.emitChangeEvent(newColor, validationResult);\n  }\n  handleInputInput(event) {\n    var _a;\n    event.stopPropagation();\n    const newColor = (_a = event.detail.value) !== null && _a !== void 0 ? _a : '';\n    const validationResult = this.setColor(newColor);\n    this.emitChangeEvent(newColor, validationResult);\n  }\n  /**\n   * Hooks\n   */\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n    localStorage.setItem(`calcite-color-${this.storageId}`, JSON.stringify(this.savedColors));\n    const ajv$1 = new ajv({ allErrors: true });\n    const regexp = this.required\n      ? /^#(?:[0-9a-fA-F]{6})$/ // required regex\n      : /^$|^#(?:[0-9a-fA-F]{6})$/; // not required regex also matches empty string\n    ajv$1.addFormat('hex-color', regexp);\n    const schema = {\n      type: 'object',\n      properties: {\n        color: {\n          type: 'string',\n          format: 'hex-color'\n        }\n      }\n    };\n    this.validator = ajv$1.compile(schema);\n    this.setColor(this.value);\n  }\n  /**\n   * Functions\n   */\n  validate(color = '') {\n    const valid = this.validator({ color });\n    return valid ? { valid } : { valid, errors: this.validator.errors };\n  }\n  emitChangeEvent(value, validationResult) {\n    if (this.disabled) {\n      return;\n    }\n    const { valid } = validationResult;\n    const detail = { valid };\n    if (valid) {\n      detail.value = value;\n    }\n    this.arcgisHubInputColorChange.emit(detail);\n  }\n  setColor(color) {\n    const validationResult = this.validate(color);\n    const { valid } = validationResult;\n    this.value = color;\n    if (valid) {\n      // we only set the swatch and the colorpicker color if it is valid\n      this.element.style.setProperty(CSS.swatchProp, color);\n      this._colorPickerColor = color;\n    }\n    this.status = valid ? 'valid' : 'invalid';\n    return validationResult;\n  }\n  setColorPickerEl(el) {\n    this.colorPickerEl = el;\n  }\n  render() {\n    return (h(\"calcite-popover-manager\", { \"auto-close\": true }, h(\"calcite-input\", { disabled: this.disabled, label: this.label, onCalciteInputInput: this.handleInputInput, placeholder: this.placeholder, status: this.status, value: this.value }, h(\"calcite-button\", { appearance: \"outline\", disabled: this.disabled, id: \"color-picker-toggle-button\", label: this.intl.t('colorPickerToggleButtonLabel'), slot: \"action\" }, h(\"div\", { class: {\n        [CSS.swatch]: true,\n        [CSS.noColor]: !this.value\n      } }, \"\\u00A0\"))), h(\"calcite-popover\", {\n      // disablePointer={true}\n      label: this.intl.t('popoverLabel'), placement: \"auto\", referenceElement: \"color-picker-toggle-button\"\n    }, h(\"calcite-color-picker\", { allowEmpty: !this.required, format: \"hex\", onCalciteColorPickerChange: this.handleColorPickerChange, ref: this.setColorPickerEl, scale: \"m\", storageId: this.storageId, value: this._colorPickerColor }))));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"handleValueChanged\"]\n  }; }\n};\nArcgisHubInputColor.style = arcgisHubInputColorCss;\n\nexport { ArcgisHubInputColor as arcgis_hub_input_color };\n"],"names":["CSS","ArcgisHubInputColor","hostRef","registerInstance","this","arcgisHubInputColorChange","createEvent","disabled","required","savedColors","status","storageId","bind","value","setColor","event","_a","stopPropagation","newColor","colorPickerEl","validationResult","emitChangeEvent","detail","intlManager","element","intl","localStorage","setItem","JSON","stringify","ajv$1","ajv","allErrors","regexp","addFormat","schema","type","properties","color","format","validator","compile","valid","errors","emit","validate","style","setProperty","_colorPickerColor","el","h","label","onCalciteInputInput","handleInputInput","placeholder","appearance","id","t","slot","class","placement","referenceElement","allowEmpty","onCalciteColorPickerChange","handleColorPickerChange","ref","setColorPickerEl","scale","getElement"],"sourceRoot":""}