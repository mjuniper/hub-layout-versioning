{"version":3,"file":"static/js/63585.c416bfd8.chunk.js","mappings":"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","sources":["../.yalc/@esri/hub-components/dist/esm/arcgis-hub-content-hero_3.entry.js","../.yalc/@esri/hub-components/dist/esm/context-7d8f7366.js","../.yalc/@esri/hub-components/dist/esm/get-icon-for-status-b0354a83.js","../.yalc/@esri/hub-components/dist/esm/resize-observer-dc6e269e.js"],"sourcesContent":["import { r as registerInstance, h, F as Fragment, H as Host, g as getElement, c as createEvent } from './index-0d95d9d4.js';\nimport { R as ResizeObserverManager } from './resize-observer-dc6e269e.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport { g as getIconForStatus } from './get-icon-for-status-b0354a83.js';\nimport './index-4e91769f.js';\n\nconst SLOTS = {\n  header: \"header\",\n  main: \"main\",\n  footerLeading: \"footer-leading\",\n  footerTrailing: \"footer-trailing\"\n};\n\nconst arcgisHubContentHeroCss = \".sc-arcgis-hub-content-hero-h{display:flex}.vertical.sc-arcgis-hub-content-hero-h{display:block}.hero-media.sc-arcgis-hub-content-hero{display:flex;align-items:center}arcgis-hub-map.sc-arcgis-hub-content-hero{height:300px;aspect-ratio:200 / 133;width:100%}.hero-thumbnail.sc-arcgis-hub-content-hero{height:300px;width:auto;-o-object-fit:contain;object-fit:contain;-o-object-position:left;object-position:left}.vertical.sc-arcgis-hub-content-hero-h .hero-thumbnail.sc-arcgis-hub-content-hero{height:auto;width:100%}.hero-content.sc-arcgis-hub-content-hero{display:grid;flex-grow:1;padding-left:1.5rem;padding-right:1.5rem;padding-top:0.75rem;padding-bottom:1rem;grid-template-columns:1fr auto;grid-template-rows:auto 1fr auto;grid-template-areas:\\\"header header\\\"\\n    \\\"main main\\\"\\n    \\\"footer-leading footer-trailing\\\"}.no-media.sc-arcgis-hub-content-hero-h .hero-content.sc-arcgis-hub-content-hero{padding-left:0px;padding-right:0px}.vertical.sc-arcgis-hub-content-hero-h .hero-content.sc-arcgis-hub-content-hero{padding-left:1rem;padding-right:1rem}.hero-header.sc-arcgis-hub-content-hero{grid-area:header}.hero-header.sc-arcgis-hub-content-hero h1.sc-arcgis-hub-content-hero{font-size:var(--calcite-font-size-4);line-height:2.5rem;font-weight:var(--calcite-font-weight-medium)}.vertical.sc-arcgis-hub-content-hero-h .hero-header.sc-arcgis-hub-content-hero{padding-top:1.5rem}.hero-main.sc-arcgis-hub-content-hero{grid-area:main;padding-bottom:1.5rem}.hero-footer-leading.sc-arcgis-hub-content-hero{grid-area:footer-leading}.hero-footer-leading.sc-arcgis-hub-content-hero-s>calcite-button,.hero-footer-leading .sc-arcgis-hub-content-hero-s>calcite-button{margin-right:0.5rem}.hero-footer-trailing.sc-arcgis-hub-content-hero{grid-area:footer-trailing;display:flex;justify-content:flex-end}.hero-footer-trailing.sc-arcgis-hub-content-hero-s>calcite-button,.hero-footer-trailing .sc-arcgis-hub-content-hero-s>calcite-button{margin-left:0.5rem}\";\n\nconst ArcgisHubContentHero = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Should we show, or hide the map in the hero?\n     */\n    this.showMap = true;\n    /**\n     * apply a \"vertical\" class to the hero if we are on a small screen (i.e. mobile)\n     */\n    this.orientationClass = '';\n    bind(this, 'handleResize');\n  }\n  get mediaClass() {\n    let val = \"no-media\";\n    if (this.thumbnailUrl) {\n      val = \"thumbnail-media\";\n    }\n    else if (this.extent) {\n      val = \"map-media\";\n    }\n    return val;\n  }\n  /**\n   * concatenated classes to apply to the host element\n   */\n  get hostClass() {\n    return (this.mediaClass + ' ' + this.orientationClass).trim();\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n  }\n  connectedCallback() {\n    ResizeObserverManager.addHandler(this.element, this.handleResize);\n  }\n  disconnectedCallback() {\n    ResizeObserverManager.unobserve(this.element);\n  }\n  /**\n   * handle screen reflow - for mobile, we should switch the orientation\n   * of the hero so that the thumbnail/extent is above the hero content\n   */\n  async handleResize() {\n    this.orientationClass = this.element.clientWidth < 768 ? 'vertical' : '';\n  }\n  renderMedia() {\n    let media = null;\n    if (this.thumbnailUrl) {\n      media = this.renderThumbnail(this.thumbnailUrl);\n    }\n    else if (this.extent && this.showMap) {\n      media = this.renderMap();\n    }\n    return h(\"div\", { class: \"hero-media\" }, media);\n  }\n  renderThumbnail(thumbnailUrl) {\n    // TODO: use the arcgis-hub-image component once styling is resolved\n    return (h(\"img\", { alt: this.intl.t(\"thumbnail\"), class: \"hero-thumbnail\", slot: \"thumbnail\", src: thumbnailUrl }));\n  }\n  renderMap() {\n    return (h(\"arcgis-hub-map\", { basemap: this.basemap, extent: this.extent, graphics: this.graphics }));\n  }\n  renderHeader() {\n    return h(\"div\", { class: \"hero-header\" }, this.heroTitle && h(\"h1\", null, this.heroTitle), h(\"slot\", { name: SLOTS.header }));\n  }\n  ;\n  renderMain() {\n    return h(\"div\", { class: \"hero-main\" }, h(\"slot\", { name: SLOTS.main }));\n  }\n  renderFooter() {\n    return (h(Fragment, null, h(\"div\", { class: \"hero-footer-leading\" }, h(\"slot\", { name: SLOTS.footerLeading })), h(\"div\", { class: \"hero-footer-trailing\" }, h(\"slot\", { name: SLOTS.footerTrailing }))));\n  }\n  render() {\n    return (h(Host, { class: this.hostClass, \"data-element\": \"content-hero\" }, this.renderMedia(), h(\"div\", { class: \"hero-content\" }, this.renderHeader(), this.renderMain(), this.renderFooter())));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n};\nArcgisHubContentHero.style = arcgisHubContentHeroCss;\n\nconst arcgisHubContentViewCss = \":host{display:block}calcite-card{height:100%;width:100%;--tw-shadow:0 4px 8px -1px rgba(0, 0, 0, 0.08), 0 2px 4px -1px rgba(0, 0, 0, 0.04);--tw-shadow-colored:0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.content-type{display:flex;align-items:center;padding-bottom:1.25rem}.content-type calcite-icon{margin-right:0.5rem}.title-action{font-size:var(--calcite-font-size-2);line-height:1.5rem;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-link);-webkit-text-decoration-line:none;text-decoration-line:none;overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}.plain-title{font-size:var(--calcite-font-size-2);line-height:1.5rem;font-weight:var(--calcite-font-weight-medium);overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}.owner{font-size:14px}.snippet{margin-top:1rem;margin-bottom:1rem;margin-left:0px;margin-right:0px;font-size:var(--calcite-font-size-0);line-height:1.25rem;overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}:host([layout='card']) .thumbnail{width:100%;aspect-ratio:200 / 133}:host([layout='card']) .empty-thumbnail{height:auto;width:100%;background-color:var(--calcite-ui-foreground-3);color:var(--calcite-ui-text-3);aspect-ratio:200 / 133}:host([layout='row']){--calcite-animation-timing:0ms;margin-bottom:1rem;display:grid;grid-template-columns:repeat(4, minmax(0, 1fr));--tw-shadow:0 4px 8px -1px rgba(0, 0, 0, 0.08), 0 2px 4px -1px rgba(0, 0, 0, 0.04);--tw-shadow-colored:0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);grid-template-areas:'thumbnail main main main'}:host([layout='row']:hover) calcite-card{--tw-shadow:0 4px 16px 0 rgba(0, 0, 0, 0.08), 0 2px 8px 0 rgba(0, 0, 0, 0.04);--tw-shadow-colored:0 4px 16px 0 var(--tw-shadow-color), 0 2px 8px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);}:host([layout='row']:hover) calcite-card:hover{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}:host([layout='row']:hover) .thumbnail{box-shadow:-8px 4px 16px 0 rgb(0 0 0 / 8%), -4px 2px 8px 0 rgb(0 0 0 / 4%)}:host([layout='row']) .empty-thumbnail{height:auto;width:100%;background-color:var(--calcite-ui-foreground-3);color:var(--calcite-ui-text-3);aspect-ratio:200 / 167}:host([layout='row']) .thumbnail{background-color:var(--calcite-ui-foreground-1);aspect-ratio:200 / 167}:host([layout='row']) .thumbnail,:host([layout='row']) .empty-thumbnail{grid-area:thumbnail;height:100%;min-width:100%;max-width:100%;border-width:1px;border-right-width:0px;border-style:solid;border-color:var(--calcite-ui-border-2);-o-object-fit:cover;object-fit:cover;-o-object-position:center;object-position:center;box-shadow:1px 0px var(--calcite-ui-foreground-1);z-index:2}:host([layout='row']) calcite-card{grid-area:main;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.thumbnail-border{border-color:#007ac2 !important}dl[slot='footer-leading']{margin:0px;display:grid;width:100%;gap:0.25rem;font-size:14px;grid-template-columns:repeat(auto-fill, minmax(max(200px, (100% - (2 - 1) * 0.25rem) / 2), 1fr))}dl[slot='footer-leading']>div{display:flex}dl[slot='footer-leading'] dt{font-weight:var(--calcite-font-weight-bold)}dl[slot='footer-leading'] dt::after{content:':'}dl[slot='footer-leading'] dd{margin:0px;margin-left:0.25rem;-webkit-margin-start:5px;margin-inline-start:5px}\";\n\nconst ArcgisHubContentView = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubContentSelect = createEvent(this, \"arcgisHubContentSelect\", 7);\n    this.arcgisHubContentViewClick = createEvent(this, \"arcgisHubContentViewClick\", 7);\n    /**\n     * Layout of each piece of content, row(list) or card(grid)\n     */\n    this.layout = 'row';\n    /**\n     * Whether the card/row is selected\n     */\n    this.isSelected = false;\n    /**\n     * Internal variables\n     */\n    /**\n     * True when there is error rendering the thumbnail\n     */\n    this.hasThumbnailError = false;\n    bind(this, 'setThumbnailEl', 'onTitleLinkClick');\n  }\n  /**\n  * Item's created date to show in the row footer\n  */\n  get createdDate() {\n    return this.entity.created ? this.parseDate(this.entity.created) : '';\n  }\n  /**\n   * Item's last updated date to show in the footer\n   */\n  get lastUpdatedDate() {\n    return this.entity.modified ? this.parseDate(this.entity.modified) : '';\n  }\n  get contentTypeLabel() {\n    let label;\n    if (this.entity.contentTypeLabel) {\n      label = this.intl.t(this.entity.contentTypeLabel);\n      // TODO: currently if a string is not found in the translation file\n      // `${componentName}.${key}` will be returned, e.g. 'arcgis-hub-content-view.layerTemplate'\n      // until we have an error handler implemented, we will manually assign a default value to it\n      if (label.includes('arcgis-hub-content-view.')) {\n        label = this.intl.t('content');\n      }\n      return label;\n    }\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n  }\n  /**\n   * Convert the unix timestamp to 'month day, year' format\n   */\n  parseDate(timestamp) {\n    const dateFormatOptions = { year: 'numeric', month: 'long', day: 'numeric', hour12: false };\n    return this.intl.formatDate(timestamp, dateFormatOptions);\n  }\n  setThumbnailEl(el) {\n    this.thumbnailEl = el;\n  }\n  componentDidRender() {\n    if (this.thumbnailEl) {\n      const onError = () => {\n        this.hasThumbnailError = true;\n        this.thumbnailEl.removeEventListener('error', onError);\n      };\n      this.thumbnailEl.addEventListener('error', onError);\n    }\n  }\n  /**\n   * Fired when a piece of content is selected/deselected\n   */\n  handelCardSelectEvent() {\n    this.isSelected = !this.isSelected;\n    this.arcgisHubContentSelect.emit(this.entity);\n  }\n  /**\n   * Render the thumbnail if showThumbnail is true\n   * We will render an image icon with a gray background if the item does not contain a thumbnail\n   * @returns thumbnail html element\n   */\n  renderThumbnail(content, layout) {\n    let result;\n    // Only render the thumbnail when not in loading state\n    // so the <calcite-card> loader will not appear in thumbnail slot in row layout\n    if (this.showThumbnail && !this.loading) {\n      if (content.thumbnailUrl && !this.hasThumbnailError) {\n        result = h(\"img\", { alt: \"footer thumbnail\",\n          // In row layout, thumbnail is outside of the calcite-card\n          // so when a card is selected\n          // we have to munually add a border to the thumbnail to match the card's border\n          // this will be removed once calcite has implemented the horizontal layout\n          class: this.isSelected ? 'thumbnail thumbnail-border' : 'thumbnail', ref: this.setThumbnailEl, slot: \"thumbnail\", src: content.thumbnailUrl });\n      }\n      else {\n        return h(\"calcite-icon\", { class: this.isSelected\n            ? `${layout}-empty-thumbnail empty-thumbnail thumbnail-border`\n            : `${layout}-empty-thumbnail empty-thumbnail`, icon: \"image\", slot: \"thumbnail\" });\n      }\n    }\n    return result;\n  }\n  renderContentType(content) {\n    if (content.type) {\n      return (h(\"div\", null, h(\"dt\", null, this.intl.t('type')), h(\"dd\", null, content.type)));\n    }\n  }\n  renderDateUpdated() {\n    if (this.lastUpdatedDate) {\n      return (h(\"div\", null, h(\"dt\", null, this.intl.t('dateUpdated')), h(\"dd\", null, this.lastUpdatedDate)));\n    }\n  }\n  renderDateCreated() {\n    if (this.createdDate) {\n      return (h(\"div\", null, h(\"dt\", null, this.intl.t('dateCreated')), h(\"dd\", null, this.createdDate)));\n    }\n  }\n  /**\n   * When there is no content url, render a plain text title instead of a link\n   * @returns content url\n   */\n  renderContentTitle(content) {\n    return content.viewUrl\n      ? h(\"a\", { class: 'title-action', href: content.viewUrl, onClick: this.onTitleLinkClick, slot: 'title', target: this.newTab ? '_blank' : '_self' }, content.title)\n      : h(\"div\", { class: 'plain-title', slot: 'title' }, content.title);\n  }\n  onTitleLinkClick(event) {\n    this.arcgisHubContentViewClick.emit({ content: this.entity, event });\n  }\n  /**\n   * Render the card or row\n   * Since <calcite-card> does not support horizontal layout natively\n   * For rows, we have to manually position it with flex-box and render the thumbnail outside of <calcite-card>\n   * @param content\n   * @param isLoading\n   * @param layout card or row\n   * @returns layout element\n   */\n  renderLayout(content, isLoading = false) {\n    return (h(Host, null, this.layout === 'row' ? this.renderThumbnail(content, this.layout) : '', h(\"calcite-card\", { dir: this.intl.direction, loading: isLoading, selectable: this.selectable }, this.layout === 'card' ? this.renderThumbnail(content, this.layout) : '', h(\"div\", { class: 'content-type', slot: 'title' }, h(\"calcite-icon\", { icon: content.contentTypeIcon }), h(\"span\", null, this.contentTypeLabel)), this.renderContentTitle(content), h(\"div\", { class: 'owner', slot: 'subtitle' }, content.owner), h(\"div\", { class: 'snippet', slot: 'subtitle' }, content.snippet), h(\"dl\", { slot: 'footer-leading' }, this.renderContentType(content), this.layout === 'row' ? this.renderDateCreated() : '', this.renderDateUpdated()))));\n  }\n  render() {\n    return this.entity ? this.renderLayout(this.entity, this.loading) : `No data.`;\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n};\nArcgisHubContentView.style = arcgisHubContentViewCss;\n\nconst arcgisHubTimelineCss = \"*{margin:0px;padding:0px;color:var(--calcite-ui-text-1);list-style:none}:host{display:block;overflow:hidden;border-radius:1rem;padding:0px}h1,label{font-weight:var(--calcite-font-weight-normal)}h1{margin-top:1.25rem;font-size:var(--calcite-font-size-3);line-height:2rem}label{font-size:var(--calcite-font-size-0);line-height:1.25rem;font-weight:var(--calcite-font-weight-light)}ol{margin-top:1.25rem;background-color:var(--calcite-ui-foreground-1);padding:1.25rem;padding-top:2.5rem}li{border-left:1px dashed #cccccc;position:relative;padding-left:1rem;padding-right:1rem;padding-bottom:1.5rem}li:last-child{border:0px;padding-bottom:0px}li calcite-icon{left:-13px;position:absolute;top:0.25rem;background-color:var(--calcite-ui-foreground-1)}.stage{border:1px rgba(204, 204, 204, 0.2) solid;top:-12px;position:relative;margin-left:1.25rem;border-radius:0.75rem;padding:1rem;--tw-shadow:0 4px 8px -1px rgba(0, 0, 0, 0.08), 0 2px 4px -1px rgba(0, 0, 0, 0.04);--tw-shadow-colored:0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.stage calcite-link{margin-top:0.5rem;display:block}h4{font-size:var(--calcite-font-size-1);line-height:1.5rem;font-weight:var(--calcite-font-weight-medium)}h5{margin-top:0.25rem;font-size:var(--calcite-font-size--1);line-height:1rem;font-weight:var(--calcite-font-weight-light);color:var(--calcite-ui-text-3)}p{margin-top:1rem;font-size:var(--calcite-font-size-0);line-height:1.25rem;font-weight:var(--calcite-font-weight-normal)}.empty-state{height:20rem;width:100%;display:flex;align-items:center;justify-content:center}.empty-state calcite-icon{height:60%;width:60%}.collapse-expand-btn{margin-left:20px}\";\n\nconst ArcgisHubTimeline = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Timeline stages\n     */\n    this.stages = [];\n    bind(this, 'handleCollapseExpandBtnClick');\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n  }\n  /**\n   * Whether we should collapse the timeline, meaning all conditions have been met\n   */\n  get shouldCollapse() {\n    return this.canCollapse && this.stages.length >= 6;\n  }\n  renderStageLink(link) {\n    let result;\n    const { href, title } = link || {};\n    if (href || title) {\n      result = h(\"calcite-link\", { href: href || '#' }, title || href);\n    }\n    return result;\n  }\n  handleCollapseExpandBtnClick() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n  renderCollapseExpandIconAndBtn() {\n    // Until the collapse/expand button is clicked for the first time, this.isCollapsed is undefined\n    // we want to have its value align with this.shouldCollapse in this case\n    if (this.isCollapsed === undefined) {\n      this.isCollapsed = this.shouldCollapse;\n    }\n    if (this.shouldCollapse) {\n      return h(\"li\", null, h(\"calcite-icon\", { icon: this.isCollapsed ? 'chevrons-down' : 'chevrons-up' }), h(\"calcite-link\", { class: 'collapse-expand-btn', onClick: this.handleCollapseExpandBtnClick }, this.intl.t(this.isCollapsed ? 'expandTimeline' : 'collapseTimeline')));\n    }\n  }\n  renderStages() {\n    return (h(\"ol\", null, this.renderFirstThreeStages(), this.renderCollapseExpandIconAndBtn(), this.renderRemainingStages()));\n  }\n  renderStage(stage) {\n    return h(\"li\", { key: stage.title }, h(\"calcite-icon\", { icon: getIconForStatus(stage.status) }), h(\"div\", { class: \"stage\" }, h(\"h4\", null, stage.title), h(\"h5\", null, stage.timeframe), h(\"p\", null, stage.stageDescription), this.renderStageLink(stage.link)));\n  }\n  // We render the first 3 stages regardless of the timeline is set to collapse or not\n  renderFirstThreeStages() {\n    return this.stages.slice(0, 3).map(stage => this.renderStage(stage));\n  }\n  renderLastStage() {\n    return this.renderStage(this.stages[this.stages.length - 1]);\n  }\n  renderExpandedStages() {\n    return this.stages.slice(3).map(stage => this.renderStage(stage));\n  }\n  /**\n   * This is where we choose to render the collapsed timeline or expanded timeline\n   * it is a bit tricky and can be confusing...\n   * not only we have to consider whether expanded timeline should be shown\n   * but we also have to consider if it should be shown, whether it's already been expanded\n   * (after user clicks the 'expand timeline' button, marked by the isCollapsed flag)\n   * so at the initial stage, when a timeline is first created, isCollapsed is set to align with\n   * shouldCollapse, after that, it will be altered by the 'collapse/expand timeline' button\n   */\n  renderRemainingStages() {\n    if (this.isCollapsed === undefined) {\n      this.isCollapsed = this.shouldCollapse;\n    }\n    return this.shouldCollapse && this.isCollapsed\n      ? this.renderLastStage()\n      : this.renderExpandedStages();\n  }\n  render() {\n    if (this.timelineTitle || this.description || this.stages.length) {\n      return h(Host, null, h(\"h1\", null, this.timelineTitle), h(\"label\", null, this.description), this.renderStages());\n    }\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n};\nArcgisHubTimeline.style = arcgisHubTimelineCss;\n\nexport { ArcgisHubContentHero as arcgis_hub_content_hero, ArcgisHubContentView as arcgis_hub_content_view, ArcgisHubTimeline as arcgis_hub_timeline };\n","const bind = (context, ...methodNames) => {\n  methodNames.forEach(methodName => {\n    if (typeof context[methodName] !== 'function') {\n      throw new Error(`Cannot bind context. ${methodName} must be a function`);\n    }\n    context[methodName] = context[methodName].bind(context);\n  });\n};\n\nexport { bind as b };\n","const getIconForStatus = (status) => {\n  let icon;\n  switch (status) {\n    case 'Not Started':\n      icon = 'circle';\n      break;\n    case 'In Progress':\n      icon = 'star-circle';\n      break;\n    case 'Skipped':\n      icon = 'x-circle-f';\n      break;\n    case 'Complete':\n      icon = 'check-circle-f';\n      break;\n  }\n  return icon;\n};\n\nexport { getIconForStatus as g };\n","/* Manages a single ResizeObserver to be used by all components\n * usage: ResizeObserverManager.addHandler(this.element, handler);\n *        ResizeObserverManager.removeHandler(this.element, handler); or ResizeObserverManager.unobserve(this.element);\n */\nclass ResizeObserverManager {\n  // protected to allow wrapper class in test file that extends this class\n  constructor() {\n    this.resizeObserver = new ResizeObserver(this.onResize.bind(this));\n    this.handlers = new WeakMap();\n  }\n  /**\n   * Static method to create an instance of ResizeObserverManager\n   */\n  static create() {\n    if (!ResizeObserverManager.instance) {\n      ResizeObserverManager.instance = new ResizeObserverManager();\n    }\n    return ResizeObserverManager.instance;\n  }\n  /**\n   * Static method to add a resize handler for a particular element\n   */\n  static addHandler(element, fn) {\n    this.create();\n    this.instance.addHandler(element, fn);\n  }\n  /**\n   * Static method to remove a particular resize handler for a particular element\n   */\n  static removeHandler(element, fn) {\n    if (this.instance) {\n      this.instance.removeHandler(element, fn);\n    }\n  }\n  /**\n   * Static method to remove all resize handlers for a particular element\n   */\n  static unobserve(element) {\n    if (this.instance) {\n      this.instance.unobserve(element);\n    }\n  }\n  /**\n   * Instance method to add a resize handler for a particular element\n   */\n  addHandler(element, fn) {\n    if (!this.handlers.has(element)) {\n      // if we are not already observing the element, initialize the handlers array and observe the element\n      this.handlers.set(element, []);\n      this.resizeObserver.observe(element);\n    }\n    // push the fn into the handlers array if it is not already there\n    const handlers = this.handlers.get(element);\n    if (!handlers.includes(fn)) {\n      handlers.push(fn);\n    }\n  }\n  /**\n   * Instance method to remove a particular resize handler for a particular element\n   */\n  removeHandler(element, fn) {\n    // conditionally destroy a handler if one exists for the given element and fn\n    if (this.handlers.has(element)) {\n      // if we are observing the element\n      const handlers = this.handlers.get(element);\n      const idx = handlers.indexOf(fn);\n      // filter out the fn\n      const newHandlers = handlers.filter((_, _idx) => _idx !== idx);\n      if (newHandlers.length) {\n        // if it is not the last handler for the element, set the filtered handlers as the new handlers array for the element\n        this.handlers.set(element, newHandlers);\n      }\n      else {\n        // if it is the last handler for the element, remove the handlers array and unobserve the element\n        this.handlers.delete(element);\n        this.resizeObserver.unobserve(element);\n      }\n    }\n  }\n  /**\n   * Instance method to remove all resize handlers for a particular element\n   */\n  unobserve(element) {\n    if (this.handlers.has(element)) {\n      // if we were observing the element, delete its handlers array and unobserve the element\n      this.handlers.delete(element);\n      this.resizeObserver.unobserve(element);\n    }\n  }\n  onResize(entries) {\n    // we wrap the callback in requestanimationframe to prevent an (benign) error related to the observer not being able to deliveer all observations within a single animation frame\n    requestAnimationFrame(_ => {\n      entries.forEach(e => {\n        var _a;\n        const handlers = (_a = this.handlers.get(e.target)) !== null && _a !== void 0 ? _a : [];\n        handlers.forEach(handler => handler());\n      });\n    });\n  }\n}\n\nexport { ResizeObserverManager as R };\n"],"names":["SLOTS","ArcgisHubContentHero","hostRef","registerInstance","this","showMap","orientationClass","bind","val","thumbnailUrl","extent","mediaClass","trim","intlManager","element","intl","ResizeObserverManager","handleResize","clientWidth","media","renderThumbnail","renderMap","h","class","alt","t","slot","src","basemap","graphics","heroTitle","name","Fragment","Host","hostClass","renderMedia","renderHeader","renderMain","renderFooter","getElement","style","ArcgisHubContentView","arcgisHubContentSelect","createEvent","arcgisHubContentViewClick","layout","isSelected","hasThumbnailError","entity","created","parseDate","modified","label","contentTypeLabel","includes","timestamp","formatDate","year","month","day","hour12","el","thumbnailEl","addEventListener","onError","removeEventListener","emit","content","result","showThumbnail","loading","icon","ref","setThumbnailEl","type","lastUpdatedDate","createdDate","viewUrl","href","onClick","onTitleLinkClick","target","newTab","title","event","isLoading","dir","direction","selectable","contentTypeIcon","renderContentTitle","owner","snippet","renderContentType","renderDateCreated","renderDateUpdated","renderLayout","ArcgisHubTimeline","stages","canCollapse","length","link","isCollapsed","undefined","shouldCollapse","handleCollapseExpandBtnClick","renderFirstThreeStages","renderCollapseExpandIconAndBtn","renderRemainingStages","stage","key","getIconForStatus","status","timeframe","stageDescription","renderStageLink","slice","map","renderStage","renderLastStage","renderExpandedStages","timelineTitle","description","renderStages","context","methodNames","forEach","methodName","Error","resizeObserver","ResizeObserver","onResize","handlers","WeakMap","fn","has","set","observe","get","push","idx","indexOf","newHandlers","filter","_","_idx","delete","unobserve","entries","requestAnimationFrame","e","_a","handler","instance","create","addHandler","removeHandler"],"sourceRoot":""}