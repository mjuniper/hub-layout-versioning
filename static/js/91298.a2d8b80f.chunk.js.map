{"version":3,"file":"static/js/91298.a2d8b80f.chunk.js","mappings":"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","sources":["../node_modules/@esri/hub-components/dist/esm/OperationError-85fd80c7.js","../node_modules/@esri/hub-components/dist/esm/append-custom-params-fd9b7e72.js","../node_modules/@esri/hub-components/dist/esm/arcgis-hub-new-content.entry.js","../node_modules/@esri/hub-components/dist/esm/get-f2cd18e7.js","../node_modules/@esri/hub-components/dist/esm/get-with-default-6db049d8.js","../node_modules/@esri/hub-components/dist/esm/tslib.es6-3669ad41.js"],"sourcesContent":["import { g as getWithDefault } from './get-with-default-6db049d8.js';\n\n/* Copyright (c) 2018-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Generic Solution Error with an Error stack as well\n * as an optional serialized OperationStack.\n *\n * Also accepts a `rootCause` Error object\n */\nclass OperationError extends Error {\n    /**\n     * Creates an instance of OperationError.\n     * @param {string} operation\n     * @param {string} [message]\n     * @param {Error} [rootCause]\n     * @memberof OperationError\n     */\n    constructor(operation, message, rootCause) {\n        message = message || \"UNKNOWN_ERROR\";\n        // if the rootCause has a .rootCause, use that so we don't deeply nest\n        rootCause = getWithDefault(rootCause, \"rootCause\", rootCause);\n        super(message);\n        this.operation = operation;\n        this.name = \"OperationError\";\n        this.rootCause = rootCause;\n        Object.setPrototypeOf(this, OperationError.prototype);\n        // using rootCause.stack ensures that the resulting error will have the original\n        // message + call stack. If that's not an option, we create a new\n        // stack... which is better than nothing, but it will look like\n        // OperationError is the source of the error\n        this.stack = getWithDefault(rootCause, \"stack\", new Error().stack);\n    }\n}\n\nexport { OperationError as O };\n","import { _ as __assign } from './request-c15cc2af.js';\n\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper for methods with lots of first order request options to pass through as request parameters.\n */\nfunction appendCustomParams(customOptions, keys, baseOptions) {\n    var requestOptionsKeys = [\n        \"params\",\n        \"httpMethod\",\n        \"rawResponse\",\n        \"authentication\",\n        \"portal\",\n        \"fetch\",\n        \"maxUrlLength\",\n        \"headers\"\n    ];\n    var options = __assign(__assign({ params: {} }, baseOptions), customOptions);\n    // merge all keys in customOptions into options.params\n    options.params = keys.reduce(function (value, key) {\n        if (customOptions[key] || typeof customOptions[key] === \"boolean\") {\n            value[key] = customOptions[key];\n        }\n        return value;\n    }, options.params);\n    // now remove all properties in options that don't exist in IRequestOptions\n    return requestOptionsKeys.reduce(function (value, key) {\n        if (options[key]) {\n            value[key] = options[key];\n        }\n        return value;\n    }, {});\n}\n\nexport { appendCustomParams as a };\n","import { r as registerInstance, c as createEvent, h, F as Fragment, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport { d as dist } from './index-910a8794.js';\nimport { d as capitalize } from './util-3c40fe6c.js';\nimport { c as getGeographicOrgExtent, a as extentToBBox } from './extent-0f42acfc.js';\nimport { c as createProject, g as getHubProjectEditorConfig } from './edit-8909959a.js';\nimport './index-4e91769f.js';\nimport './_commonjsHelpers-11ca3be1.js';\nimport './get-prop-d82e4fa6.js';\nimport './request-c15cc2af.js';\nimport './getPropertyMap-598a7bb8.js';\nimport './search-3af9e278.js';\nimport './generic-search-069e22da.js';\nimport './get-portal-url-423a76f5.js';\nimport './clean-url-be7c0879.js';\nimport './append-custom-params-fd9b7e72.js';\nimport './create-7cf3c372.js';\nimport './tslib.es6-3669ad41.js';\nimport './get-f2cd18e7.js';\nimport './get-with-default-6db049d8.js';\nimport './OperationError-85fd80c7.js';\nimport './get-portal-api-url-ccd8fd10.js';\nimport './update-fec93fc5.js';\nimport './fail-safe-1c23dad8.js';\nimport './set-prop-91329c47.js';\nimport './ProjectBusinessRules-bb655b17.js';\nimport './get-item-thumbnail-url-7e5ae2fd.js';\nimport './interpolate-501f9adb.js';\n\nconst arcgisHubNewContentCss = \".sc-arcgis-hub-new-content-h{display:block}.sc-arcgis-hub-new-content-h:not([unthemed]) calcite-dropdown.sc-arcgis-hub-new-content{--calcite-ui-background:#f8f8f8;--calcite-ui-foreground-1:#ffffff;--calcite-ui-foreground-2:#f3f3f3}.sc-arcgis-hub-new-content-h:not([unthemed]) .hub-new-content_dropdown-group.sc-arcgis-hub-new-content{--calcite-ui-brand:var(--calcite-ui-border-1);--calcite-ui-text-1:#151515;--calcite-ui-text-2:#4a4a4a;--calcite-ui-text-3:#6a6a6a;--calcite-ui-border-1:#cacaca;--calcite-ui-border-3:#dfdfdf;--calcite-ui-text-link:#151515;--calcite-link-blue-underline:#151515}.hub-new-content_dropdown-group.sc-arcgis-hub-new-content:not(.mobile){max-width:20rem}.hub-new-content_dropdown-item.sc-arcgis-hub-new-content{display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding-top:0.25rem;padding-bottom:0.25rem}.hub-new-content_dropdown-item--left.sc-arcgis-hub-new-content{display:flex}.hub-new-content_dropdown-item-content.sc-arcgis-hub-new-content{display:flex;flex-direction:column}.hub-new-content_dropdown-item-icon.sc-arcgis-hub-new-content{height:70px;width:70px;margin-right:0.75rem;display:flex;align-items:center;background-color:var(--calcite-ui-background)}.hub-new-content_dropdown-item-icon.sc-arcgis-hub-new-content calcite-icon.sc-arcgis-hub-new-content{width:70px}.hub-new-content_dropdown-item-title.sc-arcgis-hub-new-content,.hub-new-content_dropdown-item-description.sc-arcgis-hub-new-content,calcite-dropdown-item.sc-arcgis-hub-new-content calcite-link.sc-arcgis-hub-new-content{font-family:var(--calcite-sans-family);font-weight:var(--calcite-font-weight-normal);font-size:var(--calcite-font-size--1);line-height:1.375rem;white-space:normal;overflow-wrap:break-word}.hub-new-content_dropdown-item-title.sc-arcgis-hub-new-content{margin-bottom:0.25rem;font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-1)}.hub-new-content_dropdown-item-description.sc-arcgis-hub-new-content{color:var(--calcite-ui-text-2)}\";\n\nconst ArcgisHubNewContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubNewContentSuccess = createEvent(this, \"arcgisHubNewContentSuccess\", 7);\n    this.hubTelemetry = createEvent(this, \"hubTelemetry\", 7);\n    /**\n     * array of content entities\n     * @type {IHubNewContentEntity[]}\n     * @memberof ArcgisHubNewContent\n     */\n    this.entities = [];\n    /**\n     * array of resource links to render below\n     * the content create buttons in the dropdown\n     * @type {IHubNewContentResourceLink[]}\n     * @memberof ArcgisHubNewContent\n     */\n    this.resourceLinks = [];\n    /**\n     * optional prop to force button to render as a\n     * dropdown even if there's only a single entity.\n     * If there's more than 1 entity, a dropdown will\n     * render by default\n     * @type {boolean}\n     * @memberof ArcgisHubNewContent\n     */\n    this.renderAsDropdown = false;\n    this.isMobile = false;\n    this.isLoading = false;\n    this.isFormOpen = false;\n    this.isMobileDropdownOpen = false;\n    bind(this, 'onOpenFormButtonClick', 'toggleForm', 'getDynamicProjectConfig', 'createProject', 'onOpenMobileDropdownButtonClick', 'onCloseMobileDropdownButttonClick', 'handleDropdownSelect', 'handleResourceLinkClick', 'handleCalciteDropdownRef');\n  }\n  handleArcgisHubNewContentModalClosed() {\n    this.toggleForm(false);\n    this.selectedEntityIdx = null;\n  }\n  async handleArcgisHubNewContentModalSaved(evt) {\n    let newContent;\n    try {\n      this.isLoading = true;\n      newContent = this.entityFunctions && await this.entityFunctions.create(evt.detail);\n      this.isFormOpen = false;\n      this.arcgisHubNewContentSuccess.emit(newContent);\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.content.action.create), { response: dist.constants.response.SUCCESS, id: newContent.id, type: newContent.type }));\n    }\n    catch (error) {\n      this.error = error.toString();\n      this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.content.action.create), { response: dist.constants.response.FAILURE }));\n    }\n    finally {\n      this.isLoading = false;\n    }\n  }\n  get isSingleEntity() {\n    return this.entities.length === 1;\n  }\n  /**\n   * keep track of the selected entity based on what the user\n   * selects from the dropdown menu. Or, if there is only a\n   * single entity, set that as the selected entity\n   */\n  get selectedEntity() {\n    return this.isSingleEntity\n      ? this.entities[0]\n      : this.entities[this.selectedEntityIdx];\n  }\n  get entityKey() {\n    var _a;\n    return (_a = this.selectedEntity) === null || _a === void 0 ? void 0 : _a.key;\n  }\n  /**\n   * returns a collection of entity functions based on the\n   * selected entity. As we continue to support additional\n   * entities in the in-place creation workflow, this\n   * hash will grow\n   */\n  get entityFunctions() {\n    var _a;\n    const entityFunctionMap = {\n      project: {\n        create: this.createProject,\n        getEditorConfig: getHubProjectEditorConfig,\n        getDynamicEditorConfig: this.getDynamicProjectConfig\n      }\n    };\n    return entityFunctionMap[(_a = this.selectedEntity) === null || _a === void 0 ? void 0 : _a.key];\n  }\n  get hasResourceLinks() {\n    return !!this.resourceLinks.length;\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n  }\n  handleDropdownSelect(evt) {\n    const el = evt.currentTarget;\n    this.selectedEntityIdx = el.getAttribute('data-index');\n    this.handleSelectedEntity(this.selectedEntity);\n  }\n  handleResourceLinkClick(evt) {\n    const el = evt.currentTarget;\n    const key = el.getAttribute('data-value');\n    const telemetry = dist.dictionary.category.navigation.action.new.label.content.details[key];\n    telemetry && this.hubTelemetry.emit(telemetry);\n  }\n  /**\n   * when an entity is selected from the dropdown, we either\n   * redirect to the entity's provided href, or we open the\n   * creation form in-place\n   */\n  handleSelectedEntity(selectedEntity) {\n    if (selectedEntity.href) {\n      dist.dictionary.category.navigation.action.new.label.content.details[selectedEntity.key]\n        ? this.hubTelemetry.emit(dist.dictionary.category.navigation.action.new.label.content.details[selectedEntity.key])\n        : this.hubTelemetry.emit(dist.dictionary.category.navigation.action.new.label.content);\n    }\n    else {\n      this.toggleForm(true);\n    }\n  }\n  /**\n   * workaround for dropdown scrolling issue. Technically this should be addressed\n   * by passing in the max-items prop to the dropdown, but there are a couple issues\n   * on calcite's end:\n   * https://github.com/Esri/calcite-components/issues/6230\n   * https://github.com/Esri/calcite-components/issues/6242\n   * TODO: remove when calcite issues are addressed\n   */\n  handleCalciteDropdownRef(dropdown) {\n    if (dropdown.shadowRoot && !dropdown.shadowRoot.querySelector('style[data-hub]')) {\n      const style = document.createElement(\"style\");\n      style.dataset.hub = \"\";\n      style.innerHTML = \".calcite-dropdown-content { max-block-size: max-content !important; }\";\n      dropdown.shadowRoot.appendChild(style);\n    }\n  }\n  /**\n   * if an entity has an in-place creation form (rather than a\n   * redirect link), we load and open that form in a modal\n   */\n  async toggleForm(isOpen) {\n    this.isMobileDropdownOpen = false;\n    this.isFormOpen = isOpen;\n    if (isOpen) {\n      try {\n        this.isLoading = true;\n        this.form = await this.loadForm();\n        /**\n         * Note: if we support more entities in this modal workflow,\n         * we will need to add dictionary entries for them that follow\n         * this convension so that we log telemetry when the creation\n         * modal is opened/closed\n         */\n        this.selectedEntity && this.hubTelemetry.emit(isOpen\n          ? dist.dictionary.category.interaction.action.open.label.modal.details[`create${capitalize(this.selectedEntity.key)}`]\n          : dist.dictionary.category.interaction.action.close.label.modal.details[`create${capitalize(this.selectedEntity.key)}`]);\n      }\n      catch (error) {\n        this.error = error.toString();\n      }\n      finally {\n        this.isLoading = false;\n      }\n    }\n  }\n  /**\n   * fetch the entity-specific editor configuration and return\n   * and entity-specific form configuration\n   */\n  async loadForm() {\n    var _a, _b;\n    const { defaults, options } = this.entityFunctions && await this.entityFunctions.getDynamicEditorConfig();\n    const schemas = this.entityFunctions && await this.entityFunctions.getEditorConfig(this.entityKey, 'create', options);\n    const entityFormHash = {\n      project: Object.assign({ title: (_a = this.intl) === null || _a === void 0 ? void 0 : _a.t('project.form.title'), description: (_b = this.intl) === null || _b === void 0 ? void 0 : _b.t('project.form.description'), icon: 'projects', values: Object.assign({}, defaults) }, schemas)\n    };\n    return entityFormHash[this.entityKey];\n  }\n  /**\n   * TODO: I feel like this logic should live on the project class?\n   * i.e. have a ProjectInstance.getEditorConfigOptions and a\n   * ProjectInstance.getEditorDefaults which essentially return\n   * what's returned here. Then we can reference those functions\n   * directly from the entityFunctions like how we call\n   * getEditorConfig directly\n   */\n  async getDynamicProjectConfig() {\n    const defaultExtent = this.context && await getGeographicOrgExtent(this.context.hubRequestOptions);\n    return {\n      defaults: {\n        extent: defaultExtent\n      },\n      options: [\n        {\n          scope: '/properties/extent',\n          options: {\n            sources: [\n              {\n                value: 'none'\n              },\n              {\n                selected: true,\n                value: 'item',\n                label: 'Organizations Extent',\n                graphic: { geometry: Object.assign({ type: 'extent' }, defaultExtent) }\n              }\n            ]\n          }\n        }\n      ]\n    };\n  }\n  onOpenFormButtonClick() {\n    this.toggleForm(true);\n  }\n  onOpenMobileDropdownButtonClick() {\n    this.isMobileDropdownOpen = true;\n  }\n  onCloseMobileDropdownButttonClick() {\n    this.isMobileDropdownOpen = false;\n  }\n  /**\n   * This function encapsulates the logic for creating a project. This does not\n   * yet include any sharing/permissions logic.\n   * Note: when creating this component, there were conflicting opinions on where\n   * this logic should live, i.e. in this component or within the consuming application\n   * (either directly or passed in as part of IHubNewContentEntity). The thought behind having\n   * it live directly within this component was to allow for easier reusability within\n   * opendata-ui; however, this may be something we want to reconsider as we need to scale\n   * this component to accommodate other entities\n   */\n  async createProject(project) {\n    const { extent } = project;\n    project.orgUrlKey = this.context.portal.urlKey;\n    project.extent = extent && extentToBBox(extent);\n    return createProject(project, this.context.userRequestOptions);\n  }\n  /**\n   * render the main \"New\" dropdown button:\n   * - if we're on a mobile device, this will render as a \"+\" button\n   * - if there's only a single entity, and we haven't specified that\n   * it should render as a dropdown, we render a simple calcite button\n   * - if there are multiple entities, we render a calcite dropdown\n   */\n  renderButton(entities, resourceLinks) {\n    let button;\n    if (this.isMobile) {\n      button = h(\"calcite-button\", { appearance: this.buttonAppearance, color: this.buttonColor, onClick: this.onOpenMobileDropdownButtonClick, scale: this.buttonScale }, h(\"calcite-icon\", { icon: \"plus\", scale: this.buttonScale }));\n    }\n    else {\n      button = this.isSingleEntity && !this.renderAsDropdown\n        ? h(\"calcite-button\", { appearance: this.buttonAppearance, color: this.buttonColor, href: entities[0].href, onClick: this.onOpenFormButtonClick, scale: this.buttonScale }, entities[0].label)\n        : this.renderDropdown(entities, resourceLinks);\n    }\n    return button;\n  }\n  renderDropdown(entities, resourceLinks) {\n    return (h(\"calcite-dropdown\", { ref: this.handleCalciteDropdownRef }, h(\"calcite-button\", { appearance: this.buttonAppearance, color: this.buttonColor, \"icon-end\": \"caret-down\", scale: this.buttonScale, slot: \"dropdown-trigger\" }, this.intl.t('new')), this.renderDropdownContent(entities, resourceLinks)));\n  }\n  renderDropdownContent(entities, resourceLinks) {\n    return (h(Fragment, null, this.renderEntityItems(entities), this.hasResourceLinks && this.renderResourceLinks(resourceLinks)));\n  }\n  renderEntityItems(entities) {\n    return (h(\"calcite-dropdown-group\", { class: { \"hub-new-content_dropdown-group\": true, \"mobile\": this.isMobile }, \"selection-mode\": \"none\" }, entities.map((entity, idx) => this.renderEntityItem(entity, idx))));\n  }\n  renderEntityItem(entity, index) {\n    return (h(\"calcite-dropdown-item\", { active: entity.key === this.entityKey, \"data-index\": index, \"data-value\": entity.key, href: entity.href, key: entity.key, onClick: this.handleDropdownSelect }, h(\"div\", { class: \"hub-new-content_dropdown-item\" }, h(\"div\", { class: \"hub-new-content_dropdown-item--left\" }, h(\"div\", { class: \"hub-new-content_dropdown-item-icon\" }, h(\"calcite-icon\", { icon: entity.icon, scale: \"l\" })), h(\"div\", { class: \"hub-new-content_dropdown-item-content\" }, h(\"div\", { class: \"hub-new-content_dropdown-item-title\" }, entity.label), h(\"div\", { class: \"hub-new-content_dropdown-item-description\" }, entity.description))))));\n  }\n  renderResourceLinks(resourceLinks) {\n    return (h(\"calcite-dropdown-group\", { class: { \"hub-new-content_dropdown-group\": true, \"mobile\": this.isMobile }, \"selection-mode\": \"none\" }, resourceLinks.map(resourceLink => this.renderResourceLink(resourceLink))));\n  }\n  renderResourceLink(resourceLink) {\n    return (h(\"calcite-dropdown-item\", { \"data-value\": resourceLink.key, href: resourceLink.href, key: resourceLink.label, onClick: this.handleResourceLinkClick }, h(\"calcite-link\", null, resourceLink.label)));\n  }\n  /**\n   * if an entity has an in-place creation form, we render\n   * it in the arcgis-hub-new-content-modal\n   */\n  renderNewContentModal() {\n    return (h(\"arcgis-wormhole\", null, h(\"arcgis-hub-new-content-modal\", { error: this.error, form: this.form, isLoading: this.isLoading, isOpen: this.isFormOpen })));\n  }\n  /**\n   * render the \"dropdown\" modal that opens when a user\n   * is on a mobile device. We render the entities and\n   * resource links in exactly the same way as non-mobile,\n   * we just render them in a modal instead of a dropdown\n   */\n  renderMobileModal(entities, resourceLinks) {\n    return (h(\"calcite-modal\", { onCalciteModalClose: this.onCloseMobileDropdownButttonClick, open: this.isMobileDropdownOpen }, h(\"div\", { slot: \"header\" }, this.intl.t('new')), h(\"div\", { slot: \"content\" }, this.renderDropdownContent(entities, resourceLinks))));\n  }\n  render() {\n    const entity = this.isSingleEntity ? this.entities[0] : this.selectedEntity;\n    return (h(Host, { \"data-element\": \"new-content\" }, !!this.entities.length && this.renderButton(this.entities, this.resourceLinks), entity && this.renderNewContentModal(), this.isMobile && this.renderMobileModal(this.entities, this.resourceLinks)));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n};\nArcgisHubNewContent.style = arcgisHubNewContentCss;\n\nexport { ArcgisHubNewContent as arcgis_hub_new_content };\n","import { _ as __assign } from './tslib.es6-3669ad41.js';\nimport { g as getPortalUrl } from './get-portal-url-423a76f5.js';\nimport { r as request } from './request-c15cc2af.js';\nimport { a as appendCustomParams } from './append-custom-params-fd9b7e72.js';\n\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Serialize an item and its data into a json format accepted by the Portal API for create and update operations\n *\n * @param item Item to be serialized\n * @returns a formatted json object to be sent to Portal\n */\nfunction serializeItem(item) {\n    // create a clone so we're not messing with the original\n    var clone = JSON.parse(JSON.stringify(item));\n    // binary data needs POSTed as a `file`\n    // JSON object literals should be passed as `text`.\n    if (clone.data) {\n        (typeof Blob !== \"undefined\" && item.data instanceof Blob) ||\n            // Node.js doesn't implement Blob\n            item.data.constructor.name === \"ReadStream\"\n            ? (clone.file = item.data)\n            : (clone.text = item.data);\n        delete clone.data;\n    }\n    return clone;\n}\n/**\n * `requestOptions.owner` is given priority, `requestOptions.item.owner` will be checked next. If neither are present, `authentication.getUserName()` will be used instead.\n */\nfunction determineOwner(requestOptions) {\n    if (requestOptions.owner) {\n        return Promise.resolve(requestOptions.owner);\n    }\n    else if (requestOptions.item && requestOptions.item.owner) {\n        return Promise.resolve(requestOptions.item.owner);\n    }\n    else if (requestOptions.authentication &&\n        requestOptions.authentication.getUsername) {\n        return requestOptions.authentication.getUsername();\n    }\n    else {\n        return Promise.reject(new Error(\"Could not determine the owner of this item. Pass the `owner`, `item.owner`, or `authentication` option.\"));\n    }\n}\n/**\n * checks if the extent is a valid BBox (2 element array of coordinate pair arrays)\n * @param extent\n * @returns\n */\nfunction isBBox(extent) {\n    return (Array.isArray(extent) &&\n        Array.isArray(extent[0]) &&\n        Array.isArray(extent[1]));\n}\n/**\n * Given a Bbox, convert it to a string. Some api endpoints expect a string\n *\n * @param {BBox} extent\n * @return {*}  {string}\n */\nfunction bboxToString(extent) {\n    return extent.join(\",\");\n}\n\n// eslint-disable-next-line no-control-regex\nvar CONTROL_CHAR_MATCHER = /[\\x00-\\x1F\\x7F-\\x9F\\xA0]/g;\n/**\n * Returns a new string with all control characters removed.\n *\n * Doesn't remove characters from input string.\n *\n * @param str - the string to scrub\n */\nfunction scrubControlChars(str) {\n    return str.replace(CONTROL_CHAR_MATCHER, \"\");\n}\n\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * ```\n * import { getItem } from \"@esri/arcgis-rest-portal\";\n * //\n * getItem(\"ae7\")\n *   .then(response);\n * // or\n * getItem(\"ae7\", { authentication })\n *   .then(response)\n * ```\n * Get an item by id. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item.htm) for more information.\n *\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction getItem(id, requestOptions) {\n    var url = getItemBaseUrl(id, requestOptions);\n    // default to a GET request\n    var options = __assign({ httpMethod: \"GET\" }, requestOptions);\n    return request(url, options);\n}\n/**\n * Get the fully qualified base URL to the REST end point for an item.\n * @param id Item Id\n * @param portalUrlOrRequestOptions a portal URL or request options\n * @returns URL to the item's REST end point, defaults to `https://www.arcgis.com/sharing/rest/content/items/{id}`\n */\nvar getItemBaseUrl = function (id, portalUrlOrRequestOptions) {\n    var portalUrl = typeof portalUrlOrRequestOptions === \"string\"\n        ? portalUrlOrRequestOptions\n        : getPortalUrl(portalUrlOrRequestOptions);\n    return portalUrl + \"/content/items/\" + id;\n};\n/**\n * ```\n * import { getItemData } from \"@esri/arcgis-rest-portal\";\n * //\n * getItemData(\"ae7\")\n *   .then(response)\n * // or\n * getItemData(\"ae7\", { authentication })\n *   .then(response)\n * ```\n * Get the /data for an item. If no data exists, returns `undefined`. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item-data.htm) for more information.\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the json data for the item.\n */\nfunction getItemData(id, requestOptions) {\n    var url = getItemBaseUrl(id, requestOptions) + \"/data\";\n    // default to a GET request\n    var options = __assign({ httpMethod: \"GET\", params: {} }, requestOptions);\n    if (options.file) {\n        options.params.f = null;\n    }\n    return request(url, options).catch(function (err) {\n        /* if the item doesn't include data, the response will be empty\n           and the internal call to response.json() will fail */\n        var emptyResponseErr = RegExp(/The string did not match the expected pattern|(Unexpected end of (JSON input|data at line 1 column 1))/i);\n        /* istanbul ignore else */\n        if (emptyResponseErr.test(err.message)) {\n            return;\n        }\n        else\n            throw err;\n    });\n}\n/**\n * Get the resources associated with an item\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to get some item resources.\n */\nfunction getItemResources(id, requestOptions) {\n    var url = getItemBaseUrl(id, requestOptions) + \"/resources\";\n    // Mix in num:1000 with any user supplied params\n    // Key thing - we don't want to mutate the passed in requestOptions\n    // as that may be used in other (subsequent) calls in the course\n    // of a long promise chains\n    var options = __assign({}, requestOptions);\n    options.params = __assign({ num: 1000 }, options.params);\n    return request(url, options);\n}\n/**\n * ```js\n * import { getItemResource } from \"@esri/arcgis-rest-portal\";\n *\n * // Parses contents as blob by default\n * getItemResource(\"3ef\", { fileName: \"resource.jpg\", ...})\n *  .then(resourceContents => {});\n *\n * // Can override parse method\n * getItemResource(\"3ef\", { fileName: \"resource.json\", readAs: 'json', ...})\n *  .then(resourceContents => {});\n *\n * // Get the response object instead\n * getItemResource(\"3ef\",{ rawResponse: true, fileName: \"resource.json\" })\n *  .then(response => {})\n * ```\n * Fetches an item resource and optionally parses it to the correct format.\n *\n * Note: provides JSON parse error protection by sanitizing out any unescaped control\n * characters before parsing that would otherwise cause an error to be thrown\n *\n * @param {string} itemId\n * @param {IGetItemResourceOptions} requestOptions\n */\nfunction getItemResource(itemId, requestOptions) {\n    var readAs = requestOptions.readAs || 'blob';\n    return getItemFile(itemId, \"/resources/\" + requestOptions.fileName, readAs, requestOptions);\n}\n/**\n * ```js\n * import { getItemGroups } from \"@esri/arcgis-rest-portal\";\n * //\n * getItemGroups(\"30e5fe3149c34df1ba922e6f5bbf808f\")\n *   .then(response)\n * ```\n * Lists the groups of which the item is a part, only showing the groups that the calling user can access. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/groups.htm) for more information.\n *\n * @param id - The Id of the item to query group association for.\n * @param requestOptions - Options for the request\n * @returns A Promise to get some item groups.\n */\nfunction getItemGroups(id, requestOptions) {\n    var url = getItemBaseUrl(id, requestOptions) + \"/groups\";\n    return request(url, requestOptions);\n}\n/**\n * ```js\n * import { getItemStatus } from \"@esri/arcgis-rest-portal\";\n * //\n * getItemStatus({\n *   id: \"30e5fe3149c34df1ba922e6f5bbf808f\",\n *   authentication\n * })\n *   .then(response)\n * ```\n * Inquire about status when publishing an item, adding an item in async mode, or adding with a multipart upload. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/status.htm) for more information.\n *\n * @param id - The Id of the item to get status for.\n * @param requestOptions - Options for the request\n * @returns A Promise to get the item status.\n */\nfunction getItemStatus(requestOptions) {\n    return determineOwner(requestOptions).then(function (owner) {\n        var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/status\";\n        var options = appendCustomParams(requestOptions, [\"jobId\", \"jobType\"], { params: __assign({}, requestOptions.params) });\n        return request(url, options);\n    });\n}\n/**\n * ```\n * import { getItemInfo } from \"@esri/arcgis-rest-portal\";\n * // get the \"Info Card\" for the item\n * getItemInfo(\"ae7\")\n *   .then(itemInfoXml) // XML document as a string\n * // or get the contents of a specific file\n * getItemInfo(\"ae7\", { fileName: \"form.json\", readAs: \"json\", authentication })\n *   .then(formJson) // JSON document as JSON\n * ```\n * Get an info file for an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item-info-file.htm) for more information.\n * @param id - Item Id\n * @param requestOptions - Options for the request, including the file name which defaults to `iteminfo.xml`.\n * If the file is not a text file (XML, HTML, etc) you will need to specify the `readAs` parameter\n * @returns A Promise that will resolve with the contents of the info file for the item.\n */\nfunction getItemInfo(id, requestOptions) {\n    var _a = requestOptions || {}, _b = _a.fileName, fileName = _b === void 0 ? \"iteminfo.xml\" : _b, _c = _a.readAs, readAs = _c === void 0 ? \"text\" : _c;\n    var options = __assign({ httpMethod: \"GET\" }, requestOptions);\n    return getItemFile(id, \"/info/\" + fileName, readAs, options);\n}\n/**\n * ```\n * import { getItemMetadata } from \"@esri/arcgis-rest-portal\";\n * // get the metadata for the item\n * getItemMetadata(\"ae7\")\n *   .then(itemMetadataXml) // XML document as a string\n * // or with additional request options\n * getItemMetadata(\"ae7\", { authentication })\n *   .then(itemMetadataXml) // XML document as a string\n * ```\n * Get the standard formal metadata XML file for an item (`/info/metadata/metadata.xml`)\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the contents of the metadata file for the item as a string.\n */\nfunction getItemMetadata(id, requestOptions) {\n    var options = __assign(__assign({}, requestOptions), { fileName: \"metadata/metadata.xml\" });\n    return getItemInfo(id, options);\n}\n// overrides request()'s default behavior for reading the response\n// which is based on `params.f` and defaults to JSON\n// Also adds JSON parse error protection by sanitizing out any unescaped control characters before parsing\nfunction getItemFile(id, \n// NOTE: fileName should include any folder/subfolders\nfileName, readMethod, requestOptions) {\n    var url = \"\" + getItemBaseUrl(id, requestOptions) + fileName;\n    // preserve escape hatch to let the consumer read the response\n    // and ensure the f param is not appended to the query string\n    var options = __assign({ params: {} }, requestOptions);\n    var justReturnResponse = options.rawResponse;\n    options.rawResponse = true;\n    options.params.f = null;\n    return request(url, options).then(function (response) {\n        if (justReturnResponse) {\n            return response;\n        }\n        return readMethod !== 'json'\n            ? response[readMethod]()\n            : response.text().then(function (text) { return JSON.parse(scrubControlChars(text)); });\n    });\n}\n\nexport { getItemGroups as a, bboxToString as b, getItemData as c, determineOwner as d, getItemMetadata as e, getItemResources as f, getItem as g, getItemResource as h, isBBox as i, getItemStatus as j, serializeItem as s };\n","import { g as getProp } from './get-prop-d82e4fa6.js';\n\n/**\n * Gets the value of a property from an object with a\n * default if that prop is undefined\n * @param obj\n * @param prop\n * @param def\n */\nfunction getWithDefault(obj, prop, def) {\n    const res = getProp(obj, prop);\n    return res !== undefined ? res : def;\n}\n\nexport { getWithDefault as g };\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nexport { __assign as _, __spreadArrays as a };\n"],"names":["OperationError","operation","message","rootCause","getWithDefault","name","Object","setPrototypeOf","prototype","stack","Error","appendCustomParams","customOptions","keys","baseOptions","options","__assign","params","reduce","value","key","ArcgisHubNewContent","hostRef","registerInstance","this","arcgisHubNewContentSuccess","createEvent","hubTelemetry","entities","resourceLinks","renderAsDropdown","isMobile","isLoading","isFormOpen","isMobileDropdownOpen","bind","toggleForm","selectedEntityIdx","evt","entityFunctions","create","detail","newContent","emit","assign","dist","response","id","type","error","toString","length","isSingleEntity","_a","selectedEntity","project","createProject","getEditorConfig","getHubProjectEditorConfig","getDynamicEditorConfig","getDynamicProjectConfig","intlManager","element","intl","el","currentTarget","getAttribute","handleSelectedEntity","telemetry","href","dropdown","shadowRoot","querySelector","style","document","createElement","dataset","hub","innerHTML","appendChild","isOpen","loadForm","form","capitalize","defaults","entityKey","schemas","entityFormHash","title","t","description","_b","icon","values","context","getGeographicOrgExtent","hubRequestOptions","defaultExtent","extent","scope","sources","selected","label","graphic","geometry","orgUrlKey","portal","urlKey","extentToBBox","userRequestOptions","h","appearance","buttonAppearance","color","buttonColor","onClick","onOpenMobileDropdownButtonClick","scale","buttonScale","onOpenFormButtonClick","renderDropdown","ref","handleCalciteDropdownRef","slot","renderDropdownContent","Fragment","renderEntityItems","hasResourceLinks","renderResourceLinks","class","map","entity","idx","renderEntityItem","index","active","handleDropdownSelect","resourceLink","renderResourceLink","handleResourceLinkClick","onCalciteModalClose","onCloseMobileDropdownButttonClick","open","Host","renderButton","renderNewContentModal","renderMobileModal","getElement","serializeItem","item","clone","JSON","parse","stringify","data","Blob","constructor","file","text","determineOwner","requestOptions","owner","Promise","resolve","authentication","getUsername","reject","isBBox","Array","isArray","bboxToString","join","CONTROL_CHAR_MATCHER","getItem","url","getItemBaseUrl","httpMethod","request","portalUrlOrRequestOptions","getPortalUrl","getItemData","f","catch","err","RegExp","test","getItemResources","num","getItemResource","itemId","readAs","getItemFile","fileName","getItemGroups","getItemStatus","then","getItemMetadata","_c","getItemInfo","readMethod","justReturnResponse","rawResponse","replace","obj","prop","def","res","getProp","undefined","s","i","n","arguments","p","hasOwnProperty","call","apply","__spreadArrays","il","r","k","a","j","jl"],"sourceRoot":""}