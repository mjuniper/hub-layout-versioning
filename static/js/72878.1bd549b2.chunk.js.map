{"version":3,"file":"static/js/72878.1bd549b2.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/chunks/earcut.js","../node_modules/@arcgis/core/chunks/vec4f32.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushOverlay.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushFill.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushDotDensity.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushPieChart.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLabel.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLine.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushText.js","../node_modules/@arcgis/core/views/2d/engine/brushes.js","../node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/config.js","../node_modules/@arcgis/core/views/2d/engine/webgl/DefaultVertexAttributeLayouts.js","../node_modules/@arcgis/core/views/2d/engine/webgl/VertexStream.js","../node_modules/@arcgis/core/views/2d/engine/webgl/Mesh2D.js","../node_modules/@arcgis/core/views/2d/engine/webgl/ClippingInfo.js","../node_modules/@arcgis/core/views/2d/engine/webgl/WGLContainer.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushBitmap.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushHeatmap.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushInfo.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushMarker.js","../node_modules/@arcgis/core/views/2d/engine/webgl/effects/Effect.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js","../node_modules/@arcgis/core/views/webgl/ProgramTemplate.js","../node_modules/@arcgis/core/views/webgl/heatmapTextureUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nvar e,n,t,r={},x={get exports(){return r},set exports(e){r=e}};e=x,n=function(){function e(e,t,x){x=x||2;var i,u,v,y,o,p,a,l=t&&t.length,h=l?t[0]*x:e.length,s=n(e,0,h,x,!0),c=[];if(!s||s.next===s.prev)return c;if(l&&(s=f(e,t,s,x)),e.length>80*x){i=v=e[0],u=y=e[1];for(var Z=x;Z<h;Z+=x)(o=e[Z])<i&&(i=o),(p=e[Z+1])<u&&(u=p),o>v&&(v=o),p>y&&(y=p);a=0!==(a=Math.max(v-i,y-u))?1/a:0}return r(s,c,x,i,u,a),c}function n(e,n,t,r,x){var i,u;if(x===E(e,n,t,r)>0)for(i=n;i<t;i+=r)u=B(i,e[i],e[i+1],u);else for(i=t-r;i>=n;i-=r)u=B(i,e[i],e[i+1],u);if(u&&M(u,u.next)){var v=u.next;C(u),u=v}return u}function t(e,n){if(!e)return e;n||(n=e);var t,r=e;do{if(t=!1,r.steiner||!M(r,r.next)&&0!==w(r.prev,r,r.next))r=r.next;else{var x=r.prev;if(C(r),(r=n=x)===r.next)break;t=!0}}while(t||r!==n);return n}function r(e,n,f,y,o,p,a){if(e){!a&&p&&h(e,y,o,p);for(var l,s,c=e;e.prev!==e.next;)if(l=e.prev,s=e.next,p?i(e,y,o,p):x(e))n.push(l.i/f),n.push(e.i/f),n.push(s.i/f),C(e),e=s.next,c=s.next;else if((e=s)===c){a?1===a?r(e=u(t(e),n,f),n,f,y,o,p,2):2===a&&v(e,n,f,y,o,p):r(t(e),n,f,y,o,p,1);break}}}function x(e){var n=e.prev,t=e,r=e.next;if(w(n,t,r)>=0)return!1;for(var x=e.next.next;x!==e.prev;){if(g(n.x,n.y,t.x,t.y,r.x,r.y,x.x,x.y)&&w(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function i(e,n,t,r){var x=e.prev,i=e,u=e.next;if(w(x,i,u)>=0)return!1;for(var v=x.x<i.x?x.x<u.x?x.x:u.x:i.x<u.x?i.x:u.x,f=x.y<i.y?x.y<u.y?x.y:u.y:i.y<u.y?i.y:u.y,y=x.x>i.x?x.x>u.x?x.x:u.x:i.x>u.x?i.x:u.x,o=x.y>i.y?x.y>u.y?x.y:u.y:i.y>u.y?i.y:u.y,p=c(v,f,n,t,r),a=c(y,o,n,t,r),l=e.prevZ,h=e.nextZ;l&&l.z>=p&&h&&h.z<=a;){if(l!==e.prev&&l!==e.next&&g(x.x,x.y,i.x,i.y,u.x,u.y,l.x,l.y)&&w(l.prev,l,l.next)>=0)return!1;if(l=l.prevZ,h!==e.prev&&h!==e.next&&g(x.x,x.y,i.x,i.y,u.x,u.y,h.x,h.y)&&w(h.prev,h,h.next)>=0)return!1;h=h.nextZ}for(;l&&l.z>=p;){if(l!==e.prev&&l!==e.next&&g(x.x,x.y,i.x,i.y,u.x,u.y,l.x,l.y)&&w(l.prev,l,l.next)>=0)return!1;l=l.prevZ}for(;h&&h.z<=a;){if(h!==e.prev&&h!==e.next&&g(x.x,x.y,i.x,i.y,u.x,u.y,h.x,h.y)&&w(h.prev,h,h.next)>=0)return!1;h=h.nextZ}return!0}function u(e,n,r){var x=e;do{var i=x.prev,u=x.next.next;!M(i,u)&&z(i,x,x.next,u)&&j(i,u)&&j(u,i)&&(n.push(i.i/r),n.push(x.i/r),n.push(u.i/r),C(x),C(x.next),x=e=u),x=x.next}while(x!==e);return t(x)}function v(e,n,x,i,u,v){var f=e;do{for(var y=f.next.next;y!==f.prev;){if(f.i!==y.i&&d(f,y)){var o=A(f,y);return f=t(f,f.next),o=t(o,o.next),r(f,n,x,i,u,v),void r(o,n,x,i,u,v)}y=y.next}f=f.next}while(f!==e)}function f(e,r,x,i){var u,v,f,o=[];for(u=0,v=r.length;u<v;u++)(f=n(e,r[u]*i,u<v-1?r[u+1]*i:e.length,i,!1))===f.next&&(f.steiner=!0),o.push(Z(f));for(o.sort(y),u=0;u<o.length;u++)x=t(x=p(o[u],x),x.next);return x}function y(e,n){return e.x-n.x}function o(e){if(e.next.prev===e)return e;let n=e;for(;;){const t=n.next;if(t.prev===n||t===n||t===e)break;n=t}return n}function p(e,n){var r=a(e,n);if(!r)return n;var x=A(r,e),i=t(r,r.next);let u=o(x);return t(u,u.next),i=o(i),o(n===r?i:n)}function a(e,n){var t,r=n,x=e.x,i=e.y,u=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var v=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(v<=x&&v>u){if(u=v,v===x){if(i===r.y)return r;if(i===r.next.y)return r.next}t=r.x<r.next.x?r:r.next}}r=r.next}while(r!==n);if(!t)return null;if(x===u)return t;var f,y=t,o=t.x,p=t.y,a=1/0;r=t;do{x>=r.x&&r.x>=o&&x!==r.x&&g(i<p?x:u,i,o,p,i<p?u:x,i,r.x,r.y)&&(f=Math.abs(i-r.y)/(x-r.x),j(r,e)&&(f<a||f===a&&(r.x>t.x||r.x===t.x&&l(t,r)))&&(t=r,a=f)),r=r.next}while(r!==y);return t}function l(e,n){return w(e.prev,e,n.prev)<0&&w(n.next,e,e.next)<0}function h(e,n,t,r){var x=e;do{null===x.z&&(x.z=c(x.x,x.y,n,t,r)),x.prevZ=x.prev,x.nextZ=x.next,x=x.next}while(x!==e);x.prevZ.nextZ=null,x.prevZ=null,s(x)}function s(e){var n,t,r,x,i,u,v,f,y=1;do{for(t=e,e=null,i=null,u=0;t;){for(u++,r=t,v=0,n=0;n<y&&(v++,r=r.nextZ);n++);for(f=y;v>0||f>0&&r;)0!==v&&(0===f||!r||t.z<=r.z)?(x=t,t=t.nextZ,v--):(x=r,r=r.nextZ,f--),i?i.nextZ=x:e=x,x.prevZ=i,i=x;t=r}i.nextZ=null,y*=2}while(u>1);return e}function c(e,n,t,r,x){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-t)*x)|e<<8))|e<<4))|e<<2))|e<<1))|(n=1431655765&((n=858993459&((n=252645135&((n=16711935&((n=32767*(n-r)*x)|n<<8))|n<<4))|n<<2))|n<<1))<<1}function Z(e){var n=e,t=e;do{(n.x<t.x||n.x===t.x&&n.y<t.y)&&(t=n),n=n.next}while(n!==e);return t}function g(e,n,t,r,x,i,u,v){return(x-u)*(n-v)-(e-u)*(i-v)>=0&&(e-u)*(r-v)-(t-u)*(n-v)>=0&&(t-u)*(i-v)-(x-u)*(r-v)>=0}function d(e,n){return e.next.i!==n.i&&e.prev.i!==n.i&&!k(e,n)&&(j(e,n)&&j(n,e)&&q(e,n)&&(w(e.prev,e,n.prev)||w(e,n.prev,n))||M(e,n)&&w(e.prev,e,e.next)>0&&w(n.prev,n,n.next)>0)}function w(e,n,t){return(n.y-e.y)*(t.x-n.x)-(n.x-e.x)*(t.y-n.y)}function M(e,n){return e.x===n.x&&e.y===n.y}function z(e,n,t,r){var x=m(w(e,n,t)),i=m(w(e,n,r)),u=m(w(t,r,e)),v=m(w(t,r,n));return x!==i&&u!==v||!(0!==x||!b(e,t,n))||!(0!==i||!b(e,r,n))||!(0!==u||!b(t,e,r))||!(0!==v||!b(t,n,r))}function b(e,n,t){return n.x<=Math.max(e.x,t.x)&&n.x>=Math.min(e.x,t.x)&&n.y<=Math.max(e.y,t.y)&&n.y>=Math.min(e.y,t.y)}function m(e){return e>0?1:e<0?-1:0}function k(e,n){var t=e;do{if(t.i!==e.i&&t.next.i!==e.i&&t.i!==n.i&&t.next.i!==n.i&&z(t,t.next,e,n))return!0;t=t.next}while(t!==e);return!1}function j(e,n){return w(e.prev,e,e.next)<0?w(e,n,e.next)>=0&&w(e,e.prev,n)>=0:w(e,n,e.prev)<0||w(e,e.next,n)<0}function q(e,n){var t=e,r=!1,x=(e.x+n.x)/2,i=(e.y+n.y)/2;do{t.y>i!=t.next.y>i&&t.next.y!==t.y&&x<(t.next.x-t.x)*(i-t.y)/(t.next.y-t.y)+t.x&&(r=!r),t=t.next}while(t!==e);return r}function A(e,n){var t=new D(e.i,e.x,e.y),r=new D(n.i,n.x,n.y),x=e.next,i=n.prev;return e.next=n,n.prev=e,t.next=x,x.prev=t,r.next=t,t.prev=r,i.next=r,r.prev=i,r}function B(e,n,t,r){var x=new D(e,n,t);return r?(x.next=r.next,x.prev=r,r.next.prev=x,r.next=x):(x.prev=x,x.next=x),x}function C(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function D(e,n,t){this.i=e,this.x=n,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function E(e,n,t,r){for(var x=0,i=n,u=t-r;i<t;i+=r)x+=(e[u]-e[i])*(e[i+1]+e[u+1]),u=i;return x}return e.deviation=function(e,n,t,r){var x=n&&n.length,i=x?n[0]*t:e.length,u=Math.abs(E(e,0,i,t));if(x)for(var v=0,f=n.length;v<f;v++){var y=n[v]*t,o=v<f-1?n[v+1]*t:e.length;u-=Math.abs(E(e,y,o,t))}var p=0;for(v=0;v<r.length;v+=3){var a=r[v]*t,l=r[v+1]*t,h=r[v+2]*t;p+=Math.abs((e[a]-e[h])*(e[l+1]-e[a+1])-(e[a]-e[l])*(e[h+1]-e[a+1]))}return 0===u&&0===p?0:Math.abs((p-u)/u)},e.flatten=function(e){for(var n=e[0][0].length,t={vertices:[],holes:[],dimensions:n},r=0,x=0;x<e.length;x++){for(var i=0;i<e[x].length;i++)for(var u=0;u<n;u++)t.vertices.push(e[x][i][u]);x>0&&(r+=e[x-1].length,t.holes.push(r))}return t},e},void 0!==(t=n())&&(e.exports=t);export{r as e};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nfunction n(){return new Float32Array(4)}function t(n){const t=new Float32Array(4);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function r(n,t,r,e){const a=new Float32Array(4);return a[0]=n,a[1]=t,a[2]=r,a[3]=e,a}function e(n,t){return new Float32Array(n,t,4)}function a(){return n()}function o(){return r(1,1,1,1)}function u(){return r(1,0,0,0)}function s(){return r(0,1,0,0)}function c(){return r(0,0,1,0)}function i(){return r(0,0,0,1)}const f=a(),l=o(),_=u(),y=s(),w=c(),N=i(),O=Object.freeze(Object.defineProperty({__proto__:null,ONES:l,UNIT_W:N,UNIT_X:_,UNIT_Y:y,UNIT_Z:w,ZEROS:f,clone:t,create:n,createView:e,fromValues:r,ones:o,unitW:i,unitX:u,unitY:s,unitZ:c,zeros:a},Symbol.toStringTag,{value:\"Module\"}));export{l as O,_ as U,f as Z,n as a,e as b,t as c,s as d,c as e,r as f,i as g,y as h,w as i,N as j,o,u,O as v,a as z};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isNone as r,isSome as e}from\"../../../../../core/maybe.js\";import{f as t}from\"../../../../../chunks/vec4f32.js\";import{createProgramDescriptor as s}from\"../Utils.js\";import o from\"./WGLBrush.js\";import{background as a}from\"../shaders/BackgroundPrograms.js\";import{StencilOperation as i,CompareFunction as m,PrimitiveType as n,DataType as p}from\"../../../../webgl/enums.js\";import{createProgram as l}from\"../../../../webgl/ProgramTemplate.js\";const c=()=>s(\"clip\",{geometry:[{location:0,name:\"a_pos\",count:2,type:p.SHORT}]});class d extends o{constructor(){super(...arguments),this._color=t(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:r}){r.setStencilTestEnabled(!0),r.setBlendingEnabled(!1),r.setFaceCullingEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.setStencilOp(i.KEEP,i.KEEP,i.REPLACE),r.setStencilWriteMask(255),r.setStencilFunction(m.ALWAYS,0,255)}draw(t,s){const{context:o,state:i,requestRender:m,allowDelayedRender:d}=t,f=c(),g=s.getVAO(o,i,f.attributes,f.bufferLayouts);r(g.indexBuffer)||(this._program||(this._program=l(o,a)),d&&e(m)&&!this._program.compiled?m():(o.useProgram(this._program),this._program.setUniform2fv(\"u_coord_range\",[1,1]),this._program.setUniform4fv(\"u_color\",this._color),this._program.setUniformMatrix3fv(\"u_dvsMat3\",i.displayMat3),o.bindVAO(g),o.drawElements(n.TRIANGLES,g.indexBuffer.size,p.UNSIGNED_INT,0),o.bindVAO()))}}export{d as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../../core/maybe.js\";import{TEXTURE_BINDING_BITMAP as t}from\"../definitions.js\";import{createProgramDescriptor as r}from\"../Utils.js\";import s from\"./WGLBrush.js\";import{BlendFactor as o,CompareFunction as n,PrimitiveType as a,DataType as i}from\"../../../../webgl/enums.js\";const c=()=>r(\"overlay\",{geometry:[{location:0,name:\"a_pos\",count:2,type:i.FLOAT}],tex:[{location:1,name:\"a_uv\",count:2,type:i.UNSIGNED_SHORT}]});class m extends s{constructor(){super(...arguments),this._desc={vsPath:\"overlay/overlay\",fsPath:\"overlay/overlay\",attributes:new Map([[\"a_pos\",0],[\"a_uv\",1]])}}dispose(){}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setBlendFunctionSeparate(o.ONE,o.ONE_MINUS_SRC_ALPHA,o.ONE,o.ONE_MINUS_SRC_ALPHA),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(n.GREATER,255,255)}draw(r,s){const{context:o,painter:n,requestRender:i,allowDelayedRender:m}=r;if(!s.isReady)return;const{computedOpacity:u,dvsMat3:d,isWrapAround:l,perspectiveTransform:p,texture:f}=s;r.timeline.begin(this.name);const _=n.materialManager.getProgram(this._desc);if(m&&e(i)&&!_.compiled)return void i();const v=c(),y=s.getVAO(o,v.bufferLayouts,v.attributes);if(!y)return;o.bindVAO(y),o.useProgram(_),o.bindTexture(f,t),_.setUniformMatrix3fv(\"u_dvsMat3\",d),_.setUniform1i(\"u_texture\",t),_.setUniform1f(\"u_opacity\",u),_.setUniform2fv(\"u_perspective\",p);const A=l?10:4;o.drawArrays(a.TRIANGLE_STRIP,0,A),o.bindVAO(),r.timeline.end(this.name)}}export{m as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as e,unwrapOr as t}from\"../../../../../core/maybe.js\";import{WGLGeometryType as o,WGLSymbologyType as r}from\"../enums.js\";import{createProgramDescriptor as a}from\"../Utils.js\";import i from\"./WGLGeometryBrush.js\";import{FillMaterialKey as n}from\"../materialKey/MaterialKey.js\";import{getTechniqueFromMaterialKey as s}from\"../techniques/utils.js\";import{PrimitiveType as m,DataType as l}from\"../../../../webgl/enums.js\";function u(e){const t={geometry:[{location:0,name:\"a_pos\",count:2,type:l.SHORT},{location:1,name:\"a_id\",count:3,type:l.UNSIGNED_BYTE},{location:2,name:\"a_bitset\",count:1,type:l.UNSIGNED_BYTE},{location:3,name:\"a_color\",count:4,type:l.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_aux1\",count:4,type:l.UNSIGNED_SHORT},{location:5,name:\"a_aux2\",count:4,type:l.SHORT},{location:6,name:\"a_aux3\",count:4,type:l.UNSIGNED_BYTE},{location:7,name:\"a_zoomRange\",count:2,type:l.UNSIGNED_SHORT}]};switch(e.symbologyType){case r.SIMPLE:case r.OUTLINE_FILL_SIMPLE:t.geometry.splice(7,1),t.geometry.splice(4,1)}return{shader:\"materials/fill\",vertexLayout:t}}class c extends i{dispose(){}getGeometryType(){return o.FILL}supportsSymbology(e){return e!==r.DOT_DENSITY}drawGeometry(o,r,i,l){const{context:c,painter:y,rendererInfo:p,requiredLevel:_,passOptions:d,requestRender:f,allowDelayedRender:E}=o,S=n.load(i.materialKey),g=s(S.data),N=e(d)&&\"hittest\"===d.type,T=y.materialManager,{shader:I,vertexLayout:U,hittestAttributes:x}=t(g.programSpec,u(S));let L=m.TRIANGLES,h=a(S.data,U);N&&(h=this._getTriangleDesc(i.materialKey,h,x),L=m.POINTS);const{attributes:G,bufferLayouts:O}=h,b=T.getMaterialProgram(o,S,I,G,l);if(E&&e(f)&&!b.compiled)return void f();if(c.useProgram(b),this._setSharedUniforms(b,o,r),b.setUniform2f(\"u_tileOffset\",512*r.key.col,512*r.key.row),S.textureBinding){y.textureManager.bindTextures(c,b,S);const e=1/2**(_-r.key.level);b.setUniform1f(\"u_zoomFactor\",e)}const D=1/o.pixelRatio;b.setUniform1f(\"u_blur\",D),b.setUniform1f(\"u_antialiasing\",D),this._setSizeVVUniforms(S,b,p,r),this._setColorAndOpacityVVUniforms(S,b,p);const R=i.target.getVAO(c,O,G,N);let w=i.indexCount,j=i.indexFrom*Uint32Array.BYTES_PER_ELEMENT;N&&(w/=3,j/=3),c.bindVAO(R),this._drawFills(o,r,b,L,w,j)}_drawFills(e,t,o,r,a,i){e.context.drawElements(r,a,l.UNSIGNED_INT,i)}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{disposeMaybe as e,isSome as t,isNone as o}from\"../../../../../core/maybe.js\";import r from\"../../../../../core/RandomLCG.js\";import{TEXTURE_BINDING_RENDERER_0 as s,TEXTURE_BINDING_RENDERER_1 as i,TILE_SIZE as n}from\"../definitions.js\";import{WGLGeometryType as d,WGLSymbologyType as a}from\"../enums.js\";import l from\"./WGLGeometryBrushFill.js\";import{assertRendererSchema as _}from\"../techniques/utils.js\";import{BufferObject as u}from\"../../../../webgl/BufferObject.js\";import{DataType as m,PrimitiveType as h,TextureType as c,PixelFormat as f,PixelType as T,TextureSamplingMode as p,TextureWrapMode as x,TargetType as w,DepthStencilTargetType as D,RenderbufferFormat as y,Usage as g}from\"../../../../webgl/enums.js\";import{FramebufferObject as S}from\"../../../../webgl/FramebufferObject.js\";import{Renderbuffer as b}from\"../../../../webgl/Renderbuffer.js\";import{Texture as E}from\"../../../../webgl/Texture.js\";import{VertexArrayObject as F}from\"../../../../webgl/VertexArrayObject.js\";class O extends l{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([s,i]),this._dotVAO=null,this._dotDesc={vsPath:\"dot/dot\",fsPath:\"dot/dot\",attributes:new Map([[\"a_pos\",0]])}}dispose(){super.dispose(),this._disposeTextures(),this._dotFBO=e(this._dotFBO),this._dotVAO=e(this._dotVAO)}getGeometryType(){return d.FILL}supportsSymbology(e){return e===a.DOT_DENSITY}_drawFills(e,o,r,s,i,n){const{passOptions:d}=e;if(t(d)&&\"hittest\"===d.type)super._drawFills(e,o,r,s,i,n);else{const t=this._drawDotLocations(e,o,r,i,n);this._drawDotDensity(e,o,t)}}_drawDotDensity(e,o,r){const{context:s,painter:i,rendererInfo:n,requestRender:d,allowDelayedRender:a}=e,l=i.materialManager.getProgram(this._dotDesc);if(a&&t(d)&&!l.compiled)return void d();const{rendererSchema:u}=n;_(u,\"dot-density\");const c=this._createDotDensityMesh(s,this._dotDesc.attributes,{geometry:[{name:\"a_pos\",count:2,type:m.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});s.setStencilTestEnabled(!0),s.useProgram(l),l.setUniform1f(\"u_tileZoomFactor\",1),l.setUniform1i(\"u_texture\",this._dotSamplers[0]),l.setUniform1f(\"u_dotSize\",Math.max(u.dotSize,1)),l.setUniform1f(\"u_pixelRatio\",window.devicePixelRatio),this._setSharedUniforms(l,e,o),s.bindTexture(r,this._dotSamplers[0]),s.bindVAO(c),s.drawArrays(h.POINTS,0,262144)}_drawDotLocations(e,t,o,r,s){const{context:i,rendererInfo:d,requiredLevel:a}=e,l=i.getViewport(),{rendererSchema:u}=d;_(u,\"dot-density\");const{dotScale:c,colors:f,activeDots:T,backgroundColor:p,dotValue:x}=u;i.setViewport(0,0,512,512);const w=i.getBoundFramebufferObject(),D=this._createFBO(i);i.bindFramebuffer(D),i.setClearColor(0,0,0,0),i.clear(i.gl.COLOR_BUFFER_BIT|i.gl.STENCIL_BUFFER_BIT),i.setStencilTestEnabled(!1);const y=1/2**(a-t.key.level),g=n,S=g*window.devicePixelRatio*g*window.devicePixelRatio,b=1/y*(1/y),E=c?e.state.scale/c:1;return o.setUniform1f(\"u_tileZoomFactor\",y),o.setUniform1f(\"u_tileDotsOverArea\",S/(n*window.devicePixelRatio*n*window.devicePixelRatio)),o.setUniformMatrix4fv(\"u_dotColors\",f),o.setUniform4fv(\"u_isActive\",T),o.setUniform4fv(\"u_dotBackgroundColor\",p),o.setUniform1f(\"u_dotValue\",Math.max(1,x*E*b)),this._bindDotDensityTextures(i,o,d,g),i.drawElements(h.TRIANGLES,r,m.UNSIGNED_INT,s),i.setViewport(l.x,l.y,l.width,l.height),i.bindFramebuffer(w),D.colorTexture}_createFBO(e){if(o(this._dotFBO)){const t=512,o=512,r={target:c.TEXTURE_2D,pixelFormat:f.RGBA,dataType:T.UNSIGNED_BYTE,samplingMode:p.NEAREST,wrapMode:x.CLAMP_TO_EDGE,width:t,height:o},s={colorTarget:w.TEXTURE,depthStencilTarget:D.DEPTH_STENCIL_RENDER_BUFFER},i=new b(e,{width:t,height:o,internalFormat:y.DEPTH_STENCIL});this._dotFBO=new S(e,s,r,i)}return this._dotFBO}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}_bindDotDensityTextures(e,t,o,r){const{rendererSchema:s}=o;_(s,\"dot-density\");const i=this._createDotDensityTextures(e,r,s.seed);t.setUniform1iv(\"u_dotTextures\",this._dotSamplers);for(let n=0;n<i.length;n++)e.bindTexture(i[n],this._dotSamplers[n])}_createDotDensityMesh(e,t,r){if(o(this._dotVAO)){const o=2,s=new Int16Array(262144*o);for(let e=0;e<512;e++)for(let t=0;t<512;t++)s[o*(t+512*e)]=t,s[o*(t+512*e)+1]=e;const i=u.createVertex(e,g.STATIC_DRAW,s);this._dotVAO=new F(e,t,r,{geometry:i},null)}return this._dotVAO}_createDotDensityTextures(e,t,o){if(this._dotTextureSize===t&&this._seed===o||(this._disposeTextures(),this._dotTextureSize=t,this._seed=o),null===this._dotTextures){const s=new r(o);this._dotTextures=[this._allocDotDensityTexture(e,t,s),this._allocDotDensityTexture(e,t,s)]}return this._dotTextures}_allocDotDensityTexture(e,t,o){const r=new Float32Array(t*t*4);for(let s=0;s<r.length;s++)r[s]=o.getFloat();return new E(e,{wrapMode:x.REPEAT,pixelFormat:f.RGBA,dataType:T.FLOAT,samplingMode:p.NEAREST,width:t,height:t},r)}}export{O as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{WGLSymbologyType as o}from\"../enums.js\";import r from\"./WGLGeometryBrushMarker.js\";import{assertRendererSchema as e}from\"../techniques/utils.js\";import{DataType as t}from\"../../../../webgl/enums.js\";class s extends r{supportsSymbology(r){return r===o.PIE_CHART}_drawMarkers(o,r,s,n,l,f,u){const{context:i}=o,{rendererInfo:m}=o,{rendererSchema:a}=m;e(a,\"pie-chart\"),s.setUniform4fv(\"u_colors\",a.colors),s.setUniform4fv(\"u_defaultColor\",a.defaultColor),s.setUniform4fv(\"u_othersColor\",a.othersColor),s.setUniform4fv(\"u_outlineColor\",a.outlineColor),s.setUniform1f(\"u_donutRatio\",a.holePercentage),s.setUniform1f(\"u_sectorThreshold\",a.sectorThreshold),s.setUniform1f(\"u_outlineWidth\",a.outlineWidth),i.drawElements(n,l,t.UNSIGNED_INT,f)}}export{s as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../../core/maybe.js\";import{WGLGeometryType as t}from\"../enums.js\";import{createProgramDescriptor as o}from\"../Utils.js\";import a from\"./WGLGeometryBrush.js\";import{LabelMaterialKey as n}from\"../materialKey/MaterialKey.js\";import{CompareFunction as r,PrimitiveType as s,DataType as i}from\"../../../../webgl/enums.js\";const m=e=>o(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:i.SHORT},{location:1,name:\"a_id\",count:4,type:i.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:i.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:i.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texAndSize\",count:4,type:i.UNSIGNED_BYTE},{location:5,name:\"a_refSymbolAndPlacementOffset\",count:4,type:i.UNSIGNED_BYTE},{location:6,name:\"a_glyphData\",count:4,type:i.UNSIGNED_BYTE},{location:7,name:\"a_vertexOffset\",count:2,type:i.SHORT},{location:8,name:\"a_texCoords\",count:2,type:i.UNSIGNED_SHORT}]});class l extends a{dispose(){}getGeometryType(){return t.LABEL}supportsSymbology(e){return!0}drawGeometry(t,o,a,l){const{context:u,painter:f,state:d,rendererInfo:c,requestRender:_,allowDelayedRender:p}=t,y=n.load(a.materialKey),E=y.mapAligned?1:0;if(!E&&Math.abs(o.key.level-Math.round(100*t.displayLevel)/100)>=1)return;const{bufferLayouts:N,attributes:U}=m(y),S=f.materialManager.getMaterialProgram(t,y,\"materials/label\",U,l);if(p&&e(_)&&!S.compiled)return void _();t.context.setStencilFunction(r.EQUAL,0,255),u.useProgram(S),this._setSharedUniforms(S,t,o),f.textureManager.bindTextures(u,S,y);const T=1===E?d.displayViewMat3:d.displayMat3;this._setSizeVVUniforms(y,S,c,o),S.setUniform1f(\"u_mapRotation\",Math.floor(d.rotation/360*254)),S.setUniform1f(\"u_mapAligned\",E),S.setUniformMatrix3fv(\"u_displayMat3\",T),S.setUniform1f(\"u_opacity\",1),S.setUniform2fv(\"u_screenSize\",t.state.size);const g=a.target.getVAO(u,N,U),G=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;u.bindVAO(g),S.setUniform1f(\"u_isHaloPass\",0),S.setUniform1f(\"u_isBackgroundPass\",1),u.drawElements(s.TRIANGLES,a.indexCount,i.UNSIGNED_INT,G),S.setUniform1f(\"u_isHaloPass\",1),S.setUniform1f(\"u_isBackgroundPass\",0),u.drawElements(s.TRIANGLES,a.indexCount,i.UNSIGNED_INT,G),S.setUniform1f(\"u_isHaloPass\",0),S.setUniform1f(\"u_isBackgroundPass\",0),u.drawElements(s.TRIANGLES,a.indexCount,i.UNSIGNED_INT,G),u.setStencilTestEnabled(!0),u.setBlendingEnabled(!0)}}export{l as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../../core/maybe.js\";import{WGLGeometryType as t}from\"../enums.js\";import{createProgramDescriptor as o}from\"../Utils.js\";import a from\"./WGLGeometryBrush.js\";import{LineMaterialKey as n}from\"../materialKey/MaterialKey.js\";import{PrimitiveType as r,DataType as i}from\"../../../../webgl/enums.js\";const s=e=>o(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:i.SHORT},{location:1,name:\"a_id\",count:4,type:i.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:i.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_offsetAndNormal\",count:4,type:i.BYTE},{location:4,name:\"a_accumulatedDistanceAndHalfWidth\",count:2,type:i.UNSIGNED_SHORT},{location:5,name:\"a_tlbr\",count:4,type:i.UNSIGNED_SHORT},{location:6,name:\"a_segmentDirection\",count:4,type:i.BYTE},{location:7,name:\"a_aux\",count:2,type:i.UNSIGNED_SHORT},{location:8,name:\"a_zoomRange\",count:2,type:i.UNSIGNED_SHORT}]});class m extends a{dispose(){}getGeometryType(){return t.LINE}supportsSymbology(e){return!0}drawGeometry(t,o,a,m){const{context:l,painter:c,rendererInfo:u,displayLevel:p,passOptions:d,requestRender:y,allowDelayedRender:_}=t,f=n.load(a.materialKey),E=e(d)&&\"hittest\"===d.type;let N=s(f),g=r.TRIANGLES;E&&(N=this._getTriangleDesc(a.materialKey,N),g=r.POINTS);const{attributes:S,bufferLayouts:T}=N,U=c.materialManager.getMaterialProgram(t,f,\"materials/line\",S,m);if(_&&e(y)&&!U.compiled)return void y();const G=1/t.pixelRatio,I=0;l.useProgram(U),this._setSharedUniforms(U,t,o),f.textureBinding&&c.textureManager.bindTextures(l,U,f);const D=2**(p-o.key.level);U.setUniform1f(\"u_zoomFactor\",D),U.setUniform1f(\"u_blur\",I+G),U.setUniform1f(\"u_antialiasing\",G),this._setSizeVVUniforms(f,U,u,o),this._setColorAndOpacityVVUniforms(f,U,u),l.setFaceCullingEnabled(!1);const R=a.target.getVAO(l,T,S,E);let b=a.indexCount,x=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;E&&(b/=3,x/=3),l.bindVAO(R),l.drawElements(g,b,i.UNSIGNED_INT,x)}}export{m as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as t}from\"../../../../../core/maybe.js\";import{WGLGeometryType as e}from\"../enums.js\";import{createProgramDescriptor as o}from\"../Utils.js\";import a from\"./WGLGeometryBrush.js\";import{TextMaterialKey as r}from\"../materialKey/MaterialKey.js\";import{PrimitiveType as s,DataType as n}from\"../../../../webgl/enums.js\";const i=t=>o(t.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:n.SHORT},{location:1,name:\"a_id\",count:4,type:n.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:n.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:n.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texFontSize\",count:4,type:n.UNSIGNED_BYTE},{location:5,name:\"a_aux\",count:4,type:n.BYTE},{location:6,name:\"a_zoomRange\",count:2,type:n.UNSIGNED_SHORT},{location:7,name:\"a_vertexOffset\",count:2,type:n.SHORT},{location:8,name:\"a_texCoords\",count:2,type:n.UNSIGNED_SHORT}]});class m extends a{dispose(){}getGeometryType(){return e.TEXT}supportsSymbology(t){return!0}drawGeometry(e,o,a,m){const{context:l,painter:u,rendererInfo:d,state:f,passOptions:_,requestRender:p,allowDelayedRender:c}=e,y=r.load(a.materialKey),E=t(_)&&\"hittest\"===_.type,{bufferLayouts:N,attributes:U}=i(y),S=u.materialManager.getMaterialProgram(e,y,\"materials/text\",U,m);if(c&&t(p)&&!S.compiled)return void p();l.useProgram(S);let T=s.TRIANGLES;E&&(T=s.POINTS),this._setSharedUniforms(S,e,o),u.textureManager.bindTextures(l,S,y),S.setUniformMatrix3fv(\"u_displayMat3\",f.displayMat3),S.setUniformMatrix3fv(\"u_displayViewMat3\",f.displayViewMat3),this._setSizeVVUniforms(y,S,d,o),this._setColorAndOpacityVVUniforms(y,S,d),this._setRotationVVUniforms(y,S,d);const x=a.target.getVAO(l,N,U),I=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;S.setUniform1f(\"u_isHaloPass\",0),S.setUniform1f(\"u_isBackgroundPass\",1),l.bindVAO(x),l.drawElements(T,a.indexCount,n.UNSIGNED_INT,I),S.setUniform1f(\"u_isHaloPass\",1),S.setUniform1f(\"u_isBackgroundPass\",0),l.drawElements(s.TRIANGLES,a.indexCount,n.UNSIGNED_INT,I),S.setUniform1f(\"u_isHaloPass\",0),S.setUniform1f(\"u_isBackgroundPass\",0),l.drawElements(T,a.indexCount,n.UNSIGNED_INT,I)}}export{m as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport r from\"./webgl/brushes/BrushBitmap.js\";import s from\"./webgl/brushes/BrushClip.js\";import e from\"./webgl/brushes/BrushOverlay.js\";import o from\"./webgl/brushes/WGLBrushDotDensity.js\";import m from\"./webgl/brushes/WGLBrushHeatmap.js\";import l from\"./webgl/brushes/WGLBrushInfo.js\";import t from\"./webgl/brushes/WGLBrushPieChart.js\";import b from\"./webgl/brushes/WGLBrushStencil.js\";import{WGLBrushVTLBackground as h}from\"./webgl/brushes/WGLBrushVTLBackground.js\";import{WGLBrushVTLCircle as i}from\"./webgl/brushes/WGLBrushVTLCircle.js\";import{WGLBrushVTLFill as u}from\"./webgl/brushes/WGLBrushVTLFill.js\";import{WGLBrushVTLLine as p}from\"./webgl/brushes/WGLBrushVTLLine.js\";import{WGLBrushVTLSymbol as L}from\"./webgl/brushes/WGLBrushVTLSymbol.js\";import f from\"./webgl/brushes/WGLGeometryBrushFill.js\";import B from\"./webgl/brushes/WGLGeometryBrushLabel.js\";import g from\"./webgl/brushes/WGLGeometryBrushLine.js\";import G from\"./webgl/brushes/WGLGeometryBrushMarker.js\";import j from\"./webgl/brushes/WGLGeometryBrushText.js\";const w={marker:G,line:g,fill:f,text:j,label:B,clip:s,stencil:b,bitmap:r,overlay:e,tileInfo:l,vtlBackground:h,vtlFill:u,vtlLine:p,vtlCircle:i,vtlSymbol:L,dotDensity:o,heatmap:m,pieChart:t};export{w as brushes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nconst o=!0,t=32,c=1.5,e=200;export{t as COLLISION_GRID_CELL_SIZE,c as DECLUTTER_BUDGET,o as DECLUTTER_TILES,e as FADE_DURATION};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{DataType as e}from\"../../../webgl/enums.js\";import{VertexElementDescriptor as o}from\"../../../webgl/VertexElementDescriptor.js\";const r={geometry:[new o(\"a_pos\",2,e.BYTE,0,2)]},t={geometry:[new o(\"a_pos\",2,e.BYTE,0,4),new o(\"a_tex\",2,e.BYTE,2,4)]},m={geometry:[new o(\"a_pos\",2,e.UNSIGNED_SHORT,0,4)]};export{r as Pos2b,m as Pos2us,t as PosTex2b};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{BufferObject as t}from\"../../../webgl/BufferObject.js\";import{Usage as e,DataType as r,PrimitiveType as s}from\"../../../webgl/enums.js\";import{VertexArrayObject as i}from\"../../../webgl/VertexArrayObject.js\";import{VertexElementDescriptor as o}from\"../../../webgl/VertexElementDescriptor.js\";class n{constructor(s,n){this._rctx=s,this._vertexBuffer=t.createVertex(s,e.STATIC_DRAW,new Uint16Array(n)),this._vao=new i(s,new Map([[\"a_position\",0]]),{geometry:[new o(\"a_position\",2,r.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=n.length/2}bind(){this._rctx.bindVAO(this._vao)}unbind(){this._rctx.bindVAO(null)}dispose(){this._vao.dispose(!1),this._vertexBuffer.dispose()}draw(){this._rctx.bindVAO(this._vao),this._rctx.drawArrays(s.TRIANGLE_STRIP,0,this._count)}}export{n as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import t from\"../../../../core/Logger.js\";import{isSome as r}from\"../../../../core/maybe.js\";import{e as s}from\"../../../../chunks/earcut.js\";import{s as o}from\"../../../../chunks/vec2.js\";import{a as n}from\"../../../../chunks/vec2f64.js\";import{convertFromNestedArray as i,convertFromPolygon as c}from\"../../../../layers/graphics/featureConversionUtils.js\";import a from\"../../../../layers/graphics/OptimizedGeometry.js\";import{i1616to32 as f}from\"./number.js\";import{BufferObject as h}from\"../../../webgl/BufferObject.js\";import{PrimitiveType as m,Usage as u,DataType as y}from\"../../../webgl/enums.js\";const x=t=>{switch(t.BYTES_PER_ELEMENT){case 1:return y.UNSIGNED_BYTE;case 2:return y.UNSIGNED_SHORT;case 4:return y.UNSIGNED_INT;default:throw new e(\"Cannot get DataType of array\")}},g=(e,t,r,s)=>{let o=0;for(let n=1;n<r;n++){const r=e[2*(t+n-1)],s=e[2*(t+n-1)+1];o+=(e[2*(t+n)]-r)*(e[2*(t+n)+1]+s)}return s?o>0:o<0},p=({coords:e,lengths:t},r)=>{const o=[];for(let n=0,i=0;n<t.length;i+=t[n],n+=1){const c=i,a=[];for(;n<t.length-1&&g(e,i+t[n],t[n+1],r);n+=1,i+=t[n])a.push(i+t[n]-c);const f=e.slice(2*c,2*(i+t[n])),h=s(f,a,2);for(const e of h)o.push(e+c)}return o};class l{constructor(e,t,r,s=!1){this._cache={},this.vertices=e,this.indices=t,this.primitiveType=r,this.isMapSpace=s}static fromRect({x:e,y:t,width:r,height:s}){const o=e,n=t,i=o+r,c=n+s;return l.fromScreenExtent({xmin:o,ymin:n,xmax:i,ymax:c})}static fromPath(e){const t=i(new a,e.path,!1,!1),r=t.coords,s=new Uint32Array(p(t,!0)),o=new Uint32Array(r.length/2);for(let n=0;n<o.length;n++)o[n]=f(Math.floor(r[2*n]),Math.floor(r[2*n+1]));return new l({geometry:o},s,m.TRIANGLES)}static fromGeometry(r,s){const o=s.geometry?.type;switch(o){case\"polygon\":return l.fromPolygon(r,s.geometry);case\"extent\":return l.fromMapExtent(r,s.geometry);default:return t.getLogger(\"esri.views.2d.engine.webgl.Mesh2D\").error(new e(\"mapview-bad-type\",`Unable to create a mesh from type ${o}`,s)),l.fromRect({x:0,y:0,width:1,height:1})}}static fromPolygon(e,t){const r=c(new a,t,!1,!1),s=r.coords,i=new Uint32Array(p(r,!1)),h=new Uint32Array(s.length/2),u=n(),y=n();for(let n=0;n<h.length;n++)o(u,s[2*n],s[2*n+1]),e.toScreen(y,u),h[n]=f(Math.floor(y[0]),Math.floor(y[1]));return new l({geometry:h},i,m.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:t,ymin:r,ymax:s}){const o={geometry:new Uint32Array([f(e,r),f(t,r),f(e,s),f(e,s),f(t,r),f(t,s)])},n=new Uint32Array([0,1,2,3,4,5]);return new l(o,n,m.TRIANGLES)}static fromMapExtent(e,t){const[r,s]=e.toScreen([0,0],[t.xmin,t.ymin]),[o,n]=e.toScreen([0,0],[t.xmax,t.ymax]),i={geometry:new Uint32Array([f(r,s),f(o,s),f(r,n),f(r,n),f(o,s),f(o,n)])},c=new Uint32Array([0,1,2,3,4,5]);return new l(i,c,m.TRIANGLES)}destroy(){r(this._cache.indexBuffer)&&this._cache.indexBuffer.dispose();for(const e in this._cache.vertexBuffers)r(this._cache.vertexBuffers[e])&&this._cache.vertexBuffers[e].dispose()}get elementType(){return x(this.indices)}getIndexBuffer(e,t=u.STATIC_DRAW){return this._cache.indexBuffer||(this._cache.indexBuffer=h.createIndex(e,t,this.indices)),this._cache.indexBuffer}getVertexBuffers(e,t=u.STATIC_DRAW){return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce(((r,s)=>({...r,[s]:h.createVertex(e,t,this.vertices[s])})),{})),this._cache.vertexBuffers}}export{l as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport t from\"../../../../core/Error.js\";import e from\"../../../../core/Logger.js\";import{isSome as r,isNone as s}from\"../../../../core/maybe.js\";import{watch as i}from\"../../../../core/reactiveUtils.js\";import{c as o}from\"../../../../chunks/mat3f32.js\";import{DisplayObject as h}from\"../DisplayObject.js\";import a from\"./Mesh2D.js\";import{VertexArrayObject as c}from\"../../../webgl/VertexArrayObject.js\";const n=t=>parseFloat(t)/100;class m extends h{constructor(t,e){super(),this._clip=e,this._cache={},this.stage=t,this._handle=i((()=>e.version),(()=>this._invalidate())),this.ready()}static fromClipArea(t,e){return new m(t,e)}_destroyGL(){r(this._cache.mesh)&&(this._cache.mesh.destroy(),this._cache.mesh=null),r(this._cache.vao)&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(t,e,r,i){const[o,h]=e.size;if(\"geometry\"!==this._clip.type&&this._lastWidth===o&&this._lastHeight===h||(this._lastWidth=o,this._lastHeight=h,this._destroyGL()),s(this._cache.vao)){const s=this._createMesh(e,this._clip),o=s.getIndexBuffer(t),h=s.getVertexBuffers(t);this._cache.mesh=s,this._cache.vao=new c(t,r,i,h,o)}return this._cache.vao}_createTransforms(){return{dvs:o()}}_invalidate(){this._destroyGL(),this.requestRender()}_createScreenRect(t,e){const[r,s]=t.size,i=\"string\"==typeof e.left?n(e.left)*r:e.left,o=\"string\"==typeof e.right?n(e.right)*r:e.right,h=\"string\"==typeof e.top?n(e.top)*s:e.top,a=\"string\"==typeof e.bottom?n(e.bottom)*s:e.bottom,c=i,m=h;return{x:c,y:m,width:Math.max(r-o-c,0),height:Math.max(s-a-m,0)}}_createMesh(r,s){switch(s.type){case\"rect\":return a.fromRect(this._createScreenRect(r,s));case\"path\":return a.fromPath(s);case\"geometry\":return a.fromGeometry(r,s);default:return e.getLogger(\"esri.views.2d.engine.webgl.ClippingInfo\").error(new t(\"mapview-bad-type\",\"Unable to create ClippingInfo mesh from clip of type: ${clip.type}\")),a.fromRect({x:0,y:0,width:1,height:1})}}}export{m as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import{isNone as e,isSome as r}from\"../../../../core/maybe.js\";import{c as s}from\"../../../../chunks/mat3f32.js\";import{brushes as t}from\"../brushes.js\";import{Container as i}from\"../Container.js\";import n from\"./ClippingInfo.js\";import{WGLDrawPhase as o}from\"./enums.js\";class a extends i{constructor(){super(...arguments),this.name=this.constructor.name}set clips(e){this._clips=e,this.children.forEach((r=>r.clips=e)),this._updateClippingInfo()}beforeRender(e){super.beforeRender(e),this.updateTransforms(e.state)}_createTransforms(){return{dvs:s()}}doRender(e){const r=this.createRenderParams(e),{painter:s,globalOpacity:t,profiler:i,drawPhase:n}=r,a=n===o.LABEL||n===o.HIGHLIGHT?1:t*this.computedOpacity;i.recordContainerStart(this.name),s.beforeRenderLayer(r,this._clippingInfos?255:0,a),this.renderChildren(r),s.compositeLayer(r,a),i.recordContainerEnd()}renderChildren(r){e(this._renderPasses)&&(this._renderPasses=this.prepareRenderPasses(r.painter));for(const e of this._renderPasses)try{e.render(r)}catch(s){}}createRenderParams(e){return e.requireFBO=this.requiresDedicatedFBO,e}prepareRenderPasses(e){return[e.registerRenderPass({name:\"clip\",brushes:[t.clip],target:()=>this._clippingInfos,drawPhase:o.MAP|o.LABEL|o.LABEL_ALPHA|o.DEBUG|o.HIGHLIGHT})]}updateTransforms(e){for(const r of this.children)r.setTransform(e)}onAttach(){super.onAttach(),this._updateClippingInfo()}onDetach(){super.onDetach(),this._updateClippingInfo()}_updateClippingInfo(){r(this._clippingInfos)&&(this._clippingInfos.forEach((e=>e.destroy())),this._clippingInfos=null);const e=this.stage;if(!e)return;const s=this._clips;r(s)&&s.length&&(this._clippingInfos=s.items.map((r=>n.fromClipArea(e,r)))),this.requestRender()}}export{a as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../../core/maybe.js\";import{TEXTURE_BINDING_BITMAP as t}from\"../definitions.js\";import i from\"../VertexStream.js\";import s from\"./WGLBrush.js\";import{TextureSamplingMode as n,BlendFactor as r,CompareFunction as a}from\"../../../../webgl/enums.js\";const o={nearest:{defines:[],samplingMode:n.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:n.LINEAR,mips:!1},bicubic:{defines:[\"bicubic\"],samplingMode:n.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:n.LINEAR_MIPMAP_LINEAR,mips:!0}},d=(e,t,i)=>{if(\"dynamic\"===i.samplingMode){const{state:i}=e,s=t.resolution/t.pixelRatio/i.resolution,n=Math.round(e.pixelRatio)!==e.pixelRatio,r=s>1.05||s<.95;return i.rotation||r||n||t.isSourceScaled||t.rotation?o.bilinear:o.nearest}return o[i.samplingMode]};class m extends s{constructor(){super(...arguments),this._desc={vsPath:\"raster/bitmap\",fsPath:\"raster/bitmap\",attributes:new Map([[\"a_pos\",0]])}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0)}draw(s,n){const{context:o,renderingOptions:m,painter:l,requestRender:c,allowDelayedRender:p}=s;if(!n.source||!n.isReady)return;const u=d(s,n,m),f=l.materialManager.getProgram(this._desc,u.defines);if(p&&e(c)&&!f.compiled)return void c();s.timeline.begin(this.name),\"additive\"===n.blendFunction?o.setBlendFunctionSeparate(r.ONE,r.ONE,r.ONE,r.ONE):o.setBlendFunctionSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA),o.setStencilFunction(a.EQUAL,n.stencilRef,255),this._quad||(this._quad=new i(o,[0,0,1,0,0,1,1,1]));const{coordScale:_,computedOpacity:E,transforms:M}=n;n.setSamplingProfile(u),n.bind(s.context,t),o.useProgram(f),f.setUniformMatrix3fv(\"u_dvsMat3\",M.dvs),f.setUniform1i(\"u_texture\",t),f.setUniform2fv(\"u_coordScale\",_),f.setUniform1f(\"u_opacity\",E),this._quad.draw(),s.timeline.end(this.name)}}export{m as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Logger.js\";import{disposeMaybe as t,isSome as r,isNone as i}from\"../../../../../core/maybe.js\";import{WGLSymbologyType as a}from\"../enums.js\";import s from\"../VertexStream.js\";import u from\"./WGLGeometryBrushMarker.js\";import{Effect as n}from\"../effects/Effect.js\";import{assertRendererSchema as o}from\"../techniques/utils.js\";import{ContextType as h}from\"../../../../webgl/context-util.js\";import{CompareFunction as c,DataType as l,BlendFactor as f,ClearBufferBit as m,TextureType as d,TextureWrapMode as p,RenderbufferFormat as _,PixelFormat as b,PixelType as g,TextureSamplingMode as F}from\"../../../../webgl/enums.js\";import{FramebufferObject as w}from\"../../../../webgl/FramebufferObject.js\";import{loadHeatmapTextureConfiguration as T}from\"../../../../webgl/heatmapTextureUtils.js\";import{Renderbuffer as E}from\"../../../../webgl/Renderbuffer.js\";import{Texture as O}from\"../../../../webgl/Texture.js\";const S=e.getLogger(\"esri.views.2d.engine.webgl.brushes.WGLBrushHeatmap\");function x(e){return\"heatmap\"===e.type}class B extends u{constructor(){super(...arguments),this.brushEffect=new y}supportsSymbology(e){return e===a.HEATMAP}dispose(){super.dispose(),this.brushEffect.dispose(),this.brushEffect=null}prepareState(){}drawGeometry(e,t,r,i){const{defines:a}=this.brushEffect.loadQualityProfile(e.context);super.drawGeometry(e,t,r,i?[...i,...a]:a)}_drawMarkers(e,t,r,i,a,s,u){const{context:n,rendererInfo:h,state:f}=e,{rendererSchema:m}=h;o(m,\"heatmap\");const{referenceScale:d,radius:p,isFieldActive:_}=m,b=p*(0!==d?d/f.scale:1);r.setUniform1f(\"u_radius\",b),u||(r.setUniform1f(\"u_isFieldActive\",_),n.setStencilFunction(c.GEQUAL,t.stencilRef,255)),n.drawElements(i,a,l.UNSIGNED_INT,s)}}const v={vsPath:\"heatmap/heatmapResolve\",fsPath:\"heatmap/heatmapResolve\",attributes:new Map([[\"a_position\",0]])};class y extends n{constructor(){super(...arguments),this.name=this.constructor.name}createOptions({passOptions:e}){return e}dispose(){this._prevFBO=null,this._accumulateOutputTexture=t(this._accumulateOutputTexture),r(this._accumulateFramebuffer)&&this._accumulateFramebuffer.detachDepthStencilBuffer(),this._accumulateOutputStencilBuffer=t(this._accumulateOutputStencilBuffer),this._accumulateFramebuffer=t(this._accumulateFramebuffer),this._resolveGradientTexture=t(this._resolveGradientTexture),this._tileQuad=t(this._tileQuad)}bind(e){const{context:t,rendererInfo:i,passOptions:a}=e,{rendererSchema:s}=i;!(r(a)&&\"hittest\"===a.type)&&x(s)&&(this._prevFBO=t.getBoundFramebufferObject(),this._prevViewport=t.getViewport(),o(s,\"heatmap\"),this._loadResources(e),this._updateResources(t,s),t.bindFramebuffer(this._accumulateFramebuffer),t.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!0),t.setBlendFunction(f.ONE,f.ONE),t.setClearColor(0,0,0,0),t.clear(m.COLOR_BUFFER_BIT))}unbind(){this._prevFBO=null,this._prevViewport=null}draw(e){const{context:t,painter:i,rendererInfo:a,passOptions:s}=e,{rendererSchema:u}=a;if(r(s)&&\"hittest\"===s.type||!x(u))return;const{defines:n}=this.loadQualityProfile(t),o=i.materialManager.getProgram(v,n);t.useProgram(o),t.bindFramebuffer(this._prevFBO),t.setViewport(0,0,this._prevViewport.width,this._prevViewport.height),t.setBlendFunction(f.ONE,f.ONE_MINUS_SRC_ALPHA),t.setStencilTestEnabled(!1);const{radius:h,minDensity:c,densityRange:l}=u;t.bindTexture(this._accumulateOutputTexture,8),t.bindTexture(this._resolveGradientTexture,9),o.setUniform1i(\"u_texture\",8),o.setUniform1i(\"u_gradient\",9),o.setUniform2f(\"u_densityMinAndInvRange\",c,1/l),o.setUniform1f(\"u_densityNormalization\",3/(h*h*Math.PI)),this._tileQuad.draw()}_loadResources({context:e,painter:t}){const{dataType:r,samplingMode:i,pixelFormat:a,internalFormat:u,shadingRate:n,requiresSharedStencilBuffer:o}=this.loadQualityProfile(e),{width:h,height:c}=this._prevViewport,l=h*n,f=c*n;this._accumulateOutputTexture??(this._accumulateOutputTexture=new O(e,{target:d.TEXTURE_2D,pixelFormat:a,internalFormat:u,dataType:r,samplingMode:i,wrapMode:p.CLAMP_TO_EDGE,width:l,height:f})),o||(this._accumulateOutputStencilBuffer??(this._accumulateOutputStencilBuffer=new E(e,{width:l,height:f,internalFormat:_.DEPTH_STENCIL}))),this._accumulateFramebuffer??(this._accumulateFramebuffer=new w(e,{},this._accumulateOutputTexture,o?t.getSharedStencilBuffer():this._accumulateOutputStencilBuffer)),this._resolveGradientTexture??(this._resolveGradientTexture=new O(e,{target:d.TEXTURE_2D,pixelFormat:b.RGBA,dataType:g.UNSIGNED_BYTE,samplingMode:F.LINEAR,wrapMode:p.CLAMP_TO_EDGE})),this._tileQuad??(this._tileQuad=new s(e,[0,0,1,0,0,1,1,1]))}_updateResources(e,t){const{gradientHash:i,gradient:a}=t;this._prevGradientHash!==i&&(this._resolveGradientTexture.resize(a.length/4,1),this._resolveGradientTexture.setData(a),this._prevGradientHash=i);const{shadingRate:s,requiresSharedStencilBuffer:u}=this.loadQualityProfile(e),{width:n,height:o}=this._prevViewport,h=n*s,c=o*s,{width:l,height:f}=this._accumulateFramebuffer;if(l!==h||f!==c){const e=this._accumulateFramebuffer.depthStencilAttachment;if(u&&r(e)){const{width:t,height:r}=e.descriptor;t===h&&r===c||(S.errorOnce(\"Attempted to resize shared stencil buffer! Detaching instead.\"),this._accumulateFramebuffer.detachDepthStencilBuffer())}this._accumulateFramebuffer.resize(h,c)}u||e.blitFramebuffer(this._prevFBO,this._accumulateFramebuffer,0,0,this._prevFBO.width,this._prevFBO.height,0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height,m.STENCIL_BUFFER_BIT,F.NEAREST)}loadQualityProfile(e){if(i(this._qualityProfile)){const t=T(e,S),r=e.type===h.WEBGL1;this._qualityProfile={...t,requiresSharedStencilBuffer:r,shadingRate:r?1:.25,defines:t.dataType!==g.FLOAT?[\"heatmapPrecisionHalfFloat\"]:[]}}return this._qualityProfile}}export{B as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as t}from\"../../../../../core/maybe.js\";import{f as e}from\"../../../../../chunks/vec4f32.js\";import{Pos2b as r}from\"../DefaultVertexAttributeLayouts.js\";import i from\"./WGLBrush.js\";import{background as o}from\"../shaders/BackgroundPrograms.js\";import{tileInfo as s}from\"../shaders/TileInfoPrograms.js\";import{BufferObject as n}from\"../../../../webgl/BufferObject.js\";import{BlendFactor as a,PrimitiveType as l,Usage as u,TextureType as m,PixelFormat as _,PixelType as f,TextureSamplingMode as c,TextureWrapMode as d}from\"../../../../webgl/enums.js\";import{createProgram as g}from\"../../../../webgl/ProgramTemplate.js\";import{Texture as h}from\"../../../../webgl/Texture.js\";import{VertexArrayObject as p}from\"../../../../webgl/VertexArrayObject.js\";const A=300,b=32;class x extends i{constructor(){super(...arguments),this._color=e(1,0,0,1)}dispose(){this._outlineProgram?.dispose(),this._outlineProgram=null,this._tileInfoProgram?.dispose(),this._tileInfoProgram=null,this._outlineVertexArrayObject?.dispose(),this._outlineVertexArrayObject=null,this._tileInfoVertexArrayObject?.dispose(),this._tileInfoVertexArrayObject=null,this._canvas=null}prepareState({context:t}){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}draw(e,r){const{context:i,requestRender:o,allowDelayedRender:s}=e;if(!r.isReady)return;if(this._loadWGLResources(i),s&&t(o)&&(!this._outlineProgram.compiled||!this._tileInfoProgram.compiled))return void o();i.bindVAO(this._outlineVertexArrayObject),i.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),this._outlineProgram.setUniform2f(\"u_coord_range\",r.rangeX,r.rangeY),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),i.drawArrays(l.LINE_STRIP,0,4);const n=this._getTexture(i,r);n?(i.bindVAO(this._tileInfoVertexArrayObject),i.useProgram(this._tileInfoProgram),i.bindTexture(n,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",r.rangeX/r.width,r.rangeY/r.height),this._tileInfoProgram.setUniform2f(\"u_delta\",8,8),this._tileInfoProgram.setUniform2f(\"u_dimensions\",n.descriptor.width,n.descriptor.height),i.drawArrays(l.TRIANGLE_STRIP,0,4),i.bindVAO()):i.bindVAO()}_loadWGLResources(t){if(this._outlineProgram&&this._tileInfoProgram)return;const e=g(t,o),i=g(t,s),a=new Int8Array([0,0,1,0,1,1,0,1]),l=n.createVertex(t,u.STATIC_DRAW,a),m=new p(t,o.attributes,r,{geometry:l}),_=new Int8Array([0,0,1,0,0,1,1,1]),f=n.createVertex(t,u.STATIC_DRAW,_),c=new p(t,s.attributes,r,{geometry:f});this._outlineProgram=e,this._tileInfoProgram=i,this._outlineVertexArrayObject=m,this._tileInfoVertexArrayObject=c}_getTexture(t,e){if(e.texture&&e.triangleCountReportedInDebug===e.triangleCount)return e.texture;e.triangleCountReportedInDebug=e.triangleCount,this._canvas||(this._canvas=document.createElement(\"canvas\"),this._canvas.setAttribute(\"id\",\"canvas2d\"),this._canvas.setAttribute(\"width\",`${A}`),this._canvas.setAttribute(\"height\",`${b}`),this._canvas.setAttribute(\"style\",\"display:none\"));const r=e.triangleCount;let i=e.key.id;e.triangleCount>0&&(i+=`, ${r}`);const o=this._canvas,s=o.getContext(\"2d\");return s.font=\"24px sans-serif\",s.textAlign=\"left\",s.textBaseline=\"top\",s.clearRect(0,0,A,b),r>1e5?(s.fillStyle=\"red\",s.fillRect(0,0,A,b),s.fillStyle=\"black\"):(s.clearRect(0,0,A,b),s.fillStyle=\"blue\"),s.fillText(i,0,0),e.texture=new h(t,{target:m.TEXTURE_2D,pixelFormat:_.RGBA,dataType:f.UNSIGNED_BYTE,samplingMode:c.NEAREST,wrapMode:d.CLAMP_TO_EDGE},o),e.texture}}export{x as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as r}from\"../../../../../core/maybe.js\";import{f as e}from\"../../../../../chunks/vec4f32.js\";import{Pos2b as t}from\"../DefaultVertexAttributeLayouts.js\";import s from\"./WGLBrush.js\";import{background as i}from\"../shaders/BackgroundPrograms.js\";import{BufferObject as o}from\"../../../../webgl/BufferObject.js\";import{StencilOperation as a,Face as l,CompareFunction as n,PrimitiveType as d,Usage as m}from\"../../../../webgl/enums.js\";import{createProgram as c}from\"../../../../webgl/ProgramTemplate.js\";import{VertexArrayObject as _}from\"../../../../webgl/VertexArrayObject.js\";class h extends s{constructor(){super(...arguments),this._color=e(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:r}){r.setDepthWriteEnabled(!1),r.setDepthTestEnabled(!1),r.setStencilTestEnabled(!0),r.setBlendingEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.setStencilOp(a.KEEP,a.KEEP,a.REPLACE),r.setStencilWriteMask(255)}draw(e,t){const{context:s,requestRender:i,allowDelayedRender:o}=e;this._initialized||this._initialize(s),o&&r(i)&&!this._solidProgram.compiled?i():(s.setStencilFunctionSeparate(l.FRONT_AND_BACK,n.GREATER,t.stencilRef,255),s.bindVAO(this._solidVertexArrayObject),s.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.dvs),this._solidProgram.setUniform2fv(\"u_coord_range\",[t.rangeX,t.rangeY]),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),s.drawArrays(d.TRIANGLE_STRIP,0,4),s.bindVAO())}_initialize(r){if(this._initialized)return!0;const e=c(r,i);if(!e)return!1;const s=new Int8Array([0,0,1,0,0,1,1,1]),a=o.createVertex(r,m.STATIC_DRAW,s),l=new _(r,i.attributes,t,{geometry:a});return this._solidProgram=e,this._solidVertexArrayObject=l,this._initialized=!0,!0}}export{h as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isNone as t,isSome as e}from\"../../../../../core/maybe.js\";import{MIN_MAX_ZOOM_PRECISION_FACTOR as i,TEXTURE_BINDING_ATTRIBUTE_DATA_0 as s,TEXTURE_BINDING_ATTRIBUTE_DATA_1 as o,TEXTURE_BINDING_ATTRIBUTE_DATA_2 as a,TEXTURE_BINDING_ATTRIBUTE_DATA_3 as r,TEXTURE_BINDING_ATTRIBUTE_DATA_4 as n,TEXTURE_BINDING_ATTRIBUTE_DATA_5 as u}from\"../definitions.js\";import m from\"./WGLBrush.js\";import{MaterialKeyBase as v}from\"../materialKey/MaterialKey.js\";import{BlendFactor as f,CompareFunction as l}from\"../../../../webgl/enums.js\";class p extends m{constructor(){super(...arguments),this._computeDesc=new Map}prepareState({context:t},e){e&&e.includes(\"hittest\")?t.setBlendFunctionSeparate(f.ONE,f.ONE,f.ONE,f.ONE):t.setBlendFunctionSeparate(f.ONE,f.ONE_MINUS_SRC_ALPHA,f.ONE,f.ONE_MINUS_SRC_ALPHA),t.setBlendingEnabled(!0),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0)}draw(e,i,s){const o=this.getGeometryType();i.commit(e);const a=i.getGeometry(o);t(a)||(e.timeline.begin(this.name),e.attributeView.bindTextures(e.context),e.context.setStencilFunction(l.EQUAL,i.stencilRef,255),a.forEachCommand((t=>{const o=v.load(t.materialKey).symbologyType;this.supportsSymbology(o)&&this.drawGeometry(e,i,t,s)})))}_setSharedUniforms(t,m,v){const{displayLevel:f,pixelRatio:l,state:p,passOptions:c}=m;e(c)&&\"hittest\"===c.type&&(t.setUniform2fv(\"u_hittestPos\",c.position),t.setUniform1f(\"u_hittestDist\",c.distance)),t.setUniform1f(\"u_pixelRatio\",l),t.setUniformMatrix3fv(\"u_tileMat3\",v.transforms.tileMat3),t.setUniformMatrix3fv(\"u_viewMat3\",p.viewMat3),t.setUniformMatrix3fv(\"u_dvsMat3\",v.transforms.dvs),t.setUniformMatrix3fv(\"u_displayViewMat3\",p.displayViewMat3),t.setUniform1f(\"u_currentZoom\",Math.round(f*i)),t.setUniform1i(\"u_attributeTextureSize\",m.attributeView.size),t.setUniform1i(\"u_attributeData0\",s),t.setUniform1i(\"u_attributeData1\",o),t.setUniform1i(\"u_attributeData2\",a),t.setUniform1i(\"u_attributeData3\",r),t.setUniform1i(\"u_attributeData4\",n),t.setUniform1i(\"u_attributeData5\",u)}_setSizeVVUniforms(t,e,i,s){if(t.vvSizeMinMaxValue&&e.setUniform4fv(\"u_vvSizeMinMaxValue\",i.vvSizeMinMaxValue),t.vvSizeScaleStops&&e.setUniform1f(\"u_vvSizeScaleStopsValue\",i.vvSizeScaleStopsValue),t.vvSizeFieldStops){const t=i.getSizeVVFieldStops(s.key.level);null!=t&&(e.setUniform1fv(\"u_vvSizeFieldStopsValues\",t.values),e.setUniform1fv(\"u_vvSizeFieldStopsSizes\",t.sizes))}t.vvSizeUnitValue&&e.setUniform1f(\"u_vvSizeUnitValueWorldToPixelsRatio\",i.vvSizeUnitValueToPixelsRatio)}_setColorAndOpacityVVUniforms(t,e,i){t.vvColor&&(e.setUniform1fv(\"u_vvColorValues\",i.vvColorValues),e.setUniform4fv(\"u_vvColors\",i.vvColors)),t.vvOpacity&&(e.setUniform1fv(\"u_vvOpacityValues\",i.vvOpacityValues),e.setUniform1fv(\"u_vvOpacities\",i.vvOpacities))}_setRotationVVUniforms(t,e,i){t.vvRotation&&e.setUniform1f(\"u_vvRotationType\",\"geographic\"===i.vvMaterialParameters.vvRotationType?0:1)}_getTriangleDesc(t,e,i=[\"a_pos\"]){const s=e.bufferLayouts.geometry,o=i.map((t=>s.findIndex((e=>e.name===t)))),a=`${t}-${o.join(\"-\")}`;let r=this._computeDesc.get(a);if(!r){const t=e.strides,i=e.strides.geometry,n=new Map(e.attributes),u=s.map((t=>({...t}))),m=Math.max(...e.attributes.values()),v={geometry:u};let f=0;for(const e of o){const t=s[e];v.geometry.push({count:t.count,name:t.name+\"1\",divisor:t.divisor,normalized:t.normalized,offset:i+t.offset,stride:i,type:t.type}),v.geometry.push({count:t.count,name:t.name+\"2\",divisor:t.divisor,normalized:t.normalized,offset:2*i+t.offset,stride:i,type:t.type}),n.set(t.name+\"1\",m+ ++f),n.set(t.name+\"2\",m+ ++f)}r={bufferLayouts:v,attributes:n,strides:t},this._computeDesc.set(a,r)}return r}}export{p as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as t,unwrapOr as e}from\"../../../../../core/maybe.js\";import{WGLGeometryType as o,WGLSymbologyType as a}from\"../enums.js\";import{createProgramDescriptor as r}from\"../Utils.js\";import i from\"./WGLGeometryBrush.js\";import{MarkerMaterialKey as n}from\"../materialKey/MaterialKey.js\";import{getTechniqueFromMaterialKey as s}from\"../techniques/utils.js\";import{DataType as m,PrimitiveType as l}from\"../../../../webgl/enums.js\";const d={shader:\"materials/icon\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:m.SHORT},{location:1,name:\"a_vertexOffset\",count:2,type:m.SHORT},{location:2,name:\"a_texCoords\",count:2,type:m.UNSIGNED_SHORT},{location:3,name:\"a_bitSetAndDistRatio\",count:2,type:m.UNSIGNED_SHORT},{location:4,name:\"a_id\",count:4,type:m.UNSIGNED_BYTE},{location:5,name:\"a_color\",count:4,type:m.UNSIGNED_BYTE,normalized:!0},{location:6,name:\"a_outlineColor\",count:4,type:m.UNSIGNED_BYTE,normalized:!0},{location:7,name:\"a_sizeAndOutlineWidth\",count:4,type:m.UNSIGNED_BYTE},{location:8,name:\"a_zoomRange\",count:2,type:m.UNSIGNED_SHORT}]},hittestAttributes:[\"a_vertexOffset\",\"a_texCoords\"]};class u extends i{dispose(){}getGeometryType(){return o.MARKER}supportsSymbology(t){return t!==a.HEATMAP&&t!==a.PIE_CHART}drawGeometry(o,a,i,m){const{context:u,painter:c,rendererInfo:p,state:y,passOptions:_,requestRender:f,allowDelayedRender:E}=o,S=n.load(i.materialKey),N=s(S.data),T=t(_)&&\"hittest\"===_.type,{shader:g,vertexLayout:x,hittestAttributes:R}=e(N.programSpec,d);let h=l.TRIANGLES,U=r(S.data,x);T&&(U=this._getTriangleDesc(i.materialKey,U,R),h=l.POINTS);const{attributes:A,bufferLayouts:O}=U,G=c.materialManager.getMaterialProgram(o,S,g,A,m);if(E&&t(f)&&!G.compiled)return void f();u.useProgram(G),S.textureBinding&&c.textureManager.bindTextures(u,G,S,!0),this._setSharedUniforms(G,o,a);const I=S.vvRotation?y.displayViewMat3:y.displayMat3;G.setUniformMatrix3fv(\"u_displayMat3\",I),this._setSizeVVUniforms(S,G,p,a),this._setColorAndOpacityVVUniforms(S,G,p),this._setRotationVVUniforms(S,G,p);const M=i.target.getVAO(u,O,A,T);let b=i.indexCount,D=i.indexFrom*Uint32Array.BYTES_PER_ELEMENT;T&&(b/=3,D/=3),u.bindVAO(M),this._drawMarkers(o,a,G,h,b,D,T),u.bindVAO(null)}_drawMarkers(t,e,o,a,r,i,n){t.context.drawElements(a,r,m.UNSIGNED_INT,i)}}export{u as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nclass t{constructor(){this.name=this.constructor.name}createOptions(t,r){return null}}export{t as Effect};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as r}from\"./sources/resolver.js\";const e={shaders:{vertexShader:r(\"background/background.vert\"),fragmentShader:r(\"background/background.frag\")},attributes:new Map([[\"a_pos\",0]])};export{e as background};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as e}from\"./sources/resolver.js\";const r={shaders:{vertexShader:e(\"tileInfo/tileInfo.vert\"),fragmentShader:e(\"tileInfo/tileInfo.frag\")},attributes:new Map([[\"a_pos\",0]])};export{r as tileInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nconst e={background:{\"background.frag\":\"uniform lowp vec4 u_color;\\nvoid main() {\\ngl_FragColor = u_color;\\n}\",\"background.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}\"},bitBlit:{\"bitBlit.frag\":\"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nlowp vec4 color = texture2D(u_tex, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"bitBlit.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_pos, 0.0, 1.0);\\nv_uv = a_tex;\\n}\"},blend:{\"blend.frag\":\"precision mediump float;\\nuniform sampler2D u_layerTexture;\\nuniform lowp float u_opacity;\\nuniform lowp float u_inFadeOpacity;\\n#ifndef NORMAL\\nuniform sampler2D u_backbufferTexture;\\n#endif\\nvarying mediump vec2 v_uv;\\nfloat rgb2v(in vec3 c) {\\nreturn max(c.x, max(c.y, c.z));\\n}\\nvec3 rgb2hsv(in vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(in vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec3 tint(in vec3 Cb, in vec3 Cs) {\\nfloat vIn = rgb2v(Cb);\\nvec3 hsvTint = rgb2hsv(Cs);\\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\\nreturn hsv2rgb(hsvOut);\\n}\\nfloat overlay(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\\n}\\nfloat colorDodge(in float Cb, in float Cs) {\\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\\n}\\nfloat colorBurn(in float Cb, in float Cs) {\\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\\n}\\nfloat hardLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\\n}\\nfloat reflectBlend(in float Cb, in float Cs) {\\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\\n}\\nfloat softLight(in float Cb, in float Cs) {\\nif (Cs <= 0.5) {\\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\\n}\\nif (Cb <= 0.25) {\\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\\n}\\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\\n}\\nfloat vividLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\\n}\\nfloat minv3(in vec3 c) {\\nreturn min(min(c.r, c.g), c.b);\\n}\\nfloat maxv3(in vec3 c) {\\nreturn max(max(c.r, c.g), c.b);\\n}\\nfloat lumv3(in vec3 c) {\\nreturn dot(c, vec3(0.3, 0.59, 0.11));\\n}\\nfloat satv3(vec3 c) {\\nreturn maxv3(c) - minv3(c);\\n}\\nvec3 clipColor(vec3 color) {\\nfloat lum = lumv3(color);\\nfloat mincol = minv3(color);\\nfloat maxcol = maxv3(color);\\nif (mincol < 0.0) {\\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\\n}\\nif (maxcol > 1.0) {\\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\\n}\\nreturn color;\\n}\\nvec3 setLum(vec3 cbase, vec3 clum) {\\nfloat lbase = lumv3(cbase);\\nfloat llum = lumv3(clum);\\nfloat ldiff = llum - lbase;\\nvec3 color = cbase + vec3(ldiff);\\nreturn clipColor(color);\\n}\\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\\n{\\nfloat minbase = minv3(cbase);\\nfloat sbase = satv3(cbase);\\nfloat ssat = satv3(csat);\\nvec3 color;\\nif (sbase > 0.0) {\\ncolor = (cbase - minbase) * ssat / sbase;\\n} else {\\ncolor = vec3(0.0);\\n}\\nreturn setLum(color, clum);\\n}\\nvoid main() {\\nvec4 src = texture2D(u_layerTexture, v_uv);\\n#ifdef NORMAL\\ngl_FragColor = src *  u_opacity;\\n#else\\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\\nfloat as = u_opacity * src.a;\\nfloat ab = dst.a;\\n#ifdef DESTINATION_OVER\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\\n#endif\\n#ifdef SOURCE_IN\\nvec4 color = vec4(as * Cs * ab, as * ab);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef DESTINATION_IN\\nvec4 color = vec4(ab * Cb * as, ab * as);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef SOURCE_OUT\\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\\n#endif\\n#ifdef DESTINATION_OUT\\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\\n#endif\\n#ifdef SOURCE_ATOP\\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\\n#endif\\n#ifdef DESTINATION_ATOP\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\\n#endif\\n#ifdef XOR\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\\nas * (1.0 - ab) + ab * (1.0 - as));\\n#endif\\n#ifdef MULTIPLY\\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SCREEN\\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef OVERLAY\\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DARKEN\\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LIGHTER\\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\\n#endif\\n#ifdef LIGHTEN\\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_DODGE\\nvec3 f = clamp(vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_BURN\\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HARD_LIGHT\\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SOFT_LIGHT\\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DIFFERENCE\\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef EXCLUSION\\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef INVERT\\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\\n#endif\\n#ifdef VIVID_LIGHT\\nvec3 f = vec3(clamp(vividLight(Cb.r, Cs.r), 0.0, 1.0),\\nclamp(vividLight(Cb.g, Cs.g), 0.0, 1.0),\\nclamp(vividLight(Cb.b, Cs.b), 0.0, 1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HUE\\nvec3 f = setLumSat(Cs,Cb,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SATURATION\\nvec3 f = setLumSat(Cb,Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR\\nvec3 f = setLum(Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LUMINOSITY\\nvec3 f = setLum(Cb,Cs);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef PLUS\\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\\n#endif\\n#ifdef MINUS\\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\\n#endif\\n#ifdef AVERAGE\\nvec3 f = (Cb + Cs) / 2.0;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef REFLECT\\nvec3 f = clamp(vec3(reflectBlend(Cb.r, Cs.r),\\nreflectBlend(Cb.g, Cs.g),\\nreflectBlend(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#endif\\n}\",\"blend.vert\":\"attribute vec2 a_position;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_position , 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"},debug:{overlay:{\"overlay.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvoid main(void) {\\ngl_FragColor = v_color;\\n}\",\"overlay.vert\":\"attribute vec3 a_PositionAndFlags;\\nuniform mat3 u_dvsMat3;\\nuniform vec4 u_colors[4];\\nuniform float u_opacities[4];\\nvarying vec4 v_color;\\nvoid main(void) {\\nvec2 position = a_PositionAndFlags.xy;\\nfloat flags = a_PositionAndFlags.z;\\nint colorIndex = int(mod(flags, 4.0));\\nvec4 color;\\nfor (int i = 0; i < 4; i++) {\\ncolor = u_colors[i];\\nif (i == colorIndex) {\\nbreak;\\n}\\n}\\nint opacityIndex = int(mod(floor(flags / 4.0), 4.0));\\nfloat opacity;\\nfor (int i = 0; i < 4; i++) {\\nopacity = u_opacities[i];\\nif (i == opacityIndex) {\\nbreak;\\n}\\n}\\nv_color = color * opacity;\\ngl_Position = vec4((u_dvsMat3 * vec3(position, 1.0)).xy, 0.0, 1.0);\\n}\"}},dot:{dot:{\"dot.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nuniform highp float u_tileZoomFactor;\\nvoid main()\\n{\\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\\ngl_FragColor = v_color * alpha;\\n}\",\"dot.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nuniform sampler2D u_texture;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp float u_tileZoomFactor;\\nuniform highp float u_dotSize;\\nuniform highp float u_pixelRatio;\\nvarying vec2 v_pos;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nconst float EPSILON = 0.000001;\\nvoid main()\\n{\\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\\n0., -1., 0.,\\n0., 1., 1.  );\\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\\nv_color = texture2D(u_texture, texCoords.xy);\\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\\nfloat z = 0.;\\nz += 2.0 * step(v_color.a, EPSILON);\\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\\nv_dotRatio = u_dotSize / gl_PointSize;\\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\\n}\"}},filtering:{\"bicubic.glsl\":\"vec4 computeWeights(float v) {\\nfloat b = 1.0 / 6.0;\\nfloat v2 = v * v;\\nfloat v3 = v2 * v;\\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\nfloat w3 = b * v3;\\nreturn vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\nvec4 w = computeWeights(v);\\nfloat g0 = w.x + w.y;\\nfloat g1 = w.z + w.w;\\nfloat h0 = 1.0 - (w.y / g0) + v;\\nfloat h1 = 1.0 + (w.w / g1) - v;\\nreturn vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\\nvec2 texel = coords * texSize - 0.5;\\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\nvec2 coords10 = coords + hgX.x * eX;\\nvec2 coords00 = coords - hgX.y * eX;\\nvec2 coords11 = coords10 + hgY.x * eY;\\nvec2 coords01 = coords00 + hgY.x * eY;\\ncoords10 = coords10 - hgY.y * eY;\\ncoords00 = coords00 - hgY.y * eY;\\nvec4 color00 = texture2D(sampler, coords00);\\nvec4 color10 = texture2D(sampler, coords10);\\nvec4 color01 = texture2D(sampler, coords01);\\nvec4 color11 = texture2D(sampler, coords11);\\ncolor00 = mix(color00, color01, hgY.z);\\ncolor10 = mix(color10, color11, hgY.z);\\ncolor00 = mix(color00, color10, hgX.z);\\nreturn color00;\\n}\",\"bilinear.glsl\":\"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 texelStart = floor(coords * texSize);\\nvec2 coord0 = texelStart / texSize;\\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\nvec4 color0 = texture2D(sampler, coord0);\\nvec4 color1 = texture2D(sampler, coord1);\\nvec4 color2 = texture2D(sampler, coord2);\\nvec4 color3 = texture2D(sampler, coord3);\\nvec2 blend = fract(coords * texSize);\\nvec4 color01 = mix(color0, color1, blend.x);\\nvec4 color23 = mix(color2, color3, blend.x);\\nvec4 color = mix(color01, color23, blend.y);\\n#ifdef NNEDGE\\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\\n#endif\\nreturn color;\\n}\",\"epx.glsl\":\"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\nvec2 invSize = 1.0 / texSize;\\nvec2 texel = coords * texSize;\\nvec2 texel_i = floor(texel);\\nvec2 texel_frac = fract(texel);\\nvec4 colorP = texture2D(sampler, texel_i * invSize);\\nvec4 colorP1 = vec4(colorP);\\nvec4 colorP2 = vec4(colorP);\\nvec4 colorP3 = vec4(colorP);\\nvec4 colorP4 = vec4(colorP);\\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\\ncolorP1 = colorA;\\n}\\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\\ncolorP2 = colorB;\\n}\\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\\ncolorP3 = colorC;\\n}\\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\\ncolorP4 = colorD;\\n}\\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\nreturn mix(colorP12, colorP34, texel_frac.y);\\n}\"},fx:{integrate:{\"integrate.frag\":\"precision mediump float;\\nuniform lowp sampler2D u_sourceTexture;\\nuniform lowp sampler2D u_maskTexture;\\nuniform mediump float u_zoomLevel;\\nuniform highp float u_timeDelta;\\nuniform highp float u_animationTime;\\nvarying highp vec2 v_texcoord;\\n#include <materials/utils.glsl>\\nvoid main()\\n{\\n#ifdef DELTA\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\\nfloat flags = data0.r * 255.0;\\nfloat groupMinZoom = data0.g * 255.0;\\nfloat isVisible = getFilterBit(flags, 0);\\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\\nvec4 nextState = vec4(texel + direction * dt);\\ngl_FragColor =  vec4(nextState);\\n#elif defined(UPDATE)\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\ngl_FragColor = texel;\\n#endif\\n}\",\"integrate.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\\n}\"}},heatmap:{heatmapResolve:{\"heatmapResolve.frag\":\"precision highp float;\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 4.0\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform sampler2D u_texture;\\nuniform sampler2D u_gradient;\\nuniform vec2 u_densityMinAndInvRange;\\nuniform float u_densityNormalization;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 data = texture2D(u_texture, v_uv);\\nfloat density = data.r * COMPRESSION_FACTOR;\\ndensity *= u_densityNormalization;\\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\\ngl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\",\"heatmapResolve.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nvarying vec2 v_uv;\\nvoid main() {\\nv_uv = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 1., 1.);\\n}\"}},highlight:{\"blur.frag\":\"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_texture;\\nmediump float gauss1(mediump vec2 dir) {\\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\nreturn u_channelSelector * sample;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\nmediump float w = gauss1(i * u_direction.xy);\\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\nweight += w;\\n}\\nvoid main(void) {\\nmediump float tot = 0.0;\\nmediump float weight = 0.0;\\naccumGauss1(-5.0, tot, weight);\\naccumGauss1(-4.0, tot, weight);\\naccumGauss1(-3.0, tot, weight);\\naccumGauss1(-2.0, tot, weight);\\naccumGauss1(-1.0, tot, weight);\\naccumGauss1(0.0, tot, weight);\\naccumGauss1(1.0, tot, weight);\\naccumGauss1(2.0, tot, weight);\\naccumGauss1(3.0, tot, weight);\\naccumGauss1(4.0, tot, weight);\\naccumGauss1(5.0, tot, weight);\\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}\",\"highlight.frag\":\"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\nmediump float y = texture2D(u_texture, v_texcoord)[3];\\nconst mediump float y0 = 0.5;\\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\\nmediump float d = (y - y0) / m0;\\nreturn d;\\n}\\nmediump vec4 shade(mediump float d) {\\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\nmediump float d = estimateDistance();\\ngl_FragColor = shade(d);\\n}\",\"textured.vert\":\"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},magnifier:{\"magnifier.frag\":\"uniform lowp vec4 u_background;\\nuniform mediump sampler2D u_readbackTexture;\\nuniform mediump sampler2D u_maskTexture;\\nuniform mediump sampler2D u_overlayTexture;\\nuniform bool u_maskEnabled;\\nuniform bool u_overlayEnabled;\\nvarying mediump vec2 v_texCoord;\\nconst lowp float barrelFactor = 1.1;\\nlowp vec2 barrel(lowp vec2 uv) {\\nlowp vec2 uvn = uv * 2.0 - 1.0;\\nif (uvn.x == 0.0 && uvn.y == 0.0) {\\nreturn vec2(0.5, 0.5);\\n}\\nlowp float theta = atan(uvn.y, uvn.x);\\nlowp float r = pow(length(uvn), barrelFactor);\\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\\n}\\nvoid main(void)\\n{\\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\\ncolor = (color + (1.0 - color.a) * u_background);\\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\\ncolor *= mask;\\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\\n}\",\"magnifier.vert\":\"precision mediump float;\\nattribute mediump vec2 a_pos;\\nuniform mediump vec4 u_drawPos;\\nvarying mediump vec2 v_texCoord;\\nvoid main(void)\\n{\\nv_texCoord = a_pos;\\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\\n}\"},materials:{\"attributeData.glsl\":\"uniform highp sampler2D u_attributeData0;\\nuniform highp sampler2D u_attributeData1;\\nuniform highp sampler2D u_attributeData2;\\nuniform highp sampler2D u_attributeData3;\\nuniform highp sampler2D u_attributeData4;\\nuniform highp sampler2D u_attributeData5;\\nuniform highp int u_attributeTextureSize;\\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\\nhighp vec3  texel = unpackDisplayIdTexel(id);\\nhighp float size = float(u_attributeTextureSize);\\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\\nhighp float col = mod(u32, size);\\nhighp float row = (u32 - col) / size;\\nhighp float u = col / size;\\nhighp float v = row / size;\\nreturn vec2(u, v);\\n}\\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\\n}\\nhighp vec4 getAttributeData0(in highp vec3 id) {\\nvec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData0, coords);\\n}\\nhighp vec4 getAttributeData1(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData1, coords);\\n}\\nhighp vec4 getAttributeData2(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData2, coords);\\n}\\nhighp vec4 getAttributeData3(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData3, coords);\\n}\\nhighp vec4 getAttributeData4(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData4, coords);\\n}\\nhighp vec4 getAttributeData5(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData5, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\nbool isMagic = v.x == 255.0 && v.y == 255.0;\\nif (isMagic) {\\nreturn NAN_MAGIC_NUMBER;\\n}\\nreturn (v.x + v.y * float(0x100)) - 32768.0;\\n}\",\"barycentric.glsl\":\"float inTriangle(vec3 bary) {\\nvec3 absBary = abs(bary);\\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\\n}\\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\\nmat3 xyToBarycentricMat3 = mat3(\\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\\n);\\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\\n}\",\"constants.glsl\":\"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.00001;\\nconst float EPSILON_HITTEST = 0.05;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\\nconst int BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR = 3;\\nconst int BITSET_LINE_SCALE_DASH = 2;\",fill:{\"common.glsl\":\"#include <materials/symbologyTypeUtils.glsl>\\n#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying highp vec3 v_id;\\nvarying lowp vec4 v_color;\\nvarying lowp float v_opacity;\\nvarying mediump vec4 v_aux1;\\n#ifdef PATTERN\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvarying lowp float v_isOutline;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif\",\"fill.frag\":\"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nlowp vec4 drawLine() {\\nfloat v_lineWidth = v_aux1.x;\\nvec2  v_normal    = v_aux1.yz;\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineWidth,\\nv_opacity,\\nv_id\\n);\\nreturn shadeLine(inputs);\\n}\\n#endif\\nlowp vec4 drawFill() {\\nlowp vec4 out_color = vec4(0.);\\n#ifdef HITTEST\\nout_color = v_color;\\n#elif defined(PATTERN)\\nmediump vec4 v_tlbr = v_aux1;\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\nout_color = v_opacity * v_color * color;\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\nvec4 isPositive0 = step(0.0, difference0);\\nvec4 isPositive1 = step(0.0, difference1);\\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\nfloat lessThanEqZero = step(weightSum, 0.0);\\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\\nfloat divisor = (weightSum + lessThanEqZero);\\nvec4 weights0 = difference0 * isPositive0 / divisor;\\nvec4 weights1 = difference1 * isPositive1 / divisor;\\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\nfloat diffMax = max(max4(difference0), max4(difference1));\\nfloat lessThanZero = step(diffMax, 0.0);\\nfloat greaterOrEqZero = 1.0 - lessThanZero;\\nvec4 isMax0 = step(diffMax, difference0);\\nvec4 isMax1 = step(diffMax, difference1);\\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\nout_color = preEffectColor;\\n#else\\nout_color = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\nout_color.a = 1.0;\\n#endif\\nreturn out_color;\\n}\\nvoid main() {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (v_isOutline > 0.5) {\\ngl_FragColor = drawLine();\\n} else {\\ngl_FragColor = drawFill();\\n}\\n#else\\ngl_FragColor = drawFill();\\n#endif\\n}\",\"fill.vert\":\"#include <materials/symbologyTypeUtils.glsl>\\n#define PACKED_LINE\\nprecision highp float;\\nattribute float a_bitset;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_aux2;\\nattribute vec4 a_aux3;\\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\nattribute vec4 a_aux1;\\nattribute vec2 a_zoomRange;\\n#else\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#endif\\n#endif\\nuniform vec2 u_tileOffset;\\n#include <util/encoding.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#include <materials/fill/hittest.glsl>\\nconst float INV_SCALE_COMPRESSION_FACTOR = 1.0 / 128.0;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\\nLineData outputs = buildLine(\\nout_pos,\\na_id,\\na_pos,\\na_color,\\n(a_aux3.xy - 128.) / 16.,\\n(a_aux3.zw - 128.) / 16.,\\n0.,\\na_aux2.z / 16.,\\na_bitset,\\nvec4(0.),\\nvec2(0.),\\na_aux2.w / 16.\\n);\\nv_id      = outputs.id;\\nv_opacity = outputs.opacity;\\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\\nout_color = outputs.color;\\n}\\n#endif\\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\\nfloat a_bitSet = a_bitset;\\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\\n0., -2. / 512.,  0.,\\n-1.,  1.,  1.  );\\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\\n#else\\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n#endif\\n#ifdef PATTERN\\nvec4  a_tlbr   = a_aux1;\\nfloat a_width  = a_aux2.x;\\nfloat a_height = a_aux2.y;\\nvec2  a_offset = a_aux2.zw;\\nvec2  a_scale  = a_aux3.xy;\\nfloat a_angle  = a_aux3.z;\\nvec2 scale = INV_SCALE_COMPRESSION_FACTOR * a_scale;\\nfloat width = u_zoomFactor * a_width * scale.x;\\nfloat height = u_zoomFactor * a_height * scale.y;\\nfloat angle = C_256_TO_RAD * a_angle;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nfloat dx = 0.0;\\nfloat dy = 0.0;\\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\\nfloat id = rgba2float(vec4(a_id, 0.0));\\ndx = rand(vec2(id, 0.0));\\ndy = rand(vec2(0.0, id));\\n}\\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n-sinA / width, cosA / height, 0,\\ndx,            dy,           1);\\nvec2 tileOffset = vec2(u_tileOffset.x * cosA - u_tileOffset.y * sinA, u_tileOffset.x * sinA + u_tileOffset.y * cosA);\\ntileOffset = mod(tileOffset, vec2(a_aux2.x, a_aux2.y));\\nvec2 symbolOffset = (a_offset - tileOffset) / vec2(width, height);\\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\nif (getBit(a_bitSet, BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR) > 0.5) {\\n#ifdef VV_COLOR\\nv_sampleAlphaOnly *= 1.0 - getBit(a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\n#else\\nv_sampleAlphaOnly = 0.0;\\n#endif\\n}\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n}\\n#ifdef HITTEST\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\\nout_pos = vec3(0., 0., 2.);\\nreturn;\\n}\\n#endif\\nhittestFill(out_color, out_pos);\\ngl_PointSize = 1.0;\\n}\\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\\nif (v_isOutline > 0.5) {\\ndrawLine(out_color, out_pos);\\n} else {\\ndrawFill(out_color, out_pos);\\n}\\n}\\n#else\\n#define draw drawFill\\n#endif\\nvoid main()\\n{\\nINIT;\\nhighp vec3 pos  = vec3(0.);\\nhighp vec4 color  = vec4(0.);\\ndraw(color, pos);\\nv_color = color;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\",\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestFill(\\nout lowp vec4 out_color,\\nout highp vec3 out_pos\\n) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\\nfloat hittestDist = u_hittestDist;\\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist < 0. || dist >= hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\\n}\\n#endif\"},hittest:{\"common.glsl\":\"#ifdef HITTEST\\nuniform float u_hittestDist;\\nuniform highp vec2 u_hittestPos;\\nfloat projectScalar(vec2 a, vec2 b) {\\nreturn dot(a, normalize(b));\\n}\\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\\nvec2 L = p2 - p1;\\nvec2 A = p0 - p1;\\nfloat projAL = projectScalar(A, L);\\nfloat t = clamp(projAL / length(L), 0., 1.);\\nreturn distance(p0, p1 + t * (p2 - p1));\\n}\\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\\nfloat dist = distance(pos, vec3(u_hittestPos, 1.));\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif ((dist - size) > u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\\n}\\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\\nreturn inTriangle(xyToBarycentric(p, a, b, c));\\n}\\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\\nvec2 ba = b - a;\\nvec2 ca = c - a;\\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\\nif (isParallel) {\\nreturn -1.;\\n}\\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\\nreturn 0.;\\n}\\nfloat distAB = distPointSegment(p, a, b);\\nfloat distBC = distPointSegment(p, b, c);\\nfloat distCA = distPointSegment(p, c, a);\\nreturn min(min(distAB, distBC), distCA);\\n}\\n#endif\"},icon:{\"common.glsl\":\"#include <util/encoding.glsl>\\nuniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nuniform lowp sampler2D u_texture;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif\\n#ifdef SDF\\nvec4 getColor(vec2 v_size, vec2 v_tex) {\\nlowp vec4 fillPixelColor = v_color;\\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nfloat outlineWidth = v_outlineWidth;\\n#ifdef HIGHLIGHT\\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n#endif\\nif (outlineWidth > 0.25) {\\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\nfloat clampedOutlineSize = min(outlineWidth, size);\\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n}\\nreturn v_opacity * fillPixelColor;\\n}\\n#else\\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\nreturn v_opacity * texColor * v_color;\\n}\\n#endif\",heatmapAccumulate:{\"common.glsl\":\"varying lowp vec4 v_hittestResult;\\nvarying mediump vec2 v_offsetFromCenter;\\nvarying highp float v_fieldValue;\",\"heatmapAccumulate.frag\":\"precision mediump float;\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 0.25\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform lowp sampler2D u_texture;\\nvoid main() {\\n#ifdef HITTEST\\ngl_FragColor = v_hittestResult;\\n#else\\nfloat radius = length(v_offsetFromCenter);\\nfloat shapeWeight = step(radius, 1.0);\\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\\n#endif\\n}\",\"heatmapAccumulate.vert\":\"precision highp float;\\nattribute vec2 a_vertexOffset;\\nvec4 a_color = vec4(0.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\nuniform float u_radius;\\nuniform float u_isFieldActive;\\n#include <materials/vcommon.glsl>\\n#include <materials/hittest/common.glsl>\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\nvoid main() {\\nfloat filterFlags = getFilterFlags();\\n#ifdef HITTEST\\nhighp vec4 out_hittestResult = vec4(0.);\\nhighp vec3 out_pos = vec3(0.);\\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\\nv_hittestResult = out_hittestResult;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\nv_offsetFromCenter = sign(a_vertexOffset);\\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\\nvec3 centerPos = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec3 vertexPos = centerPos + u_displayViewMat3 * vec3(v_offsetFromCenter, 0.0) * u_radius;\\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_vertexOffset1;\\nattribute vec2 a_vertexOffset2;\\nattribute vec2 a_texCoords1;\\nattribute vec2 a_texCoords2;\\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\\n}\\nvoid hittestIcon(\\ninout lowp vec4 out_color,\\nout highp vec3 out_pos,\\nin vec3 pos,\\nin vec3 offset,\\nin vec2 size,\\nin float scaleFactor,\\nin float isMapAligned\\n) {\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec2 tex0 = a_texCoords  / u_mosaicSize;\\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\\nfloat alphaSum = 0.;\\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\\nout_pos.z += step(alphaSum, .05) * 2.0;\\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\\n}\\n#endif\",\"icon.frag\":\"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvoid main()\\n{\\n#ifdef HITTEST\\nvec4 color = v_color;\\n#else\\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\\n#endif\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"icon.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/icon/hittest.glsl>\\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat f = getSize(size.y) / size.y;\\nfloat sizeFactor = size.y / referenceSize;\\nreturn getSize(referenceSize) / referenceSize;\\n#else\\nreturn 1.;\\n#endif\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\\nsize.xy     *= scaleFactor;\\noffset.xy   *= scaleFactor;\\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\\nvec2 v_tex   = a_texCoords / u_mosaicSize;\\nfloat filterFlags = getFilterFlags();\\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity  = getOpacity();\\nv_id       = norm(a_id);\\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\\nv_sizeTex  = vec4(size.xy, v_tex.xy);\\n#ifdef SDF\\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\\n#ifdef VV_COLOR\\nv_overridingOutlineColor = v_isThin;\\n#else\\nv_overridingOutlineColor = 0.0;\\n#endif\\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\\nv_outlineColor = a_outlineColor;\\nv_distRatio = a_bitSetAndDistRatio.y / 126.0;\\n#endif\\n#ifdef HITTEST\\nhighp vec4 out_color = vec4(0.);\\nhighp vec3 out_pos   = vec3(0.);\\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\\nv_color = out_color;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},label:{\"common.glsl\":\"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;\",\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":\"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\nfloat glyphAngle = angle * 360.0 / 254.0;\\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\nfloat z = 0.0;\\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\\nreturn z;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat groupMinZoom    = getMinZoom();\\nfloat glyphMinZoom    = a_glyphData.x;\\nfloat glyphMaxZoom    = a_glyphData.y;\\nfloat glyphAngle      = a_glyphData.z;\\nfloat a_isBackground  = a_glyphData.w;\\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\nfloat fontSize           = a_texAndSize.z;\\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor = (isBackground + isText) * a_color;\\nv_color     = animation * ((1.0 - u_isHaloPass) * nonHaloColor + (u_isHaloPass * a_haloColor));\\nv_opacity   = 1.0;\\nv_tex       = a_texCoords / u_mosaicSize;\\nv_edgeDistanceOffset = u_isHaloPass * haloSize / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\ngl_Position = vec4(v_pos, 1.0);\\n#ifdef DEBUG\\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}\"},line:{\"common.glsl\":\"varying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\\n#ifdef SDF\\nvarying mediump float v_lineWidthRatio;\\n#endif\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist >= u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\\n}\\n#endif\",\"line.frag\":\"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\n#ifdef HITTEST\\nvoid main() {\\ngl_FragColor = v_color;\\n}\\n#else\\nvoid main() {\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineHalfWidth,\\nv_opacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr,\\nv_patternSize,\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance,\\n#endif\\n#endif\\nv_id\\n);\\ngl_FragColor = shadeLine(inputs);\\n}\\n#endif\",\"line.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/line/hittest.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\n#ifdef HITTEST\\nvoid draw() {\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\\nfloat a_cimHalfWidth = a_aux.x / 16. ;\\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nhighp vec3 pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestLine(v_color, pos, halfWidth);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#else\\nvoid draw()\\n{\\nhighp vec3 pos = vec3(0.);\\nLineData outputs = buildLine(\\npos,\\na_id,\\na_pos,\\na_color,\\na_offsetAndNormal.xy / 16.,\\na_offsetAndNormal.zw / 16.,\\na_accumulatedDistanceAndHalfWidth.x,\\na_accumulatedDistanceAndHalfWidth.y / 16.,\\na_segmentDirection.w,\\na_tlbr,\\na_segmentDirection.xy / 16.,\\na_aux.x / 16.\\n);\\nv_id              = outputs.id;\\nv_color           = outputs.color;\\nv_normal          = outputs.normal;\\nv_lineHalfWidth   = outputs.lineHalfWidth;\\nv_opacity         = outputs.opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr          = outputs.tlbr;\\nv_patternSize   = outputs.patternSize;\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio = outputs.lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance = outputs.accumulatedDistance;\\n#endif\\n#endif\\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#endif\\nvoid main() {\\nINIT;\\ndraw();\\n}\"},pie:{\"pie.frag\":\"precision mediump float;\\n#include <util/atan2.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nuniform lowp vec4 u_colors[NUMBER_OF_FIELDS];\\nuniform lowp vec4 u_defaultColor;\\nuniform lowp vec4 u_othersColor;\\nuniform lowp vec4 u_outlineColor;\\nuniform float u_donutRatio;\\nuniform float u_sectorThreshold;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\n#if __VERSION__ == 300\\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\\nreturn u_colors[colorIndex];\\n#else\\nmediump int colorIndex;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == index) {\\ncolorIndex = int(filteredSectorToColorId[i].y);\\n}\\n}\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == colorIndex) {\\nreturn u_colors[i];\\n}\\n}\\nreturn u_colors[NUMBER_OF_FIELDS - 1];\\n#endif\\n}\\nconst int OTHER_SECTOR_ID = 255;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor() {\\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\\nif (angle < 0.0) {\\nangle += 360.0;\\n} else if (angle > 360.0) {\\nangle = mod(angle, 360.0);\\n}\\nint numOfEntries = int(v_numOfEntries);\\nfloat maxSectorAngle = v_maxSectorAngle;\\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || u_sectorThreshold > 0.0) ? u_othersColor : u_defaultColor;\\nlowp vec4 prevColor = vec4(0.0);\\nlowp vec4 nextColor = vec4(0.0);\\nfloat startSectorAngle = 0.0;\\nfloat endSectorAngle = 0.0;\\nif (angle < maxSectorAngle) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nstartSectorAngle = endSectorAngle;\\nendSectorAngle = v_filteredSectorToColorId[index].x;\\nif (endSectorAngle > angle) {\\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\\nprevColor = u_sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = u_sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\\nbreak;\\n}\\nif (index == numOfEntries - 1) {\\nbreak;\\n}\\n}\\n} else {\\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\\nstartSectorAngle = maxSectorAngle;\\nendSectorAngle = 360.0;\\n}\\nlowp vec4 outlineColor = u_outlineColor;\\nfloat offset = length(v_offset);\\nfloat distanceSize = offset * v_size;\\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\\nfloat distanceToStartSector = (angle - startSectorAngle);\\nfloat distanceToEndSector = (endSectorAngle - angle);\\nfloat sectorThreshold = 0.6;\\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\\nif (endSectorAlpha > 0.0) {\\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\\n} else if (beginSectorAlpha > 0.0) {\\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\\n}\\n}\\nfloat donutSize = u_donutRatio * (v_size - v_outlineWidth);\\nfloat endOfDonut = donutSize - v_outlineWidth;\\nfloat aaThreshold = 0.75;\\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\\nfloat startOfOutline = v_size - v_outlineWidth;\\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\\n}\\nreturn v_opacity * circleAlpha * fillColor;\\n}\\n#endif\\nvoid main()\\n{\\nvec4 color = getColor();\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"pie.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\nuniform float u_outlineWidth;\\nuniform mediump float u_sectorThreshold;\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nint filter(in float sectorAngle,\\nin int currentIndex,\\ninout FilteredChartInfo filteredInfo,\\ninout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\nif (sectorAngle > u_sectorThreshold * 360.0) {\\nfilteredInfo.endSectorAngle += sectorAngle;\\n#if __VERSION__ == 300\\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; i++) {\\nif (i == filteredInfo.colorId) {\\nfilteredSectorToColorId[i] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n}\\n}\\n#endif\\n++filteredInfo.colorId;\\n}\\nreturn 0;\\n}\\nint filterValues(inout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS],\\ninout FilteredChartInfo filteredInfo,\\nin float sectorAngles[NUMBER_OF_FIELDS]) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nfloat sectorValue = sectorAngles[index];\\nfilter(sectorValue, index, filteredInfo, filteredSectorToColorId);\\n}\\nreturn filteredInfo.colorId;\\n}\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/hittest/common.glsl>\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\\nvec2 outSize = baseSize;\\n#ifdef VV_SIZE\\nfloat r = 0.5 * getSize(referenceSize) / referenceSize;\\noutSize.xy *= r;\\noffset.xy *= r;\\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\nreturn outSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nvec3  offset       = vec3(in_offset, 0.0);\\nreturn getMatrix(isMapAligned) * offset;\\n}\\nfloat filterNaNValues(in float value) {\\nreturn value != NAN_MAGIC_NUMBER && value > 0.0 ? value : 0.0;\\n}\\nvoid main()\\n{\\nINIT;\\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec2  a_offset = a_vertexOffset / 16.0;\\nfloat outlineSize = u_outlineWidth;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec2 size = getMarkerSize(a_offset, a_size, outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\\nfloat filterFlags = getFilterFlags();\\nvec3  pos         = vec3(a_pos * POSITION_PRECISION, 1.0);\\nv_opacity      = getOpacity();\\nv_id           = norm(a_id);\\nv_pos          = u_dvsMat3 * pos + getOffset(a_offset, a_bitSet);\\nv_offset       = sign(a_texCoords - 0.5);\\nv_size         = max(size.x, size.y);\\nv_outlineWidth = outlineSize;\\nfloat attributeData[10];\\nvec4 attributeData0 = getAttributeData3(a_id);\\nattributeData[0] = filterNaNValues(attributeData0.x);\\nattributeData[1] = filterNaNValues(attributeData0.y);\\nattributeData[2] = filterNaNValues(attributeData0.z);\\nattributeData[3] = filterNaNValues(attributeData0.w);\\n#if (NUMBER_OF_FIELDS > 4)\\nvec4 attributeData1 = getAttributeData4(a_id);\\nattributeData[4] = filterNaNValues(attributeData1.x);\\nattributeData[5] = filterNaNValues(attributeData1.y);\\nattributeData[6] = filterNaNValues(attributeData1.z);\\nattributeData[7] = filterNaNValues(attributeData1.w);\\n#endif\\n#if (NUMBER_OF_FIELDS > 8)\\nvec4 attributeData2 = getAttributeData5(a_id);\\nattributeData[8] = filterNaNValues(attributeData2.x);\\nattributeData[9] = filterNaNValues(attributeData2.y);\\n#endif\\nfloat sum = 0.0;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsum += attributeData[i];\\n}\\nfloat sectorAngles[NUMBER_OF_FIELDS];\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\\n}\\nvec2 filteredSectorToColorId[NUMBER_OF_FIELDS];\\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\\nv_numOfEntries = float(numOfEntries);\\nv_maxSectorAngle = filteredInfo.endSectorAngle;\\n#if __VERSION__ == 300\\nv_filteredSectorToColorId = filteredSectorToColorId;\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == numOfEntries) {\\nbreak;\\n}\\nv_filteredSectorToColorId[i] = filteredSectorToColorId[i];\\n}\\n#endif\\n#ifdef HITTEST\\nhighp vec3 out_pos = vec3(0.0);\\nv_color            = vec4(0.0);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  pos, v_size);\\ngl_PointSize = 1.0;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},shared:{line:{\"common.glsl\":\"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\nstruct LineData {\\nlowp vec4 color;\\nmediump vec2 normal;\\nmediump float lineHalfWidth;\\nlowp float opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nmediump vec4 tlbr;\\nmediump vec2 patternSize;\\n#endif\\n#ifdef SDF\\nmediump float lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nhighp float accumulatedDistance;\\n#endif\\n#endif\\nhighp vec3 id;\\n};\",\"line.frag\":\"uniform lowp float u_blur;\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\nuniform highp float u_pixelRatio;\\n#endif\\n#endif\\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * line.lineHalfWidth;\\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\\n}\\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float lineHalfWidth = line.lineHalfWidth;\\nmediump float adjustedPatternHeight = line.patternSize.y * 2.0 * lineHalfWidth / line.patternSize.x;\\nmediump float relativeTexY = fract(line.accumulatedDistance / adjustedPatternHeight);\\nmediump float relativeTexX = 0.5 + 0.5 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nreturn line.opacity * line.color * color;\\n}\\n#else\\nlowp vec4 getLineColor(LineData line) {\\nreturn line.opacity * line.color;\\n}\\n#endif\\nvec4 shadeLine(LineData line)\\n{\\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\nlowp vec4 out_color = getLineColor(line) * alpha;\\n#ifdef HIGHLIGHT\\nout_color.a = step(1.0 / 255.0, out_color.a);\\n#endif\\n#ifdef ID\\nif (out_color.a < 1.0 / 255.0) {\\ndiscard;\\n}\\nout_color = vec4(line.id, 0.0);\\n#endif\\nreturn out_color;\\n}\",\"line.vert\":\"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\\n#ifdef VV_SIZE\\nfloat refLineWidth = 2.0 * referenceHalfWidth;\\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\\n#else\\nreturn lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\nhalfWidth = max(halfWidth, 2.0);\\n#endif\\nreturn halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nreturn thinLineFactor * halfWidth * offset;\\n}\\nLineData buildLine(\\nout vec3 out_pos,\\nin vec3 in_id,\\nin vec2 in_pos,\\nin vec4 in_color,\\nin vec2 in_offset,\\nin vec2 in_normal,\\nin float in_accumulatedDist,\\nin float in_lineHalfWidth,\\nin float in_bitSet,\\nin vec4 in_tlbr,\\nin vec2 in_segmentDirection,\\nin float in_referenceHalfWidth\\n)\\n{\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nfloat z         = 2.0 * step(baseWidth, 0.0);\\nvec2  dist      = getDist(in_offset, halfWidth);\\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvec4  color     = in_color;\\nfloat opacity   = 1.0;\\n#else\\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nfloat opacity   = getOpacity();\\n#ifdef SDF\\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\\n#endif\\n#endif\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#endif\\nout_pos = vec3(pos.xy, z);\\nreturn LineData(\\ncolor,\\nin_normal,\\nhalfWidth,\\nopacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nin_tlbr / u_mosaicSize.xyxy,\\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\\n#endif\\n#ifdef SDF\\nlineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\\n#endif\\n#endif\\nnorm(in_id)\\n);\\n}\"}},\"symbologyTypeUtils.glsl\":\"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\n#endif\",text:{\"common.glsl\":\"uniform highp vec2 u_mosaicSize;\\nvarying highp vec3 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\",\"text.frag\":\"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor()\\n{\\nfloat SDF_CUTOFF = (2.0 / 8.0);\\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\nedge /= 2.0;\\n#endif\\nlowp float aa = v_antialiasingWidth;\\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\nreturn alpha * v_color * v_opacity;\\n}\\n#endif\\nvoid main()\\n{\\ngl_FragColor = getColor();\\n}\",\"text.vert\":\"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\n#include <materials/text/hittest.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_zoomRange;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat r = getSize(referenceSize) / referenceSize;\\nbaseSize *= r;\\noffset.xy *= r;\\nreturn baseSize;\\n#endif\\nreturn baseSize;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_isBackground  = a_aux.y;\\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\\nfloat a_bitSet        = a_aux.w;\\nfloat a_fontSize      = a_texFontSize.z;\\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor  = (isBackground * a_color) + (isText * getColor(a_color, a_bitSet, 1));\\nv_color   = u_isHaloPass * a_haloColor + (1.0 - u_isHaloPass) * nonHaloColor;\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nv_tex     = a_texCoords / u_mosaicSize;\\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\nv_edgeDistanceOffset = u_isHaloPass * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n#ifdef HITTEST\\nhighp vec3 out_pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\\n+ u_tileMat3 * offset, fontSize / 2.);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#else\\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#endif\\n}\"},\"utils.glsl\":\"float rshift(in float u32, in int amount) {\\nreturn floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\nfloat offset = pow(2.0, float(bitIndex));\\nreturn mod(floor(bitset / offset), 2.0);\\n}\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex + 1);\\n}\\nfloat getHighlightBit(in float bitset) {\\nreturn getBit(bitset, 0);\\n}\\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\\nfloat isAggregate = getBit(bitset.b, 7);\\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\nfloat r = mod(rshift(u32, 0), 255.0);\\nfloat g = mod(rshift(u32, 8), 255.0);\\nfloat b = mod(rshift(u32, 16), 255.0);\\nfloat a = mod(rshift(u32, 24), 255.0);\\nreturn vec4(r, g, b, a);\\n}\\nvec3 norm(in vec3 v) {\\nreturn v /= 255.0;\\n}\\nvec4 norm(in vec4 v) {\\nreturn v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\nreturn max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\nreturn (bytes - 127.0) / 127.0;\\n}\\nhighp float rand(in vec2 co) {\\nhighp float a = 12.9898;\\nhighp float b = 78.233;\\nhighp float c = 43758.5453;\\nhighp float dt = dot(co, vec2(a,b));\\nhighp float sn = mod(dt, 3.14);\\nreturn fract(sin(sn) * c);\\n}\",\"vcommon.glsl\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/barycentric.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec3 a_id;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform highp mat3 u_displayViewMat3;\\nuniform highp mat3 u_tileMat3;\\nuniform highp mat3 u_viewMat3;\\nuniform highp float u_pixelRatio;\\nuniform mediump float u_zoomFactor;\\nuniform mediump float u_antialiasing;\\nuniform mediump float u_currentZoom;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\n#ifdef SUPPORTS_TEXTURE_FLOAT\\ntarget.rgba = getAttributeData2(a_id);\\n#else\\nvec4 data0 = getAttributeData2(a_id);\\nvec4 data1 = getAttributeData3(a_id);\\ntarget.r = u88VVToFloat(data0.rg * 255.0);\\ntarget.g = u88VVToFloat(data0.ba * 255.0);\\ntarget.b = u88VVToFloat(data1.rg * 255.0);\\ntarget.a = u88VVToFloat(data1.ba * 255.0);\\n#endif\\n}\\n#ifdef VV\\n#define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n#define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\nfloat isColorLocked   = getBit(a_bitSet, index);\\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\nreturn a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\nreturn 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size) {\\n#ifdef VV_SIZE\\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\\n#else\\nreturn in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\nreturn mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\nreturn ceil(getAttributeData0(a_id).x * 255.0);\\n#else\\nreturn getAttributeData0(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\nreturn getAttributeData1(a_id);\\n}\\nfloat getMinZoom() {\\nvec4 data0 = getAttributeData0(a_id) * 255.0;\\nreturn data0.g;\\n}\\nmat3 getMatrixNoDisplay(float isMapAligned) {\\nreturn isMapAligned * u_viewMat3 * u_tileMat3 + (1.0 - isMapAligned) * u_tileMat3;\\n}\\nmat3 getMatrix(float isMapAligned) {\\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\\n}\\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef INSIDE\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(OUTSIDE)\\npos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(HIGHLIGHT)\\n#if !defined(HIGHLIGHT_ALL)\\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\\n#endif\\n#endif\\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\\nreturn pos;\\n}\",\"vv.glsl\":\"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n#define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n#define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float u_vvColorValues[8];\\nuniform vec4 u_vvColors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 u_vvSizeMinMaxValue;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float u_vvSizeScaleStopsValue;\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float u_vvSizeFieldStopsValues[6];\\nuniform float u_vvSizeFieldStopsSizes[6];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float u_vvOpacityValues[8];\\nuniform float u_vvOpacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float u_vvRotationType;\\n#endif\\nbool isNan(float val) {\\nreturn (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 6;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\\nreturn u_vvSizeFieldStopsSizes[0];\\n}\\nfor (int i = 1; i < VV_SIZE_N; ++i) {\\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\\n}\\n}\\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\nif (isNan(opacityValue)) {\\nreturn 1.0;\\n}\\nif (opacityValue <= u_vvOpacityValues[0]) {\\nreturn u_vvOpacities[0];\\n}\\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\\nif (u_vvOpacityValues[i] >= opacityValue) {\\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\\n}\\n}\\nreturn u_vvOpacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat4(1, 0, 0, 0,\\n0, 1, 0, 0,\\n0, 0, 1, 0,\\n0, 0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat4(cosA, sinA, 0, 0,\\n-sinA,  cosA, 0, 0,\\n0,     0, 1, 0,\\n0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat3(1, 0, 0,\\n0, 1, 0,\\n0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * -rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat3(cosA, -sinA, 0,\\nsinA, cosA, 0,\\n0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\nif (isNan(colorValue) || isColorLocked == 1.0) {\\nreturn fallback;\\n}\\nif (colorValue <= u_vvColorValues[0]) {\\nreturn u_vvColors[0];\\n}\\nfor (int i = 1; i < VV_COLOR_N; ++i) {\\nif (u_vvColorValues[i] >= colorValue) {\\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\\n}\\n}\\nreturn u_vvColors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nreturn getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\nreturn u_vvSizeScaleStopsValue;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\nfloat outSize = getVVStopsSize(vvSize, size);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\nreturn getVVUnitValue(vvSize, size);\\n#else\\nreturn size;\\n#endif\\n}\"},overlay:{overlay:{\"overlay.frag\":\"precision lowp float;\\nuniform lowp sampler2D u_texture;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_texture, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"overlay.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_uv;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_perspective;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\nv_uv = a_uv;\\nfloat w = 1.0 + dot(a_uv, u_perspective);\\nvec3 pos = u_dvsMat3 * vec3(a_pos, 1.0);\\ngl_Position = vec4(w * pos.xy, 0.0, w);\\n}\"}},\"post-processing\":{blit:{\"blit.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_FragColor = texture2D(u_texture, v_uv);\\n}\"},bloom:{composite:{\"composite.frag\":\"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\nfloat mirrorFactor = 1.2 - factor;\\nreturn mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\nvec4 color = u_bloomStrength * (\\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n);\\ngl_FragColor = clamp(color, 0.0, 1.0);\\n}\"},gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = float(SIGMA);\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},luminosityHighPass:{\"luminosityHighPass.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 texel = texture2D(u_texture, v_uv);\\nvec3 luma = vec3(0.299, 0.587, 0.114);\\nfloat v = dot(texel.xyz, luma);\\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\ngl_FragColor = mix(outputColor, texel, alpha);\\n}\"}},blur:{gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = u_sigma;\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},\"radial-blur\":{\"radial-blur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\nfloat samples[10];\\nsamples[0] = -0.08;\\nsamples[1] = -0.05;\\nsamples[2] = -0.03;\\nsamples[3] = -0.02;\\nsamples[4] = -0.01;\\nsamples[5] =  0.01;\\nsamples[6] =  0.02;\\nsamples[7] =  0.03;\\nsamples[8] =  0.05;\\nsamples[9] =  0.08;\\nvec2 dir = 0.5 - v_uv;\\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\ndir = dir / dist;\\nvec4 color = texture2D(u_colorTexture,v_uv);\\nvec4 sum = color;\\nfor (int i = 0; i < 10; i++) {\\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n}\\nsum *= 1.0 / 11.0;\\nfloat t = dist * sampleStrength;\\nt = clamp(t, 0.0, 1.0);\\ngl_FragColor = mix(color, sum, t);\\n}\"}},dra:{\"dra.frag\":\"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\nvec4 color = texture2D(u_texture, v_uv);\\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\nvec3 colorUnpremultiply = color.rgb / color.a;\\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}\",\"min-max\":{\"min-max.frag\":\"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\nvec2 onePixel = vec2(1.0) / u_srcResolution;\\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\\nvec4 minColor = vec4(1.0);\\nvec4 maxColor = vec4(0.0);\\nfor (int y = 0; y < CELL_SIZE; ++y) {\\nfor (int x = 0; x < CELL_SIZE; ++x) {\\nvec2 offset = uv + vec2(x, y) * onePixel;\\nminColor = min(minColor, texture2D(u_minTexture, offset));\\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n}\\n}\\ngl_FragData[0] = minColor;\\ngl_FragData[1] = maxColor;\\n}\"}},\"drop-shadow\":{composite:{\"composite.frag\":\"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nuniform vec2 u_shadowOffset;\\nuniform highp mat3 u_displayViewMat3;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}\"}},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\nG[0] = g0,\\nG[1] = g1,\\nG[2] = g2,\\nG[3] = g3,\\nG[4] = g4,\\nG[5] = g5,\\nG[6] = g6,\\nG[7] = g7,\\nG[8] = g8;\\nmat3 I;\\nfloat cnv[9];\\nvec3 sample;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 9; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}\"},sobel:{\"sobel.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}\"}},\"edge-enhance\":{\"edge-enhance.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nvec4 color = texture2D(u_colorTexture, v_uv);\\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}\"},filterEffect:{\"filterEffect.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_colorTexture, v_uv);\\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\nfloat a = color.a;\\ngl_FragColor = vec4(a * rgbw.rgb, a);\\n}\"},pp:{\"pp.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"}},raster:{bitmap:{\"bitmap.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform highp vec2 u_coordScale;\\nuniform lowp float u_opacity;\\n#include <filtering/bicubic.glsl>\\nvoid main() {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\\n#else\\nvec4 color = texture2D(u_texture, v_texcoord);\\n#endif\\ngl_FragColor = vec4(color.rgb * u_opacity, color.a * u_opacity);\\n}\",\"bitmap.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},common:{\"common.glsl\":\"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\ntargetLocation = projectPixelLocation(targetLocation);\\n#endif\\nreturn targetLocation;\\n}\\nbool isOutside(vec2 coords){\\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\nreturn true;\\n} else {\\nreturn false;\\n}\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\nvec4 color = texture2D(u_image, pixelLocation);\\n#endif\\nreturn color;\\n}\",\"common.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\",\"contrastBrightness.glsl\":\"uniform float u_contrastOffset;\\nuniform float u_brightnessOffset;\\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\\nfloat maxI = 255.0;\\nfloat mid = 128.0;\\nfloat c = u_contrastOffset;\\nfloat b = u_brightnessOffset;\\nvec4 v;\\nif (c > 0.0 && c < 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\\n} else if (c <= 0.0 && c > -100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\\n} else if (c == 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\\nv = (sign(v) + 1.0) / 2.0;\\n} else if (c == -100.0) {\\nv = vec4(mid, mid, mid, currentPixel.a);\\n}\\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\\n}\",\"inverse.glsl\":\"float invertValue(float value) {\\nfloat s = sign(value);\\nreturn (s * s) / (value + abs(s) - 1.0);\\n}\",\"mirror.glsl\":\"vec2 mirror(vec2 pos) {\\nvec2 pos1 = abs(pos);\\nreturn step(pos1, vec2(1.0, 1.0)) * pos1 + step(1.0, pos1) * (2.0 - pos1);\\n}\",\"projection.glsl\":\"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\n#ifdef LOOKUP_PROJECTION\\nvec4 pv = texture2D(u_transformGrid, coords);\\nreturn vec2(pv.r, pv.g);\\n#endif\\nvec2 index_image = floor(coords * u_targetImageSize);\\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\nvec2 srcLocation;\\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\\nif (pos.s <= pos.t) {\\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n} else {\\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n}\\nreturn srcLocation;\\n}\"},flow:{\"getFadeOpacity.glsl\":\"uniform float u_decayRate;\\nuniform float u_fadeToZero;\\nfloat getFadeOpacity(float x) {\\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\\n}\",\"getFragmentColor.glsl\":\"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\\nif (dist > featheringStart) {\\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\\n}\\nreturn color;\\n}\",imagery:{\"imagery.frag\":\"precision highp float;\\nvarying vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform float u_Min;\\nuniform float u_Max;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nfloat getIntensity(float v) {\\nreturn u_Min + v * (u_Max - u_Min);\\n}\\nvoid main(void) {\\nvec4 sampled = texture2D(u_texture, v_texcoord);\\nfloat intensity = getIntensity(sampled.r);\\ngl_FragColor = getColor(intensity);\\ngl_FragColor.a *= getOpacity(sampled.r);\\ngl_FragColor.a *= sampled.a;\\ngl_FragColor.rgb *= gl_FragColor.a;\\n}\",\"imagery.vert\":\"attribute vec2 a_position;\\nattribute vec2 a_texcoord;\\nuniform mat3 u_dvsMat3;\\nvarying vec2 v_texcoord;\\nvoid main(void) {\\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},particles:{\"particles.frag\":\"precision highp float;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/getFragmentColor.glsl>\\nvoid main(void) {\\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\\n}\",\"particles.vert\":\"attribute vec4 a_xyts0;\\nattribute vec4 a_xyts1;\\nattribute vec4 a_typeIdDurationSeed;\\nattribute vec4 a_extrudeInfo;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/vv.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nvec2 position0 = a_xyts0.xy;\\nfloat t0 = a_xyts0.z;\\nfloat speed0 = a_xyts0.w;\\nvec2 position1 = a_xyts1.xy;\\nfloat t1 = a_xyts1.z;\\nfloat speed1 = a_xyts1.w;\\nfloat type = a_typeIdDurationSeed.x;\\nfloat id = a_typeIdDurationSeed.y;\\nfloat duration = a_typeIdDurationSeed.z;\\nfloat seed = a_typeIdDurationSeed.w;\\nvec2 e0 = a_extrudeInfo.xy;\\nvec2 e1 = a_extrudeInfo.zw;\\nfloat animationPeriod = duration + u_trailLength;\\nfloat scaledTime = u_time * u_flowSpeed;\\nfloat randomizedTime = scaledTime + seed * animationPeriod;\\nfloat t = mod(randomizedTime, animationPeriod);\\nfloat fUnclamped = (t - t0) / (t1 - t0);\\nfloat f = clamp(fUnclamped, 0.0, 1.0);\\nfloat clampedTime = mix(t0, t1, f);\\nfloat speed = mix(speed0, speed1, f);\\nvec2 extrude;\\nvec2 position;\\nfloat fadeOpacity;\\nfloat introOpacity;\\nif (type == 2.0) {\\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nvec2 ortho = mix(e0, e1, f);\\nvec2 parallel;\\nparallel = normalize(position1 - position0) * 0.5;\\nif (id == 1.0) {\\nextrude = ortho;\\nv_texcoord = vec2(0.5, 0.0);\\n} else if (id == 2.0) {\\nextrude = -ortho;\\nv_texcoord = vec2(0.5, 1.0);\\n} else if (id == 3.0) {\\nextrude = ortho + parallel;\\nv_texcoord = vec2(1.0, 0.0);\\n} else if (id == 4.0) {\\nextrude = -ortho + parallel;\\nv_texcoord = vec2(1.0, 1.0);\\n}\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else {\\nif (fUnclamped < 0.0) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nif (id == 1.0) {\\nextrude = e0;\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 2.0) {\\nextrude = -e0;\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 3.0) {\\nextrude = mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else if (id == 4.0) {\\nextrude = -mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n}\\n}\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_color.a *= fadeOpacity;\\nv_color.a *= mix(1.0, introOpacity, u_introFade);\\nv_color.rgb *= v_color.a;\\n}\"},streamlines:{\"streamlines.frag\":\"precision highp float;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_size;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/getFragmentColor.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\\n}\",\"streamlines.vert\":\"attribute vec3 a_positionAndSide;\\nattribute vec3 a_timeInfo;\\nattribute vec2 a_extrude;\\nattribute float a_speed;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_side;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nvoid main(void) {\\nvec4 lineColor = getColor(a_speed);\\nfloat lineOpacity = getOpacity(a_speed);\\nfloat lineSize = getSize(a_speed);\\nvec2 position = a_positionAndSide.xy;\\nv_side = a_positionAndSide.z;\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_time = a_timeInfo.x;\\nv_totalTime = a_timeInfo.y;\\nv_timeSeed = a_timeInfo.z;\\nv_color = lineColor;\\nv_color.a *= lineOpacity;\\nv_color.rgb *= v_color.a;\\nv_size = lineSize;\\n}\"},\"vv.glsl\":\"#define MAX_STOPS 8\\n#ifdef VV_COLOR\\nuniform float u_color_stops[MAX_STOPS];\\nuniform vec4 u_color_values[MAX_STOPS];\\nuniform int u_color_count;\\n#else\\nuniform vec4 u_color;\\n#endif\\n#ifdef VV_OPACITY\\nuniform float u_opacity_stops[MAX_STOPS];\\nuniform float u_opacity_values[MAX_STOPS];\\nuniform int u_opacity_count;\\n#else\\nuniform float u_opacity;\\n#endif\\n#ifdef VV_SIZE\\nuniform float u_size_stops[MAX_STOPS];\\nuniform float u_size_values[MAX_STOPS];\\nuniform int u_size_count;\\n#else\\nuniform float u_size;\\n#endif\\nuniform float u_featheringOffset;\\nvec4 getColor(float x) {\\n#ifdef VV_COLOR\\nvec4 color = u_color_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_color_count) {\\nbreak;\\n}\\nfloat x1 = u_color_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_color_stops[i];\\nvec4 y2 = u_color_values[i];\\nif (x < x2) {\\nvec4 y1 = u_color_values[i - 1];\\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\ncolor = y2;\\n}\\n}\\n}\\n#else\\nvec4 color = u_color;\\n#endif\\nreturn color;\\n}\\nfloat getOpacity(float x) {\\n#ifdef VV_OPACITY\\nfloat opacity = u_opacity_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_opacity_count) {\\nbreak;\\n}\\nfloat x1 = u_opacity_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_opacity_stops[i];\\nfloat y2 = u_opacity_values[i];\\nif (x < x2) {\\nfloat y1 = u_opacity_values[i - 1];\\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nopacity = y2;\\n}\\n}\\n}\\n#else\\nfloat opacity = u_opacity;\\n#endif\\nreturn opacity;\\n}\\nfloat getSize(float x) {\\n#ifdef VV_SIZE\\nfloat size = u_size_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_size_count) {\\nbreak;\\n}\\nfloat x1 = u_size_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_size_stops[i];\\nfloat y2 = u_size_values[i];\\nif (x < x2) {\\nfloat y1 = u_size_values[i - 1];\\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nsize = y2;\\n}\\n}\\n}\\n#else\\nfloat size = u_size;\\n#endif\\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\\n}\"},hillshade:{\"hillshade.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform int u_hillshadeType;\\nuniform float u_sinZcosAs[6];\\nuniform float u_sinZsinAs[6];\\nuniform float u_cosZs[6];\\nuniform float u_weights[6];\\nuniform vec2 u_factor;\\nuniform float u_minValue;\\nuniform float u_maxValue;\\n#include <raster/lut/colorize.glsl>\\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\\nif (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\\nreturn 0.0;\\n}\\nelse {\\nreturn e;\\n}\\n}\\nvec3 rgb2hsv(vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\\nvec3 hsv = rgb2hsv(rgb.xyz);\\nhsv.z = hillshade;\\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nif (currentPixel.a == 0.0) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec2 axy = vec2(-1.0, -1.0);\\nvec2 bxy = vec2(0.0, -1.0);\\nvec2 cxy = vec2(1.0, -1.0);\\nvec2 dxy = vec2(-1.0, 0.0);\\nvec2 fxy = vec2(1.0, 0.0);\\nvec2 gxy = vec2(-1.0, 1.0);\\nvec2 hxy = vec2(0.0, 1.0);\\nvec2 ixy = vec2(1.0, 1.0);\\nvec2 onePixel = 1.0 / u_srcImageSize;\\nif (pixelLocation.s < onePixel.s) {\\naxy[0] = 1.0;\\ndxy[0] = 1.0;\\ngxy[0] = 1.0;\\n}\\nif (pixelLocation.t < onePixel.t) {\\naxy[1] = 1.0;\\nbxy[1] = 1.0;\\ncxy[1] = 1.0;\\n}\\nif (pixelLocation.s > 1.0 - onePixel.s) {\\ncxy[0] = -1.0;\\nfxy[0] = -1.0;\\nixy[0] = -1.0;\\n}\\nif (pixelLocation.t > 1.0 - onePixel.t) {\\ngxy[1] = -1.0;\\nhxy[1] = -1.0;\\nixy[1] = -1.0;\\n}\\nvec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\\nvec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\\nvec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\\nvec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\\nvec4 ve = texture2D(u_image, pixelLocation);\\nvec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\\nvec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\\nvec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\\nvec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\\nfloat dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\\nfloat hillshade = 0.0;\\nif (u_hillshadeType == 0){\\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\\nif (z < 0.0)  z = 0.0;\\nhillshade = z;\\n} else {\\nfor (int k = 0; k < 6; k++) {\\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\\nif (z < 0.0) z = 0.0;\\nhillshade = hillshade + z * u_weights[k];\\nif (k == 5) break;\\n}\\n}\\nfloat alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\\n#ifdef APPLY_COLORMAP\\ngl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\\n#else\\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\\n#endif\\n}\"},lut:{\"colorize.glsl\":\"uniform sampler2D u_colormap;\\nuniform float u_colormapOffset;\\nuniform float u_colormapMaxIndex;\\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\\nvec4 color = texture2D(u_colormap, clrPosition);\\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\\nreturn result;\\n}\",\"lut.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\n#include <raster/lut/colorize.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nvec4 result = colorize(currentPixel, 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\\n}\"},magdir:{\"magdir.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nuniform lowp float u_opacity;\\nvoid main() {\\ngl_FragColor = v_color * u_opacity;\\n}\",\"magdir.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nuniform float u_rotation;\\nuniform vec4 u_colors[12];\\nvarying vec4 v_color;\\nvoid main()\\n{\\nfloat angle = a_offset.y + u_rotation;\\n#ifndef ROTATION_GEOGRAPHIC\\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\\n#endif\\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\\nv_color = u_colors[int(a_vv.x)];\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},reproject:{\"reproject.frag\":\"precision mediump float;\\nvarying vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n}\",\"reproject.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_position;\\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\\n}\"},rfx:{aspect:{\"aspect.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_cellSize;\\nuniform vec2 u_srcImageSize;\\n#include <raster/common/mirror.glsl>\\nconst float pi = 3.14159265359;\\nvoid main() {\\nvec2 axy = vec2(-1.0, -1.0);\\nvec2 bxy = vec2(0.0, -1.0);\\nvec2 cxy = vec2(1.0, -1.0);\\nvec2 dxy = vec2(-1.0, 0.0);\\nvec2 fxy = vec2(1.0, 0.0);\\nvec2 gxy = vec2(-1.0, 1.0);\\nvec2 hxy = vec2(0.0, 1.0);\\nvec2 ixy = vec2(1.0, 1.0);\\nvec2 onePixel = 1.0 / u_srcImageSize;\\nvec4 va = texture2D(u_image, mirror(v_texcoord + onePixel * axy));\\nvec4 vb = texture2D(u_image, mirror(v_texcoord + onePixel * bxy));\\nvec4 vc = texture2D(u_image, mirror(v_texcoord + onePixel * cxy));\\nvec4 vd = texture2D(u_image, mirror(v_texcoord + onePixel * dxy));\\nvec4 ve = texture2D(u_image, mirror(v_texcoord + onePixel * vec2(0, 0)));\\nvec4 vf = texture2D(u_image, mirror(v_texcoord + onePixel * fxy));\\nvec4 vg = texture2D(u_image, mirror(v_texcoord + onePixel * gxy));\\nvec4 vh = texture2D(u_image, mirror(v_texcoord + onePixel * hxy));\\nvec4 vi = texture2D(u_image, mirror(v_texcoord + onePixel * ixy));\\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r / (8.0 * u_cellSize[0]);\\nfloat dzy = -(vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r / (8.0 * u_cellSize[1]);\\nfloat alpha = va.a * vb.a * vc.a * vd.a * ve.a * vf.a * vg.a * vh.a * vi.a * sign(abs(dzx) + abs(dzy));\\nfloat aspect_rad = (dzx == 0.0) ? (step(0.0, dzy) * 0.5 * pi + step(dzy, 0.0) * 1.5 * pi) : mod((2.5 * pi + atan(dzy, -dzx)), 2.0 * pi);\\nfloat aspect = aspect_rad * 180.0 / pi;\\ngl_FragColor = vec4(aspect, aspect, aspect, 1.0) * alpha;\\n}\"},bandarithmetic:{\"bandarithmetic.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\nuniform float u_adjustments[3];\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\nfloat nir = pv2.r;\\nfloat red = pv2.g;\\nfloat index;\\n#ifdef NDXI\\nindex = (nir - red) * invertValue(nir + red);\\n#elif defined(SR)\\nindex = nir * invertValue(red);\\n#elif defined(CI)\\nindex = nir * invertValue(red) - 1.0;\\n#elif defined(SAVI)\\nindex = (nir - red) * invertValue(nir + red + u_adjustments[0]) * (1.0 + u_adjustments[0]);\\n#elif defined(TSAVI)\\nfloat s = u_adjustments[0];\\nfloat a = u_adjustments[1];\\nfloat x = u_adjustments[2];\\nfloat y = -a * s + x * (1.0 + s * s);\\nindex = (s * (nir - s * red - a)) * invertValue(a * nir + red + y);\\n#elif defined(MAVI)\\nindex = 0.5 * (2.0 * (nir + 1.0) - sqrt(pow((2.0 * nir + 1.0), 2.0) - 8.0 * (nir - red)));\\n#elif defined(GEMI)\\nfloat eta = (2.0 * (nir * nir - red * red) + 1.5 * nir + 0.5 * red) * invertValue(nir + red + 0.5);\\nindex = eta * (1.0 - 0.25 * eta) - (red - 0.125) * invertValue(1.0 - red);\\n#elif defined(PVI)\\nfloat a = u_adjustments[0];\\nfloat b = u_adjustments[1];\\nfloat y = sqrt(1.0 + a * a);\\nindex = (nir - a * red - b) * invertValue(y);\\n#elif defined(VARI)\\nindex = (pv2.g - pv2.r) * invertValue(pv2.g + pv2.r - pv2.b);\\n#elif defined(MTVI2)\\nfloat green = pv2.b;\\nfloat v = pow(sqrt((2.0 * nir + 1.0), 2.0) - 6.0 * nir - 5.0 * sqrt(red) - 0.5);\\nindex = 1.5 * (1.2 * (nir - green) - 2.5 * (red - green)) * v;\\n#elif defined(RTVICORE)\\nfloat green = pv2.b;\\nindex = 100.0 * (nir - red) - 10.0 * (nir - green);\\n#elif defined(EVI)\\nfloat blue = pv2.b;\\nfloat denom = nir + 6.0 * red - 7.5 * blue + 1.0;\\nindex =  (2.5 * (nir - red)) * invertValue(denom);\\n#elif defined(WNDWI)\\nfloat g = pv2.r;\\nfloat n = pv2.g;\\nfloat s = pv2.s;\\nfloat a = u_adjustments[0];\\nfloat denom = g + a * n + (1.0 - a) * s;\\nindex = (g - a * n - (1 - a) * s) * invertValue(denom);\\n#elif defined(BAI)\\nindex = invertValue(pow((0.1 - red), 2.0) + pow((0.06 - nir), 2.0));\\n#else\\ngl_FragColor = pv;\\nreturn;\\n#endif\\ngl_FragColor = vec4(index, index, index, pv.a);\\n}\"},compositeband:{\"compositeband.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nuniform sampler2D u_image1;\\nuniform sampler2D u_image2;\\nvarying vec2 v_texcoord;\\nvoid main() {\\nvec4 p0 = texture2D(u_image, v_texcoord);\\nvec4 p1 = texture2D(u_image1, v_texcoord);\\nvec4 p2 = texture2D(u_image2, v_texcoord);\\ngl_FragColor = vec4(p0.r, p1.r, p2.r, p0.a * p1.a * p2.a);\\n}\"},convolution:{\"convolution.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_srcImageSize;\\n#define KERNEL_SIZE_ROWS ROWS\\n#define KERNEL_SIZE_COLS COLS\\nuniform vec2 u_clampRange;\\nuniform float u_kernel[25];\\n#include <raster/common/mirror.glsl>\\nvoid main() {\\nvec3 rgb = vec3(0.0, 0.0, 0.0);\\nvec2 resolution = 1.0 / u_srcImageSize;\\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\\nfloat alpha = 1.0;\\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\\nfloat pos_row = rowOffset + float(row);\\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\\nvec4 pv = texture2D(u_image, mirror(pos));\\nrgb += pv.rgb * u_kernel[row * KERNEL_SIZE_COLS + col];\\nalpha *= pv.a;\\n}\\n}\\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\\ngl_FragColor = vec4(rgb * alpha, alpha);\\n}\"},extractband:{\"extractband.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\ngl_FragColor = vec4(pv2, pv.a);\\n}\"},local:{\"local.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nuniform sampler2D u_image1;\\n#ifdef ONE_CONSTANT\\nuniform float u_image1Const;\\n#ifdef TWO_CONSTANT\\nuniform float u_image2Const;\\n#endif\\nuniform mat3 u_imageSwap;\\n#endif\\nvarying vec2 v_texcoord;\\nuniform vec2 u_domainRange;\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv0 = texture2D(u_image, v_texcoord);\\nfloat a = pv0.r;\\n#ifdef TWO_IMAGES\\n#ifdef ONE_CONSTANT\\nfloat b = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, 0);\\na = abc.s;\\nb = abc.t;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\n#endif\\n#elif defined(CONDITIONAL)\\n#ifdef TWO_CONSTANT\\nfloat b = u_image1Const;\\nfloat c = u_image2Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#elif defined(ONE_CONSTANT)\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nvec4 pv2 = texture2D(u_image2, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = pv2.r;\\n#endif\\n#endif\\nfloat result = a;\\nfloat alpha = pv0.a;\\n#ifdef PLUS\\nresult = a + b;\\n#elif defined(MINUS)\\nresult = a - b;\\n#elif defined(TIMES)\\nresult = a * b;\\n#elif defined(DIVIDE)\\nresult = a * invertValue(b);\\nalpha *= float(abs(sign(b)));\\n#elif defined(FLOATDIVIDE)\\nresult = a * invertValue(b);\\nalpha *= float(abs(sign(b)));\\n#elif defined(FLOORDIVIDE)\\nresult = floor(a * invertValue(b));\\nalpha *= float(abs(sign(b)));\\n#elif defined(SQUARE)\\nresult = a * a;\\n#elif defined(SQRT)\\nresult = sqrt(a);\\n#elif defined(POWER)\\nresult = pow(a, b);\\n#elif defined(LN)\\nresult = a <= 0.0 ? 0.0: log(a);\\nalpha *= float(a > 0.0);\\n#elif defined(LOG_1_0)\\nresult = a <= 0.0 ? 0.0: log2(a) * invertValue(log2(10.0));\\nalpha *= float(a > 0.0);\\n#elif defined(LOG_2)\\nresult = a <= 0.0 ? 0.0: log2(a);\\nalpha *= float(a > 0.0);\\n#elif defined(EXP)\\nresult = exp(a);\\n#elif defined(EXP_1_0)\\nresult = pow(10.0, a);\\n#elif defined(EXP_2)\\nresult = pow(2.0, a);\\n#elif defined(ROUNDDOWN)\\nresult = floor(a);\\n#elif defined(ROUNDUP)\\nresult = ceil(a);\\n#elif defined(INT)\\nresult = float(sign(a)) * floor(abs(a));\\n#elif defined(MOD)\\nresult = mod(a, b);\\n#elif defined(NEGATE)\\nresult = -a;\\n#elif defined(ABS)\\nresult = abs(a);\\n#elif defined(ACOS)\\nresult = abs(a) > 1.0 ? 0.0: acos(a);\\nalpha *= step(abs(a), 1.00001);\\n#elif defined(ACOSH)\\nresult = acosh(a);\\n#elif defined(POLYFILLACOSH)\\nresult = log(a + sqrt(a * a - 1.0));\\n#elif defined(ASIN)\\nresult = abs(a) > 1.0 ? 0.0: asin(a);\\nalpha *= step(abs(a), 1.00001);\\n#elif defined(ASINH)\\nresult = asinh(a);\\n#elif defined(POLYFILLASINH)\\nresult = log(a + sqrt(a * a + 1.0));\\n#elif defined(ATAN)\\nresult = atan(a);\\n#elif defined(ATANH)\\nresult = abs(a) > 1.0 ? 0.0: atanh(a);\\nalpha *= step(abs(a), 1.0);\\n#elif defined(POLYFILLATANH)\\nresult = a == 1.0 ? 0.0 : 0.5 * log((1.0 + a)/(1.0 -a));\\n#elif defined(ATAN_2)\\nresult = atan(a, b);\\n#elif defined(COS)\\nresult = cos(a);\\n#elif defined(COSH)\\nresult = cosh(a);\\n#elif defined(POLYFILLCOSH)\\nfloat halfexp = exp(a) / 2.0;\\nresult = halfexp + 1.0 / halfexp;\\n#elif defined(SIN)\\nresult = sin(a);\\n#elif defined(SINH)\\nresult = sinh(a);\\n#elif defined(POLYFILLSINH)\\nfloat halfexp = exp(a) / 2.0;\\nresult = halfexp - 1.0 / halfexp;\\n#elif defined(TAN)\\nresult = tan(a);\\n#elif defined(TANH)\\nresult = tanh(a);\\n#elif defined(POLYFILLTANH)\\nfloat expx = exp(a);\\nresult = (expx - 1.0 / expx) / (expx + 1.0 / expx);\\n#elif defined(BITWISEAND)\\nresult = a & b;\\n#elif defined(BITWISEOR)\\nresult = a | b;\\n#elif defined(BITWISELEFTSHIFT)\\nresult = a << b;\\n#elif defined(BITWISERIGHTSHIFT)\\nresult = a >> b;\\n#elif defined(BITWISENOT)\\nresult = ~a;\\n#elif defined(BITWISEXOR)\\nresult = a ^ b;\\n#elif defined(BOOLEANAND)\\nresult = float((a != 0.0) && (b != 0.0));\\n#elif defined(BOOLEANNOT)\\nresult = float(a == 0.0);\\n#elif defined(BOOLEANOR)\\nresult = float((a != 0.0) || (b != 0.0));\\n#elif defined(BOOLEANXOR)\\nresult = float((a != 0.0) ^^ (b != 0.0));\\n#elif defined(GREATERTHAN)\\nresult = float(a > b);\\n#elif defined(GREATERTHANEQUAL)\\nresult = float(a >= b);\\n#elif defined(LESSTHAN)\\nresult = float(a < b);\\n#elif defined(LESSTHANEQUAL)\\nresult = float(a <= b);\\n#elif defined(EQUALTO)\\nresult = float(a == b);\\n#elif defined(NOTEQUAL)\\nresult = float(a != b);\\n#elif defined(ISNULL)\\nresult = float(alpha == 0.0);\\nalpha = 1.0;\\n#elif defined(SETNULL)\\nfloat maskValue = float(a == 0.0);\\nresult = maskValue * b;\\nalpha *= maskValue;\\n#elif defined(CONDITIONAL)\\nfloat weight = float(abs(sign(a)));\\nresult = weight * b + (1.0 - weight) * c;\\n#endif\\nbool isInvalid = result < u_domainRange.s || result > u_domainRange.t;\\nresult = isInvalid ? 0.0 : result;\\nalpha *= float(!isInvalid);\\n#ifdef ROUND_OUTPUT\\nresult = floor(result + 0.5);\\n#endif\\ngl_FragColor = vec4(result, result, result, alpha);\\n}\"},mask:{\"mask.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#define LEN_INCLUDED_RANGES 6\\n#define LEN_NODATA_VALUES 6\\nuniform highp float u_includedRanges[6];\\nuniform highp float u_noDataValues[6];\\nfloat maskFactor(float bandValue, float fromValue, float to) {\\nfloat factor = 1.0;\\nfor (int i = 0; i < LEN_NODATA_VALUES; i++) {\\nfactor *= float(u_noDataValues[i] != bandValue);\\n}\\nfactor *= step(fromValue, bandValue) * step(bandValue, to);\\nreturn factor;\\n}\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat redFactor = maskFactor(pv.r, u_includedRanges[0], u_includedRanges[1]);\\n#ifdef MULTI_BAND\\nfloat greenFactor = maskFactor(pv.g, u_includedRanges[2], u_includedRanges[3]);\\nfloat blueFactor = maskFactor(pv.b, u_includedRanges[4], u_includedRanges[5]);\\nfloat maskFactor = redFactor * greenFactor * blueFactor;\\ngl_FragColor = pv * maskFactor;\\n#else\\ngl_FragColor = pv * redFactor;\\n#endif\\n}\"},ndvi:{\"ndvi.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\nfloat nir = pv2.r;\\nfloat red = pv2.g;\\nfloat index = (nir - red) * invertValue(nir + red);\\n#ifdef SCALED\\nindex = floor((index + 1.0) * 100.0 + 0.5);\\n#endif\\ngl_FragColor = vec4(index, index, index, pv.a);\\n}\"},remap:{\"remap.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#define LEN_REMAP_RANGES 18\\n#define LEN_NODATA_RANGES 12\\nuniform highp float u_rangeMaps[18];\\nuniform highp float u_noDataRanges[12];\\nuniform highp float u_unmatchMask;\\nuniform vec2 u_clampRange;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat factor = 1.0;\\nfloat bandValue = pv.r;\\nfor (int i = 0; i < LEN_NODATA_RANGES; i+=2) {\\nfloat inside = 1.0 - step(u_noDataRanges[i], bandValue) * step(bandValue, u_noDataRanges[i+1]);\\nfactor *= inside;\\n}\\nfloat mapValue = 0.0;\\nfloat includeMask = 0.0;\\nfor (int i = 0; i < LEN_REMAP_RANGES; i+=3) {\\nfloat stepMask = step(u_rangeMaps[i], bandValue) * step(bandValue, u_rangeMaps[i+1]);\\nincludeMask = (1.0 - stepMask) * includeMask + stepMask;\\nmapValue = (1.0 - stepMask) * mapValue + stepMask * u_rangeMaps[i+2];\\n}\\nbandValue = factor * (mapValue + (1.0 - includeMask) * u_unmatchMask * pv.r);\\nfloat bandMask = factor * max(u_unmatchMask, includeMask);\\nbandValue = clamp(bandValue, u_clampRange.s, u_clampRange.t);\\ngl_FragColor = vec4(bandValue, bandValue, bandValue, bandMask * pv.a);\\n}\"},slope:{\"slope.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_cellSize;\\nuniform float u_zFactor;\\nuniform vec2 u_srcImageSize;\\nuniform float u_pixelSizePower;\\nuniform float u_pixelSizeFactor;\\n#include <raster/common/mirror.glsl>\\nvoid main() {\\nvec2 axy = vec2(-1.0, -1.0);\\nvec2 bxy = vec2(0.0, -1.0);\\nvec2 cxy = vec2(1.0, -1.0);\\nvec2 dxy = vec2(-1.0, 0.0);\\nvec2 fxy = vec2(1.0, 0.0);\\nvec2 gxy = vec2(-1.0, 1.0);\\nvec2 hxy = vec2(0.0, 1.0);\\nvec2 ixy = vec2(1.0, 1.0);\\nvec2 onePixel = 1.0 / u_srcImageSize;\\nvec4 va = texture2D(u_image, mirror(v_texcoord + onePixel * axy));\\nvec4 vb = texture2D(u_image, mirror(v_texcoord + onePixel * bxy));\\nvec4 vc = texture2D(u_image, mirror(v_texcoord + onePixel * cxy));\\nvec4 vd = texture2D(u_image, mirror(v_texcoord + onePixel * dxy));\\nvec4 ve = texture2D(u_image, mirror(v_texcoord + onePixel * vec2(0, 0)));\\nvec4 vf = texture2D(u_image, mirror(v_texcoord + onePixel * fxy));\\nvec4 vg = texture2D(u_image, mirror(v_texcoord + onePixel * gxy));\\nvec4 vh = texture2D(u_image, mirror(v_texcoord + onePixel * hxy));\\nvec4 vi = texture2D(u_image, mirror(v_texcoord + onePixel * ixy));\\nfloat xf = (u_zFactor + pow(u_cellSize[0], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[0]);\\nfloat yf = (u_zFactor + pow(u_cellSize[1], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[1]);\\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * xf;\\nfloat dzy = -(vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * yf;\\nfloat alpha = va.a * vb.a * vc.a * vd.a * ve.a * vf.a * vg.a * vh.a * vi.a;\\nfloat rise2run = sqrt(dzx * dzx + dzy * dzy);\\n#ifdef PERCENT_RISE\\nfloat percentRise = rise2run * 100.0;\\ngl_FragColor = vec4(percentRise, percentRise, percentRise, alpha);\\n#else\\nfloat degree = atan(rise2run) * 57.2957795;\\ngl_FragColor = vec4(degree, degree, degree, alpha);\\n#endif\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying highp vec2 v_texcoord;\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, float gamma, float gammaCorrection) {\\nval = clamp(val, minCutOff, maxCutOff);\\nfloat stretchedVal;\\n#ifdef USE_GAMMA\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\ntempf -= step(1.0, gamma) * sign(gamma - 1.0) * pow(1.0 / outRange, relativeVal * gammaCorrection);\\nstretchedVal = tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput;\\nstretchedVal = clamp(stretchedVal, minOutput, maxOutput);\\n#else\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n#endif\\n#ifdef ROUND_OUTPUT\\nstretchedVal = floor(stretchedVal + 0.5);\\n#endif\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec4 currentPixel = texture2D(u_image, v_texcoord);\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_gamma[0], u_gammaCorrection[0]);\\n#ifdef MULTI_BAND\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, currentPixel.a);\\n#else\\ngl_FragColor = vec4(redVal, redVal, redVal, currentPixel.a);\\n#endif\\n}\"},vs:{\"vs.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"}},scalar:{\"scalar.frag\":\"precision mediump float;\\nuniform lowp float u_opacity;\\nvarying vec2 v_pos;\\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\\nconst float outlineSize = 0.02;\\nconst float innerRadius = 0.25;\\nconst float outerRadius = 0.42;\\nconst float innerSquareLength = 0.15;\\nvoid main() {\\nmediump float dist = length(v_pos);\\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\\n#ifdef INNER_CIRCLE\\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\\n#else\\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\\n#endif\\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\\n}\",\"scalar.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nvarying vec2 v_pos;\\nvoid main()\\n{\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 size = u_symbolSize * sizePercentage;\\nvec2 pos = a_pos + a_offset * size;\\nv_pos = a_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform bool u_useGamma;\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\n#include <raster/lut/colorize.glsl>\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\\nif (val >= maxCutOff) {\\nreturn maxOutput;\\n} else if (val <= minCutOff) {\\nreturn minOutput;\\n}\\nfloat stretchedVal;\\nif (useGamma) {\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\nif (gamma > 1.0) {\\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\\n}\\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\\n} else {\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n}\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\n#ifdef NOOP\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\nreturn;\\n#endif\\nif (u_bandCount == 1) {\\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\n#ifdef APPLY_COLORMAP\\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\\n#else\\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\\n#endif\\n} else {\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\\n}\\n}\"}},stencil:{\"stencil.frag\":\"void main() {\\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\",\"stencil.vert\":\"attribute vec2 a_pos;\\nuniform mat3 u_worldExtent;\\nvoid main() {\\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\\n}\"},tileInfo:{\"tileInfo.frag\":\"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\nlowp vec4 color = texture2D(u_texture, v_tex);\\ngl_FragColor = 0.75 * color;\\n}\",\"tileInfo.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\nv_tex = a_pos;\\n}\"},util:{\"atan2.glsl\":\"float atan2(in float y, in float x) {\\nfloat t0, t1, t2, t3, t4;\\nt3 = abs(x);\\nt1 = abs(y);\\nt0 = max(t3, t1);\\nt1 = min(t3, t1);\\nt3 = 1.0 / t0;\\nt3 = t1 * t3;\\nt4 = t3 * t3;\\nt0 =         - 0.013480470;\\nt0 = t0 * t4 + 0.057477314;\\nt0 = t0 * t4 - 0.121239071;\\nt0 = t0 * t4 + 0.195635925;\\nt0 = t0 * t4 - 0.332994597;\\nt0 = t0 * t4 + 0.999995630;\\nt3 = t0 * t3;\\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\\nt3 = y < 0.0 ? -t3 : t3;\\nreturn t3;\\n}\",\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}\"}};export{e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport r from\"./shaderRepository.js\";import{ShaderCompiler as e}from\"../../../../../webgl/ShaderCompiler.js\";function o(e){let o=r;return e.split(\"/\").forEach((r=>{o&&(o=o[r])})),o}const t=new e(o);function n(r){return t.resolveIncludes(r)}export{n as resolveIncludes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{Program as r}from\"./Program.js\";function e(e,t,a=\"\"){return new r(e,a+t.shaders.vertexShader,a+t.shaders.fragmentShader,t.attributes)}export{e as createProgram};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from\"../../core/Error.js\";import{unwrapOrThrow as t}from\"../../core/maybe.js\";import{PixelType as r,TextureSamplingMode as a,PixelFormat as o,SizedPixelFormat as l}from\"./enums.js\";function n(n,i){const{textureFloat:f,colorBufferFloat:s}=n.capabilities,u=f?.textureFloat,m=f?.textureFloatLinear,_=f?.textureHalfFloat,p=f?.textureHalfFloatLinear,d=f?.HALF_FLOAT,x=s?.textureFloat,b=s?.textureHalfFloat,c=s?.floatBlend,h=t(n.driverTest).floatBufferBlend.result;if(!u&&!_)throw new e(\"heatmap:missing-texture-float\",\"HeatmapRenderer requires WebGL2 or the WebGL1 extension OES_texture_float or OES_texture_half_float.\");if(!x&&!b)throw new e(\"heatmap:missing-color-buffer-float\",\"HeatmapRenderer requires the WebGL extension EXT_color_buffer_float or EXT_color_buffer_half_float or WEBGL_color_buffer_float.\");if(!(c&&h||b))throw new e(\"heatmap:missing-float-blend\",\"HeatmapRenderer requires the WebGL extension EXT_float_blend or EXT_color_buffer_half_float.\"+(h?\"\":\" This device claims support for EXT_float_blend, but does not actually support it.\"));const E=u&&x&&c&&h,F=_&&b,R=m,L=p,T=!!s?.R32F,w=!!s?.R16F;if(E&&(R||!L))return R||i.warnOnce(\"Missing WebGL extension OES_texture_float_linear. Heatmap quality may be reduced.\"),{dataType:r.FLOAT,samplingMode:R?a.LINEAR:a.NEAREST,pixelFormat:T?o.RED:o.RGBA,internalFormat:T?l.R32F:o.RGBA};if(F)return L||i.warnOnce(\"Missing WebGL extension OES_texture_half_float_linear. Heatmap quality may be reduced.\"),{dataType:d,samplingMode:L?a.LINEAR:a.NEAREST,pixelFormat:w?o.RED:o.RGBA,internalFormat:w?l.R16F:o.RGBA};throw new e(\"heatmap:missing-hardware-support\",\"HeatmapRenderer requires WebGL extensions that allow it to render and blend to float or half float textures.\")}export{n as loadHeatmapTextureConfiguration};\n"],"names":["e","n","t","r","x","exports","i","u","v","y","o","p","a","l","length","h","s","c","next","prev","f","Z","Math","max","E","B","M","C","steiner","w","push","g","prevZ","nextZ","z","j","d","A","sort","abs","k","q","m","b","min","D","this","deviation","flatten","vertices","holes","dimensions","Float32Array","_","N","Object","freeze","defineProperty","__proto__","ONES","UNIT_W","UNIT_X","UNIT_Y","UNIT_Z","ZEROS","clone","create","createView","fromValues","ones","unitW","unitX","unitY","unitZ","zeros","Symbol","toStringTag","value","arguments","_color","_program","dispose","context","setStencilTestEnabled","setBlendingEnabled","setFaceCullingEnabled","setColorMask","setStencilOp","setStencilWriteMask","setStencilFunction","state","requestRender","allowDelayedRender","geometry","location","name","count","type","getVAO","attributes","bufferLayouts","indexBuffer","compiled","useProgram","setUniform2fv","setUniform4fv","setUniformMatrix3fv","displayMat3","bindVAO","drawElements","size","_desc","vsPath","fsPath","Map","setBlendFunctionSeparate","painter","isReady","computedOpacity","dvsMat3","isWrapAround","perspectiveTransform","texture","timeline","begin","materialManager","getProgram","tex","bindTexture","setUniform1i","setUniform1f","drawArrays","end","rendererInfo","requiredLevel","passOptions","S","materialKey","data","T","programSpec","normalized","symbologyType","splice","shader","vertexLayout","I","U","hittestAttributes","L","_getTriangleDesc","G","O","getMaterialProgram","_setSharedUniforms","setUniform2f","key","col","row","textureBinding","textureManager","bindTextures","level","pixelRatio","_setSizeVVUniforms","_setColorAndOpacityVVUniforms","R","target","indexCount","indexFrom","Uint32Array","BYTES_PER_ELEMENT","_drawFills","_dotTextureSize","_dotTextures","_dotSamplers","Int32Array","_dotVAO","_dotDesc","_disposeTextures","_dotFBO","_drawDotLocations","_drawDotDensity","rendererSchema","_createDotDensityMesh","divisor","offset","stride","dotSize","window","devicePixelRatio","getViewport","dotScale","colors","activeDots","backgroundColor","dotValue","setViewport","getBoundFramebufferObject","_createFBO","bindFramebuffer","setClearColor","clear","gl","COLOR_BUFFER_BIT","STENCIL_BUFFER_BIT","scale","setUniformMatrix4fv","_bindDotDensityTextures","width","height","colorTexture","pixelFormat","dataType","samplingMode","wrapMode","colorTarget","depthStencilTarget","internalFormat","_createDotDensityTextures","seed","setUniform1iv","Int16Array","F","_seed","_allocDotDensityTexture","getFloat","defaultColor","othersColor","outlineColor","holePercentage","sectorThreshold","outlineWidth","mapAligned","round","displayLevel","displayViewMat3","floor","rotation","_setRotationVVUniforms","marker","line","fill","text","label","clip","stencil","bitmap","overlay","tileInfo","vtlBackground","vtlFill","vtlLine","vtlCircle","vtlSymbol","dotDensity","heatmap","pieChart","_rctx","_vertexBuffer","Uint16Array","_vao","_count","coords","lengths","slice","_cache","indices","primitiveType","isMapSpace","vertexBuffers","get","keys","reduce","fromScreenExtent","xmin","ymin","xmax","ymax","path","fromPolygon","fromMapExtent","error","fromRect","toScreen","parseFloat","_clip","stage","_handle","version","_invalidate","ready","mesh","destroy","vao","_destroyGL","remove","_lastWidth","_lastHeight","_createMesh","getIndexBuffer","getVertexBuffers","dvs","left","right","top","bottom","_createScreenRect","constructor","set","_clips","children","forEach","clips","_updateClippingInfo","updateTransforms","createRenderParams","globalOpacity","profiler","drawPhase","recordContainerStart","beforeRenderLayer","_clippingInfos","renderChildren","compositeLayer","recordContainerEnd","_renderPasses","prepareRenderPasses","render","requireFBO","requiresDedicatedFBO","registerRenderPass","brushes","setTransform","items","map","nearest","defines","mips","bilinear","bicubic","trilinear","resolution","isSourceScaled","_quad","renderingOptions","source","blendFunction","stencilRef","coordScale","transforms","setSamplingProfile","bind","draw","brushEffect","loadQualityProfile","referenceScale","radius","isFieldActive","_prevFBO","_accumulateOutputTexture","_accumulateFramebuffer","detachDepthStencilBuffer","_accumulateOutputStencilBuffer","_resolveGradientTexture","_tileQuad","_prevViewport","_loadResources","_updateResources","setBlendFunction","minDensity","densityRange","PI","shadingRate","requiresSharedStencilBuffer","getSharedStencilBuffer","gradientHash","gradient","_prevGradientHash","resize","setData","depthStencilAttachment","descriptor","errorOnce","blitFramebuffer","_qualityProfile","_outlineProgram","_tileInfoProgram","_outlineVertexArrayObject","_tileInfoVertexArrayObject","_canvas","_loadWGLResources","rangeX","rangeY","_getTexture","Int8Array","triangleCountReportedInDebug","triangleCount","document","createElement","setAttribute","id","getContext","font","textAlign","textBaseline","clearRect","fillStyle","fillRect","fillText","_initialized","_solidProgram","_solidVertexArrayObject","setDepthWriteEnabled","setDepthTestEnabled","_initialize","setStencilFunctionSeparate","_computeDesc","includes","getGeometryType","commit","getGeometry","attributeView","forEachCommand","supportsSymbology","drawGeometry","position","distance","tileMat3","viewMat3","vvSizeMinMaxValue","vvSizeScaleStops","vvSizeScaleStopsValue","vvSizeFieldStops","getSizeVVFieldStops","setUniform1fv","values","sizes","vvSizeUnitValue","vvSizeUnitValueToPixelsRatio","vvColor","vvColorValues","vvColors","vvOpacity","vvOpacityValues","vvOpacities","vvRotation","vvMaterialParameters","vvRotationType","findIndex","join","strides","_drawMarkers","shaders","vertexShader","fragmentShader","background","bitBlit","blend","debug","dot","filtering","fx","integrate","heatmapResolve","highlight","magnifier","materials","hittest","icon","heatmapAccumulate","pie","shared","blit","bloom","composite","gaussianBlur","luminosityHighPass","blur","dra","sobel","filterEffect","pp","raster","common","flow","imagery","particles","streamlines","hillshade","lut","magdir","reproject","rfx","aspect","bandarithmetic","compositeband","convolution","extractband","local","mask","ndvi","remap","slope","stretch","vs","scalar","util","split","resolveIncludes","capabilities","textureFloat","colorBufferFloat","textureFloatLinear","textureHalfFloat","textureHalfFloatLinear","HALF_FLOAT","floatBlend","driverTest","floatBufferBlend","result","R32F","R16F","warnOnce"],"sourceRoot":""}