{"version":3,"file":"static/js/69126.9c4a2bef.chunk.js","mappings":"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","sources":["../node_modules/@esri/hub-components/dist/esm/content-dce0526a.js","../node_modules/@esri/hub-components/dist/esm/arcgis-hub-boundary-picker.entry.js","../node_modules/@esri/hub-components/dist/esm/update-fec93fc5.js"],"sourcesContent":["import { i as isBBox, b as bBoxToExtent } from './extent-0f42acfc.js';\nimport { u as updateItem } from './update-fec93fc5.js';\nimport { c as cloneObject } from './util-3c40fe6c.js';\nimport { g as getItem } from './get-f2cd18e7.js';\n\n// I don't know why, but standardx is flagging these interfaces as unused\nconst getItemExtent = (item) => {\n  const extent = item.extent;\n  return isBBox(extent)\n    ? Object.assign(Object.assign({}, bBoxToExtent(extent)), { type: 'extent' })\n    : undefined;\n};\n/**\n * Given a content generate an array of sources to use with arcgis-boundary-picker-ui\n * @param content\n * @returns\n */\nconst getContentBoundarySources = (content) => {\n  var _a;\n  const item = content === null || content === void 0 ? void 0 : content.item;\n  const selectedSource = (_a = item === null || item === void 0 ? void 0 : item.properties) === null || _a === void 0 ? void 0 : _a.boundary;\n  // NOTE: we are relying on the default labels\n  const _sources = [\n    {\n      value: 'none',\n      selected: selectedSource === 'none'\n    }\n  ];\n  if (item) {\n    const geometry = getItemExtent(item);\n    const graphic = geometry && {\n      geometry\n      // NOTE: we're relying on the default symbol\n    };\n    _sources.push({\n      value: 'item',\n      graphic,\n      selected: selectedSource === 'item'\n    });\n  }\n  return _sources;\n};\n// TODO: move this to Hub.js\n/**\n * Update a content's boundary\n *\n * @param item\n * @param boundary\n * @param requestOptions\n * @returns\n */\nconst updateContentBoundary = async (content, source, requestOptions) => {\n  // TODO: fetch the item to ensure these aren't stale\n  // first update the item's properties\n  const { id, owner, properties } = content.item;\n  const boundary = source.value;\n  const options = Object.assign({ item: {\n      id,\n      owner,\n      properties: Object.assign(Object.assign({}, properties), { boundary })\n    }, authentication: requestOptions.authentication }, requestOptions);\n  // determine if we need to update extent too\n  const graphic = source.graphic;\n  // TODO: we should also check if the geometry was updated\n  if (graphic && boundary === 'item') {\n    const { xmin, ymin, xmax, ymax } = graphic.geometry;\n    options.item.extent = `${xmin}, ${ymin}, ${xmax}, ${ymax}`;\n  }\n  const response = await updateItem(options);\n  // return a copy of the content w/ the updated item\n  // TODO: use new setContentBoundary()\n  const _content = cloneObject(content);\n  _content.item = await getItem(response.id, requestOptions);\n  return _content;\n};\n\nexport { getItemExtent as a, getContentBoundarySources as g, updateContentBoundary as u };\n","import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { u as updateContentBoundary, a as getItemExtent, g as getContentBoundarySources } from './content-dce0526a.js';\nimport { f as fetchContent } from './fetch-e59da0af.js';\nimport './extent-0f42acfc.js';\nimport './get-prop-d82e4fa6.js';\nimport './request-c15cc2af.js';\nimport './update-fec93fc5.js';\nimport './tslib.es6-3669ad41.js';\nimport './get-portal-url-423a76f5.js';\nimport './clean-url-be7c0879.js';\nimport './get-f2cd18e7.js';\nimport './append-custom-params-fd9b7e72.js';\nimport './util-3c40fe6c.js';\nimport './tslib.es6-e75776ba.js';\nimport './_enrichments-7716cdcc.js';\nimport './get-with-default-6db049d8.js';\nimport './_internal-89d3dc92.js';\nimport './helpers-a80c0291.js';\nimport './OperationError-85fd80c7.js';\nimport './getPortalBaseFromOrgUrl-6a5781aa.js';\nimport './get-portal-06f7947b.js';\nimport './getService-49b539e3.js';\nimport './tslib.es6-b2e8cdb8.js';\nimport './slugs-150ad0db.js';\nimport './is-guid-8127621d.js';\nimport './request-f9ca03b5.js';\nimport './api-196fe0e3.js';\nimport './get-portal-api-url-ccd8fd10.js';\nimport './compose-bfd77ec4.js';\nimport './get-structured-license-d1e63636.js';\nimport './get-item-thumbnail-url-7e5ae2fd.js';\nimport './get-item-home-url-9ff2898b.js';\nimport './query-15c2c6ed.js';\n\nconst arcgisHubBoundaryPickerCss = \":host{display:block}\";\n\nconst ArcgisHubBoundaryPicker = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubBoundaryPickerError = createEvent(this, \"arcgisHubBoundaryPickerError\", 7);\n    this.arcgisHubBoundaryPickerUpdate = createEvent(this, \"arcgisHubBoundaryPickerUpdate\", 7);\n    this.loading = false;\n    this.saving = false;\n  }\n  async componentWillLoad() {\n    this.onContentUpdate();\n  }\n  onContentUpdate() {\n    const content = this.content;\n    if (typeof content === 'string') {\n      // identifier was passed in, fetch the content\n      this.loadContent(content);\n    }\n    else {\n      this._content = content;\n    }\n  }\n  async loadContent(identifier) {\n    try {\n      // disable controls\n      this.loading = true;\n      // fetch the content\n      this._content = await fetchContent(identifier, this.requestOptions);\n    }\n    catch (e) {\n      this.arcgisHubBoundaryPickerError.emit(e);\n    }\n    finally {\n      // enable controls\n      this.loading = false;\n    }\n  }\n  async handleSave(e) {\n    await this.updateContentBoundary(e.detail);\n    // the boundary picker stays in edit mode after saving. cancel that.\n    e.target.cancelEditGeometry();\n  }\n  async updateContentBoundary(source) {\n    // TODO: is this guard needed on a private method?\n    if (!this.authenticated) {\n      return;\n    }\n    try {\n      // show spinner\n      this.saving = true;\n      // update content\n      this._content = await this._updateContentBoundary(this._content, source, this.requestOptions);\n      // emit event\n      this.arcgisHubBoundaryPickerUpdate.emit(source);\n    }\n    catch (e) {\n      // notify consumer of the error\n      this.arcgisHubBoundaryPickerError.emit(e);\n    }\n    finally {\n      // stop showing spinner\n      this.saving = false;\n    }\n  }\n  // NOTE: the purpose of this wrapper is to make it easier to stub the util in tests\n  async _updateContentBoundary(content, source, requestOptions) {\n    return updateContentBoundary(content, source, requestOptions);\n  }\n  get state() {\n    return this.saving ? 'saving' : this.loading ? 'loading' : undefined;\n  }\n  get authenticated() {\n    var _a;\n    return Boolean((_a = this.requestOptions) === null || _a === void 0 ? void 0 : _a.authentication);\n  }\n  get _item() {\n    var _a;\n    return (_a = this._content) === null || _a === void 0 ? void 0 : _a.item;\n  }\n  get _extent() {\n    return this.extent\n      // use the extent that was passed in\n      ? Object.assign(Object.assign({}, this.extent), { type: 'extent' })\n      // try to get the item's extent\n      : this._item\n        ? getItemExtent(this._item)\n        : undefined;\n  }\n  get _sources() {\n    return getContentBoundarySources(this._content);\n  }\n  render() {\n    return (h(Host, null, h(\"arcgis-boundary-picker-ui\", { authenticated: this.authenticated, extent: this._extent, sources: this._sources, state: this.state })));\n  }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"content\": [\"onContentUpdate\"],\n    \"requestOptions\": [\"onContentUpdate\"]\n  }; }\n};\nArcgisHubBoundaryPicker.style = arcgisHubBoundaryPickerCss;\n\nexport { ArcgisHubBoundaryPicker as arcgis_hub_boundary_picker };\n","import { _ as __assign } from './tslib.es6-3669ad41.js';\nimport { g as getPortalUrl } from './get-portal-url-423a76f5.js';\nimport { d as determineOwner, s as serializeItem, i as isBBox, b as bboxToString } from './get-f2cd18e7.js';\nimport { r as request } from './request-c15cc2af.js';\n\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * ```js\n * import { updateItem } from \"@esri/arcgis-rest-portal\";\n * //\n * updateItem({\n *   item: {\n *     id: \"3ef\",\n *     description: \"A three hour tour\"\n *   },\n *   authentication\n * })\n *   .then(response)\n * ```\n * Update an Item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-item.htm) for more information.\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that updates an item.\n */\nfunction updateItem(requestOptions) {\n    return determineOwner(requestOptions).then(function (owner) {\n        var url = requestOptions.folderId\n            ? getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/\" + requestOptions.folderId + \"/items/\" + requestOptions.item.id + \"/update\"\n            : getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.item.id + \"/update\";\n        // serialize the item into something Portal will accept\n        requestOptions.params = __assign(__assign({}, requestOptions.params), serializeItem(requestOptions.item));\n        // convert extent, if present, into a string from bbox\n        // processParams was previously doing this sort of work,\n        // however now we need to let array of arrays through\n        // Thus for extents we need to move this logic here\n        if (requestOptions.params.extent && isBBox(requestOptions.params.extent)) {\n            requestOptions.params.extent = bboxToString(requestOptions.params.extent);\n        }\n        return request(url, requestOptions);\n    });\n}\n/**\n * ```js\n * import { updateItemResource } from \"@esri/arcgis-rest-portal\";\n * //\n * updateItemResource({\n *   id: '3ef',\n *   resource: file,\n *   name: 'bigkahuna.jpg',\n *   authentication\n * })\n *   .then(response)\n * ```\n * Update a resource associated with an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-resources.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that updates an item resource.\n */\nfunction updateItemResource(requestOptions) {\n    return determineOwner(requestOptions).then(function (owner) {\n        var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/updateResources\";\n        // mix in user supplied params\n        requestOptions.params = __assign({ file: requestOptions.resource, fileName: requestOptions.name, resourcesPrefix: requestOptions.prefix, text: requestOptions.content }, requestOptions.params);\n        // only override the access specified previously if 'private' is passed explicitly\n        if (typeof requestOptions.private !== \"undefined\") {\n            requestOptions.params.access = requestOptions.private\n                ? \"private\"\n                : \"inherit\";\n        }\n        return request(url, requestOptions);\n    });\n}\n/**\n * ```js\n * import { moveItem } from \"@esri/arcgis-rest-portal\";\n * //\n * moveItem({\n *   itemId: \"3ef\",\n *   folderId: \"7c5\",\n *   authentication: userSession\n * })\n * ```\n * Move an item to a folder. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/move-item.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that resolves with owner and folder details once the move has been completed\n */\nfunction moveItem(requestOptions) {\n    return determineOwner(requestOptions).then(function (owner) {\n        var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.itemId + \"/move\";\n        var folderId = requestOptions.folderId;\n        if (!folderId) {\n            folderId = \"/\";\n        }\n        requestOptions.params = __assign({ folder: folderId }, requestOptions.params);\n        return request(url, requestOptions);\n    });\n}\n\nexport { updateItemResource as a, moveItem as m, updateItem as u };\n"],"names":["getItemExtent","item","extent","isBBox","Object","assign","bBoxToExtent","type","undefined","updateContentBoundary","content","source","requestOptions","id","owner","properties","boundary","value","options","authentication","graphic","geometry","xmin","ymin","xmax","ymax","updateItem","response","_content","cloneObject","getItem","ArcgisHubBoundaryPicker","hostRef","registerInstance","this","arcgisHubBoundaryPickerError","createEvent","arcgisHubBoundaryPickerUpdate","loading","saving","onContentUpdate","loadContent","identifier","fetchContent","emit","e","detail","target","cancelEditGeometry","authenticated","_updateContentBoundary","_a","Boolean","_item","selectedSource","_sources","selected","push","getContentBoundarySources","h","Host","_extent","sources","state","getElement","style","determineOwner","then","url","folderId","getPortalUrl","params","__assign","serializeItem","bboxToString","request","updateItemResource","file","resource","fileName","name","resourcesPrefix","prefix","text","private","access","moveItem","itemId","folder"],"sourceRoot":""}