{"version":3,"file":"static/js/46848.f77e7fbf.chunk.js","mappings":"kRAOMA,G,SAAkB,WACtB,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,cAAeC,EAAAA,EAAAA,GAAYF,KAAM,eAAgB,IACtDG,EAAAA,EAAAA,GAAKH,KAAM,4BACb,CA4B+C,OA5B9C,2CACD,SAAoBI,GAClB,IAAMC,EAAMD,EAAME,OACZC,EAAcP,KAAKQ,MAAMC,MAAK,SAACC,GAAI,OAAKA,EAAKL,MAAQA,CAAG,IAC9DL,KAAKC,aAAaU,KAAK,CACrBC,SAAU,cACVC,OAAQ,OACRC,MAAO,UACPC,QAASR,EAAYS,eAEzB,GAAC,wEACD,mGACoBC,EAAAA,EAAAA,qBAAiCjB,KAAKkB,SAAQ,OAAhElB,KAAKmB,KAAO,EAAH,qDACV,kDAHA,IAGA,uCACD,SAA0BT,GAAM,WAE9B,OAAO,WACL,EAAKT,aAAaU,KAAK,CACrBC,SAAU,aACVC,OAAQ,OACRC,MAAO,UACPC,QAASL,EAAKM,eAElB,CACF,GAAC,oBACD,WAAS,WACP,OAAQI,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,MAAMD,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,qBAAsBF,EAAAA,EAAAA,GAAE,OAAQ,OAAQpB,KAAKQ,MAAMe,KAAI,SAAAb,GAAI,OAAKU,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,mBAAoBF,EAAAA,EAAAA,GAAE,wBAAyB,CAAEN,MAAOJ,EAAKI,MAAOU,UAAU,EAAMC,MAAOf,EAAKgB,SAAWhB,EAAKL,OAAQe,EAAAA,EAAAA,GAAE,iBAAkB,CAAEO,WAAY,UAAWC,KAAMlB,EAAKL,IAAKwB,QAAS,EAAKC,0BAA0BpB,GAAOqB,OAAQ,UAAY,EAAKZ,KAAKa,EAAE,eAAe,IAC/Y,GAAC,mBAED,WAAgB,OAAOC,EAAAA,EAAAA,GAAWjC,KAAO,IAAC,uBAD1C,WAA0B,MAAO,CAAC,UAAY,KAAC,EAjCzB,IAoCxBH,EAAmBqC,MAtCW,8S,wDCL9B,IAAM/B,EAAO,SAACgC,GAA4B,2BAAhBC,EAAW,iCAAXA,EAAW,kBACnCA,EAAYC,SAAQ,SAAAC,GAClB,GAAmC,oBAAxBH,EAAQG,GACjB,MAAM,IAAIC,MAAM,wBAAD,OAAyBD,EAAU,wBAEpDH,EAAQG,GAAcH,EAAQG,GAAYnC,KAAKgC,EACjD,GACF,C","sources":["../.yalc/@esri/hub-components/dist/esm/arcgis-hub-feeds-list.entry.js","../.yalc/@esri/hub-components/dist/esm/context-7d8f7366.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport './index-4e91769f.js';\n\nconst arcgisHubFeedsListCss = \":host{display:block}.list-description{margin-bottom:1.5rem}.feed-container{margin-bottom:0.75rem;display:grid;align-items:flex-end;grid-template-columns:1fr -webkit-min-content;grid-template-columns:1fr min-content}.feed-container calcite-button{margin-left:0.75rem;margin-bottom:0.75rem;height:2rem}\";\n\nconst ArcgisHubFeedsList = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.hubTelemetry = createEvent(this, \"hubTelemetry\", 7);\n    bind(this, 'generateViewButtonHandler');\n  }\n  onCopyButtonClicked(event) {\n    const url = event.detail;\n    const feedClicked = this.feeds.find((feed) => feed.url === url);\n    this.hubTelemetry.emit({\n      category: 'Interaction',\n      action: 'Copy',\n      label: 'Content',\n      details: feedClicked.telemetryName\n    });\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n  }\n  generateViewButtonHandler(feed) {\n    // Bind arguments to hubTelemetry.emit()\n    return () => {\n      this.hubTelemetry.emit({\n        category: 'Navigation',\n        action: 'View',\n        label: 'Content',\n        details: feed.telemetryName\n      });\n    };\n  }\n  render() {\n    return (h(Host, null, h(\"div\", { class: \"list-description\" }, h(\"slot\", null)), this.feeds.map(feed => (h(\"div\", { class: \"feed-container\" }, h(\"arcgis-copyable-input\", { label: feed.label, readonly: true, value: feed.copyUrl || feed.url }), h(\"calcite-button\", { appearance: \"outline\", href: feed.url, onClick: this.generateViewButtonHandler(feed), target: \"_blank\" }, this.intl.t('viewButton')))))));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n};\nArcgisHubFeedsList.style = arcgisHubFeedsListCss;\n\nexport { ArcgisHubFeedsList as arcgis_hub_feeds_list };\n","const bind = (context, ...methodNames) => {\n  methodNames.forEach(methodName => {\n    if (typeof context[methodName] !== 'function') {\n      throw new Error(`Cannot bind context. ${methodName} must be a function`);\n    }\n    context[methodName] = context[methodName].bind(context);\n  });\n};\n\nexport { bind as b };\n"],"names":["ArcgisHubFeedsList","hostRef","registerInstance","this","hubTelemetry","createEvent","bind","event","url","detail","feedClicked","feeds","find","feed","emit","category","action","label","details","telemetryName","intlManager","element","intl","h","Host","class","map","readonly","value","copyUrl","appearance","href","onClick","generateViewButtonHandler","target","t","getElement","style","context","methodNames","forEach","methodName","Error"],"sourceRoot":""}