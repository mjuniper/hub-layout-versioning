{"version":3,"file":"static/js/7624.89dcf400.chunk.js","mappings":"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","sources":["../node_modules/@esri/hub-components/dist/esm/arcgis-hub-attributes-list.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { d as dist } from './index-910a8794.js';\nimport './index-4e91769f.js';\nimport './_commonjsHelpers-11ca3be1.js';\n\nconst FIELD_ICONS = {\n  title: 'title',\n  string: 'string',\n  label: 'label',\n  number: 'number',\n  percent: 'percent',\n  measure: 'measure',\n  credits: 'credits',\n  fingerprint: 'fingerprint',\n  phone: 'phone',\n  emailAddress: 'email-address',\n  switch: 'switch',\n  toggle: 'toggle',\n  pin: 'pin',\n  point: 'point',\n  calendar: 'calendar',\n  vertexCheck: 'vertex-check',\n  fileText: 'file-text',\n};\nconst FIELD_MAP = {\n  nameOrTitle: {\n    icon: FIELD_ICONS.title,\n    text: 'nameTitle'\n  },\n  description: {\n    icon: FIELD_ICONS.string,\n    text: 'description'\n  },\n  typeOrCategory: {\n    icon: FIELD_ICONS.label,\n    text: 'category'\n  },\n  countOrAmount: {\n    icon: FIELD_ICONS.number,\n    text: 'amount'\n  },\n  percentageOrRatio: {\n    icon: FIELD_ICONS.percent,\n    text: 'percentage'\n  },\n  measurement: {\n    icon: FIELD_ICONS.measure,\n    text: 'measurement'\n  },\n  currency: {\n    icon: FIELD_ICONS.credits,\n    text: 'currency'\n  },\n  uniqueIdentifier: {\n    icon: FIELD_ICONS.fingerprint,\n    text: 'identifier'\n  },\n  phoneNumber: {\n    icon: FIELD_ICONS.phone,\n    text: 'phone'\n  },\n  emailAddress: {\n    icon: FIELD_ICONS.emailAddress,\n    text: 'email'\n  },\n  orderedOrRanked: {\n    icon: FIELD_ICONS.switch,\n    text: 'ordered'\n  },\n  binary: {\n    icon: FIELD_ICONS.toggle,\n    text: 'binary'\n  },\n  locationOrPlaceName: {\n    icon: FIELD_ICONS.pin,\n    text: 'placename'\n  },\n  coordinate: {\n    icon: FIELD_ICONS.point,\n    text: 'coordinate'\n  },\n  dateAndTime: {\n    icon: FIELD_ICONS.calendar,\n    text: 'datetime'\n  },\n  esriFieldTypeSmallInteger: {\n    icon: FIELD_ICONS.number,\n    text: 'shortInt'\n  },\n  esriFieldTypeInteger: {\n    icon: FIELD_ICONS.number,\n    text: 'longInt'\n  },\n  esriFieldTypeSingle: {\n    icon: FIELD_ICONS.number,\n    text: 'singleNum'\n  },\n  esriFieldTypeDouble: {\n    icon: FIELD_ICONS.number,\n    text: 'doubleNum'\n  },\n  esriFieldTypeString: {\n    icon: FIELD_ICONS.string,\n    text: 'charString'\n  },\n  esriFieldTypeDate: {\n    icon: FIELD_ICONS.calendar,\n    text: 'date'\n  },\n  esriFieldTypeOID: {\n    icon: FIELD_ICONS.fingerprint,\n    text: 'idInteger'\n  },\n  esriFieldTypeGeometry: {\n    icon: FIELD_ICONS.vertexCheck,\n    text: 'geometry'\n  },\n  esriFieldTypeBlob: {\n    icon: FIELD_ICONS.fileText,\n    text: 'blobObject'\n  },\n  esriFieldTypeRaster: {\n    icon: FIELD_ICONS.string,\n    text: 'raster'\n  },\n  esriFieldTypeGUID: {\n    icon: FIELD_ICONS.fingerprint,\n    text: 'guid'\n  },\n  esriFieldTypeGlobalID: {\n    icon: FIELD_ICONS.fingerprint,\n    text: 'esriId'\n  },\n  esriFieldTypeXML: {\n    icon: FIELD_ICONS.string,\n    text: 'xml'\n  },\n};\n\nconst arcgisHubAttributesListCss = \":host {\\n  display: block;\\n  container-type: inline-size\\n}\\n\\n.header {\\n  margin-bottom: 1rem;\\n  display: flex;\\n  justify-content: space-between\\n}\\n\\n@container (width < 500px) {\\n  .header {\\n    flex-direction: column\\n  }\\n}\\n\\n.header header {\\n  font-size: var(--calcite-font-size-1);\\n  line-height: 1.5rem;\\n  font-weight: var(--calcite-font-weight-bold)\\n}\\n\\ncalcite-label {\\n  margin-top: 0.25rem;\\n  display: block\\n}\\n\\ncalcite-label:first-child {\\n  margin-top: 0.75rem\\n}\\n\\ncalcite-label span {\\n  font-weight: var(--calcite-font-weight-bold)\\n}\\n\\ncalcite-label div {\\n  line-height: 1.375\\n}\\n\\ncalcite-tabs {\\n  margin-top: 0.25rem\\n}\\n\\ncalcite-accordion + calcite-link {\\n  margin-top: 0.5rem;\\n  display: inline-block\\n}\";\n\nvar FieldTab;\n(function (FieldTab) {\n  FieldTab[\"Chart\"] = \"Chart\";\n  FieldTab[\"Table\"] = \"Table\";\n})(FieldTab || (FieldTab = {}));\nconst ArcgisHubAttributesList = class {\n  /**\n   * Pre-binds method context\n   * @constructor\n   */\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.hubTelemetry = createEvent(this, \"hubTelemetry\", 7);\n    this.arcgisHubAttributesListAccordionChange = createEvent(this, \"arcgisHubAttributesListAccordionChange\", 7);\n    /**\n     * Internally managed field states\n     */\n    this.fieldTabStates = {};\n    /**\n     * Default selected tab\n     */\n    this.defaultFieldTab = FieldTab.Chart;\n    /**\n     * Max number of fields to display\n     */\n    this.maxFields = 10;\n    /**\n     * Parsed field data\n     */\n    this.parsedFields = [];\n    bind(this, 'handleLearnMoreClick', 'handleLoadMoreClick', 'handleTabChange', 'renderChartSlot', 'renderTableSlot', 'renderAccordionItem');\n  }\n  handleContentUpdated(content) {\n    this.parseFields(content, this.fields);\n  }\n  handleFieldsUpdated(fields) {\n    this.parseFields(this.content, fields);\n  }\n  /**\n   * Component setup\n   */\n  async componentWillLoad() {\n    this.parseFields(this.content, this.fields);\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n  }\n  /**\n   * Handles clicks to the Learn about charts link\n   * @param evt A PointerEvent\n   */\n  handleLearnMoreClick(evt) {\n    evt.preventDefault();\n    const { href } = evt.target;\n    this.hubTelemetry.emit(Object.assign(Object.assign({}, dist.dictionary.category.navigation.action.external.label.webHelp), { details: href }));\n    // allow time for telemetry event to bubble up the DOM\n    setTimeout(() => {\n      globalThis.location.href = href;\n    }, 100);\n  }\n  /**\n   * Handles clicks to the Load More button\n   * @param evt A PointerEvent\n   */\n  handleLoadMoreClick(evt) {\n    evt.preventDefault();\n    this.hubTelemetry.emit(dist.dictionary.category.interaction.action.search.label.loadMore.details.attributes);\n    this.maxFields = this.parsedFields.length;\n  }\n  /**\n   * Emits the appropriate telemetry for calcite-accordion state changes\n   * @param evt A CustomEvent<{ requestedAccordionItem: HTMLCalciteAccordionItemElement }>\n   */\n  handleAccordionChange(evt) {\n    const { expanded, dataset: { fieldName } } = evt.detail.requestedAccordionItem;\n    // the accordion item `expanded` prop still reflects the previous state\n    // at the time this event is handled so need to inverse the logic to\n    // log the correct telemetry event\n    const data = expanded\n      ? dist.dictionary.category.interaction.action.close.label.accordion.details.attribute\n      : dist.dictionary.category.interaction.action.open.label.accordion.details.attribute;\n    this.arcgisHubAttributesListAccordionChange.emit({\n      fieldName,\n      expanded: !expanded\n    });\n    this.hubTelemetry.emit(data);\n  }\n  /**\n   * Parses the field data\n   * @param content An IHubContent object\n   * @param fields An Array of fields\n   */\n  parseFields(content, fields) {\n    if (content && fields) {\n      const transform = (str) => {\n        if (str) {\n          const trimmed = str.trim();\n          return trimmed === '/' ? '' : trimmed;\n        }\n      };\n      this.parsedFields = fields.map(field => {\n        const rawField = content.layer.fields.find(({ name }) => name === field.name);\n        let description;\n        try {\n          const parsedDescription = JSON.parse(rawField.description);\n          description = {\n            value: transform(parsedDescription.value),\n            fieldValueType: transform(parsedDescription.fieldValueType),\n          };\n        }\n        catch (e) {\n          description = null;\n        }\n        return {\n          alias: transform(field.alias),\n          type: field.type,\n          description,\n          name: field.name,\n          chartable: field.chartable,\n        };\n      });\n    }\n    else {\n      this.parsedFields = [];\n    }\n  }\n  /**\n   * Emits the appropriate telemetry for tab changes\n   * @param evt A CustomEvent<TabChangeEventDetail>\n   */\n  handleTabChange(evt) {\n    const tab = evt.detail.tab;\n    const target = evt.target;\n    const { [target.dataset.fieldName]: previousValue = this.defaultFieldTab } = this.fieldTabStates;\n    if (previousValue !== tab) {\n      this.fieldTabStates = Object.assign(Object.assign({}, this.fieldTabStates), { [target.dataset.fieldName]: tab });\n      const { telemetry } = this.tabs.find(({ type }) => type === tab);\n      this.hubTelemetry.emit(telemetry);\n    }\n  }\n  /**\n   * Computes the fields to render\n   * @returns IParsedField[]\n   */\n  get fieldsToRender() {\n    const { maxFields, parsedFields } = this;\n    return parsedFields.reduce((fields, field, idx) => (idx < maxFields ? [...fields, field] : fields), []);\n  }\n  /**\n   * Computes if the Load More button should display\n   * @returns boolean\n   */\n  get shouldRenderLoadMore() {\n    return this.parsedFields.length > this.maxFields;\n  }\n  /**\n   * Computes the tab configs\n   * @returns Array of tab configs\n   */\n  get tabs() {\n    return [\n      {\n        type: FieldTab.Chart,\n        title: 'firstTab',\n        telemetry: dist.dictionary.category.navigation.action.onPage.label.chart,\n        renderSlot: this.renderChartSlot,\n      },\n      {\n        type: FieldTab.Table,\n        title: 'secTab',\n        telemetry: dist.dictionary.category.navigation.action.onPage.label.table,\n        renderSlot: this.renderTableSlot,\n      },\n    ];\n  }\n  /**\n   * Renders the header\n   * @returns HTMLDivElement\n   */\n  renderHeader() {\n    return (h(\"div\", { class: \"header\" }, h(\"header\", null, this.intl.t('header')), h(\"calcite-link\", { href: \"https://doc.arcgis.com/en/hub/content/explore-content.htm\", \"icon-end\": \"launch\", onClick: this.handleLearnMoreClick }, this.intl.t('learn'))));\n  }\n  /**\n   * Renders the calcite-accordion\n   * @returns HTMLCalciteAccordionElement\n   */\n  renderAccordion() {\n    return h(\"calcite-accordion\", { appearance: \"transparent\", scale: \"l\" }, this.fieldsToRender.map(this.renderAccordionItem));\n  }\n  /**\n   * Renders a calcite-accordion-item for the given field\n   * @param field The field\n   * @param idx The field index\n   * @returns HTMLCalciteAccordionItemElement\n   */\n  renderAccordionItem(field) {\n    var _a, _b, _c, _d;\n    return (h(\"calcite-accordion-item\", { \"data-field-name\": field.name, description: (_a = field.description) === null || _a === void 0 ? void 0 : _a.value, heading: field.alias || field.name, \"icon-end\": field.chartable && 'graph-bar', \"icon-start\": FIELD_MAP[((_b = field.description) === null || _b === void 0 ? void 0 : _b.fieldValueType) || field.type].icon, key: field.name }, Boolean(field.alias) && field.alias !== field.name && (h(\"calcite-label\", null, h(\"span\", null, this.intl.t('aliasLabel')), h(\"div\", null, field.alias))), h(\"calcite-label\", null, h(\"span\", null, this.intl.t('nameLabel')), h(\"div\", null, field.name)), Boolean((_c = field.description) === null || _c === void 0 ? void 0 : _c.value) && (h(\"calcite-label\", null, h(\"span\", null, this.intl.t('descriptionLabel')), h(\"div\", null, field.description.value))), Boolean((_d = field.description) === null || _d === void 0 ? void 0 : _d.fieldValueType) && (h(\"calcite-label\", null, h(\"span\", null, this.intl.t('fieldTypeLabel')), h(\"div\", null, this.intl.t(FIELD_MAP[field.description.fieldValueType].text)))), h(\"calcite-label\", null, h(\"span\", null, this.intl.t('typeLabel')), h(\"div\", null, this.intl.t(FIELD_MAP[field.type].text))), field.chartable && this.renderTabs(field)));\n  }\n  /**\n   * Renders the calcite-tabs for the given field\n   * @param field The field\n   * @returns HTMLCalciteTabsElement\n   */\n  renderTabs(field) {\n    return (h(\"calcite-tabs\", null, h(\"calcite-tab-nav\", { \"data-field-name\": field.name, onCalciteTabChange: this.handleTabChange, slot: \"tab-nav\" }, this.tabs.map(({ type, title }) => (h(\"calcite-tab-title\", { key: type, tab: type }, this.intl.t(title))))), this.tabs.map(({ type, renderSlot }) => (h(\"calcite-tab\", { key: type, selected: type === this.defaultFieldTab, tab: type }, renderSlot(field))))));\n  }\n  /**\n   * Renders the slot for the feature chart content\n   * @param field The field for the chart\n   * @returns HTMLSlotElement\n   */\n  renderChartSlot(field) {\n    return h(\"slot\", { name: `${field.name}-chart` });\n  }\n  /**\n   * Renders the slot for the feature table content\n   * @param field The field for the table\n   * @returns HTMLSlotElement\n   */\n  renderTableSlot(field) {\n    return h(\"slot\", { name: `${field.name}-table` });\n  }\n  render() {\n    return (h(Host, { \"data-element\": \"attributes-list\" }, this.renderHeader(), this.renderAccordion(), this.shouldRenderLoadMore && (h(\"calcite-link\", { \"icon-end\": \"chevron-down\", onClick: this.handleLoadMoreClick }, this.intl.t('loadMore')))));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"content\": [\"handleContentUpdated\"],\n    \"fields\": [\"handleFieldsUpdated\"]\n  }; }\n};\nArcgisHubAttributesList.style = arcgisHubAttributesListCss;\n\nexport { ArcgisHubAttributesList as arcgis_hub_attributes_list };\n"],"names":["FieldTab","FIELD_ICONS","FIELD_MAP","nameOrTitle","icon","text","description","typeOrCategory","countOrAmount","percentageOrRatio","measurement","currency","uniqueIdentifier","phoneNumber","emailAddress","orderedOrRanked","binary","locationOrPlaceName","coordinate","dateAndTime","esriFieldTypeSmallInteger","esriFieldTypeInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeString","esriFieldTypeDate","esriFieldTypeOID","esriFieldTypeGeometry","esriFieldTypeBlob","esriFieldTypeRaster","esriFieldTypeGUID","esriFieldTypeGlobalID","esriFieldTypeXML","ArcgisHubAttributesList","hostRef","registerInstance","this","hubTelemetry","createEvent","arcgisHubAttributesListAccordionChange","fieldTabStates","defaultFieldTab","Chart","maxFields","parsedFields","bind","content","parseFields","fields","intlManager","element","intl","evt","preventDefault","href","target","emit","Object","assign","dist","details","setTimeout","globalThis","location","length","detail","requestedAccordionItem","expanded","fieldName","dataset","data","transform","str","trimmed","trim","map","field","rawField","layer","find","name","parsedDescription","JSON","parse","value","fieldValueType","e","alias","type","chartable","tab","telemetry","tabs","reduce","idx","title","renderSlot","renderChartSlot","Table","renderTableSlot","h","class","t","onClick","handleLearnMoreClick","appearance","scale","fieldsToRender","renderAccordionItem","_a","_b","_c","_d","heading","key","Boolean","renderTabs","onCalciteTabChange","handleTabChange","slot","selected","Host","renderHeader","renderAccordion","shouldRenderLoadMore","handleLoadMoreClick","getElement","style"],"sourceRoot":""}