{"version":3,"file":"static/js/71777.987239e2.chunk.js","mappings":"sKAAA,IAAMA,EAAO,SAACC,GAA4B,2BAAhBC,EAAW,iCAAXA,EAAW,kBACnCA,EAAYC,SAAQ,SAAAC,GAClB,GAAmC,oBAAxBH,EAAQG,GACjB,MAAM,IAAIC,MAAM,wBAAD,OAAyBD,EAAU,wBAEpDH,EAAQG,GAAcH,EAAQG,GAAYJ,KAAKC,EACjD,GACF,C,wBCHA,SAASK,EAAQC,EAAKC,GAClB,OAAOA,EAAKC,MAAM,KAAKC,QAAO,SAAUC,EAAMC,GAE1C,OAAOD,EAAOA,EAAKC,QAAQC,CAC/B,GAAGN,EACP,C,sGCFMO,EAAW,SAACC,EAAiBC,EAAGC,GACpC,OAA6BA,GAAeX,EAAAA,EAAAA,GAAQS,EAAiBE,GAAgBF,IAAoB,CAAC,EAAlGG,EAAQ,EAARA,SACJC,EADmB,EAALC,MAKlB,OAHIF,IACFC,EAASH,EAAEE,IAENC,CACT,C,uJCTME,EAAc,WAClB,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,2CAA4CC,EAAAA,EAAAA,GAAYF,KAAM,4CAA6C,IAChHxB,EAAAA,EAAAA,GAAKwB,KAAM,2CACb,CA+CC,OA/CA,yCACD,WAIEA,KAAKG,QAAUH,KAAKI,YACtB,GACA,wBAKA,WAAa,IACPC,EAAIC,EADG,OAGLC,GAA0G,QAAtFD,EAAqC,QAA/BD,EAAKL,KAAKQ,OAAOC,gBAA6B,IAAPJ,OAAgB,EAASA,EAAGK,eAA4B,IAAPJ,OAAgB,EAASA,EAAGH,UAAY,GAChK,OAAOI,EACHA,EAAgBI,KAAI,SAAAC,GACpB,IAAMhB,GAAQN,EAAAA,EAAAA,GAASsB,EAAQ,EAAKJ,OAAOhB,GAE3C,cADOoB,EAAOlB,SACPmB,OAAOC,OAAOF,EAAQC,OAAOC,OAAO,CAAC,EAAIlB,GAAS,CAAEA,MAAAA,IAC7D,IAPqB,CAAC,CAAEmB,MAAO,OAAQC,UAAU,GASrD,GAAC,sDACD,SAAyCC,GACvC,IAAIZ,EACJ,GAAIY,EAAIC,OAAOC,QAAS,CACtB,MAAmF,QAA7Bd,EAAKY,EAAIC,OAAOC,eAA4B,IAAPd,OAAgB,EAASA,EAAGe,SAA/GC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAgB,EAAhBA,iBAChCzB,KAAKC,0CAA0CyB,KAAK,CAClDL,KAAAA,EAAMC,KAAAA,EAAMC,KAAAA,EAAMC,KAAAA,EAClBC,iBAAkB,CAAEE,KAAMF,EAAiBE,OAE/C,MAME3B,KAAKC,0CAA0CyB,KAAK,CAClDL,KAAM,KAAMC,KAAM,KAAMC,KAAM,KAAMC,KAAM,KAC1CC,iBAAkB,CAAEE,KAAM,OAGhC,GAAC,oBACD,WACE,IAAItB,EAAIC,EACR,OAAQsB,EAAAA,EAAAA,GAAE,4BAA6B,CAAEC,OAAQ7B,KAAKQ,OAAOO,MAAOe,6BAA8B9B,KAAK+B,yCAA0CC,iCAAyH,QAAtF1B,EAAqC,QAA/BD,EAAKL,KAAKQ,OAAOC,gBAA6B,IAAPJ,OAAgB,EAASA,EAAGK,eAA4B,IAAPJ,OAAgB,EAASA,EAAG0B,+BAAgC7B,QAASH,KAAKG,SAC9V,KAAC,EApDiB,E","sources":["../node_modules/@esri/hub-components/dist/esm/context-7d8f7366.js","../node_modules/@esri/hub-components/dist/esm/get-prop-d82e4fa6.js","../node_modules/@esri/hub-components/dist/esm/getLabel-23d1a78d.js","../node_modules/@esri/hub-components/dist/esm/hub-field-input-boundary-picker.entry.js"],"sourcesContent":["const bind = (context, ...methodNames) => {\n  methodNames.forEach(methodName => {\n    if (typeof context[methodName] !== 'function') {\n      throw new Error(`Cannot bind context. ${methodName} must be a function`);\n    }\n    context[methodName] = context[methodName].bind(context);\n  });\n};\n\nexport { bind as b };\n","/**\n * Get a property out of a deeply nested object\n * Does not handle anything but nested object graph\n */\nfunction getProp(obj, path) {\n    return path.split(\".\").reduce(function (prev, curr) {\n        /* istanbul ignore next no need to test undefined scenario */\n        return prev ? prev[curr] : undefined;\n    }, obj);\n}\n\nexport { getProp as g };\n","import { g as getProp } from './get-prop-d82e4fa6.js';\n\n/**\n * function to return the translated value of uiSchema element.\n * If a translation function or labelKey are not provided, we fall\n * back to the provided label\n */\nconst getLabel = (uiSchemaElement, t, propertyPath) => {\n  const { labelKey, label } = (propertyPath ? getProp(uiSchemaElement, propertyPath) : uiSchemaElement) || {};\n  let result = label;\n  if (labelKey) {\n    result = t(labelKey);\n  }\n  return result;\n};\n\nexport { getLabel as g };\n","import { r as registerInstance, c as createEvent, h } from './index-0d95d9d4.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { g as getLabel } from './getLabel-23d1a78d.js';\nimport './get-prop-d82e4fa6.js';\n\nconst BoundaryPicker = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisConfigurationEditorFieldInputChange = createEvent(this, \"arcgisConfigurationEditorFieldInputChange\", 7);\n    bind(this, 'handleArcgisHubInputBoundaryPickerChange');\n  }\n  componentWillLoad() {\n    // we want to generate the sources once on load, otherwise when the sources\n    // update the arcgis-boundary-picker-ui resets the selected geometry to \n    // the initial selection\n    this.sources = this.getSources();\n  }\n  /**\n   * generate the boundary picker sources from the uiSchema options.\n   * This function handles source label translations if a labelKey is\n   * provided\n   */\n  getSources() {\n    var _a, _b;\n    const defaultSources = [{ value: 'none', selected: true }];\n    const uiSchemaSources = ((_b = (_a = this.params.uiSchema) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.sources) || [];\n    return uiSchemaSources\n      ? uiSchemaSources.map(source => {\n        const label = getLabel(source, this.params.t);\n        delete source.labelKey;\n        return Object.assign(source, Object.assign({}, (label && { label })));\n      })\n      : defaultSources;\n  }\n  handleArcgisHubInputBoundaryPickerChange(evt) {\n    var _a;\n    if (evt.detail.graphic) {\n      const { xmin, ymin, xmax, ymax, spatialReference } = (_a = evt.detail.graphic) === null || _a === void 0 ? void 0 : _a.geometry;\n      this.arcgisConfigurationEditorFieldInputChange.emit({\n        xmin, ymin, xmax, ymax,\n        spatialReference: { wkid: spatialReference.wkid }\n      });\n    }\n    else {\n      // This is needed because unless we overwrite all the\n      // values, the config editor won't pick up changes.\n      // IE just passing undefined will output from the config-editor\n      // the original values.\n      this.arcgisConfigurationEditorFieldInputChange.emit({\n        xmin: null, ymin: null, xmax: null, ymax: null,\n        spatialReference: { wkid: null }\n      });\n    }\n  }\n  render() {\n    var _a, _b;\n    return (h(\"arcgis-boundary-picker-ui\", { extent: this.params.value, onArcgisBoundaryPickerUpdate: this.handleArcgisHubInputBoundaryPickerChange, resetDrawingToolsOnDisconnect: !!((_b = (_a = this.params.uiSchema) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.resetDrawingToolsOnDisconnect), sources: this.sources }));\n  }\n};\n\nexport { BoundaryPicker as hub_field_input_boundary_picker };\n"],"names":["bind","context","methodNames","forEach","methodName","Error","getProp","obj","path","split","reduce","prev","curr","undefined","getLabel","uiSchemaElement","t","propertyPath","labelKey","result","label","BoundaryPicker","hostRef","registerInstance","this","arcgisConfigurationEditorFieldInputChange","createEvent","sources","getSources","_a","_b","uiSchemaSources","params","uiSchema","options","map","source","Object","assign","value","selected","evt","detail","graphic","geometry","xmin","ymin","xmax","ymax","spatialReference","emit","wkid","h","extent","onArcgisBoundaryPickerUpdate","handleArcgisHubInputBoundaryPickerChange","resetDrawingToolsOnDisconnect"],"sourceRoot":""}