{"version":3,"file":"static/js/78325.e77aa570.chunk.js","mappings":"2OAKMA,EAAc,WAClB,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GAMvBE,KAAKC,QAAU,GAMfD,KAAKE,KAAO,GACZF,KAAKG,OAAS,KAChB,CAkBC,OAlBA,0CACD,WACE,OAAOC,EAAAA,EAAAA,GAAE,KAAM,KAAMJ,KAAKC,QAAQI,KAAI,SAAAC,GACpC,OAAOF,EAAAA,EAAAA,GAAE,KAAM,KAAME,EAAOC,KAC9B,IACF,GAAC,6BACD,WAAkB,WAChB,OAAOP,KAAKE,KAAKG,KAAI,SAAAG,GACnB,OAAOJ,EAAAA,EAAAA,GAAE,KAAM,CAAEK,KAAKC,EAAAA,EAAAA,GAAQF,EAAK,EAAKL,SAAW,EAAKQ,iBAAiBH,GAC3E,GACF,GAAC,8BACD,SAAiBA,GACf,OAAOR,KAAKC,QAAQI,KAAI,YAAY,IAATO,EAAE,EAAFA,GACzB,OAAOR,EAAAA,EAAAA,GAAE,KAAM,CAAEK,IAAKG,GAAMJ,EAAII,IAAO,IACzC,GACF,GAAC,oBACD,WACE,OAAQR,EAAAA,EAAAA,GAAES,EAAAA,EAAM,CAAE,eAAgB,SAAWb,KAAKc,aAAcV,EAAAA,EAAAA,GAAE,KAAM,CAAEW,MAAO,SAAWf,KAAKc,YAAad,KAAKgB,WAAYZ,EAAAA,EAAAA,GAAE,KAAM,CAAEW,MAAO,YAAcf,KAAKgB,WAAWZ,EAAAA,EAAAA,GAAE,QAAS,KAAMJ,KAAKiB,qBAAsBjB,KAAKkB,mBACjO,KAAC,EAlCiB,GAoCpBrB,EAAesB,MAtCW,+rB,wBCC1B,SAAST,EAAQU,EAAKC,GAClB,OAAOA,EAAKC,MAAM,KAAKC,QAAO,SAAUC,EAAMC,GAE1C,OAAOD,EAAOA,EAAKC,QAAQC,CAC/B,GAAGN,EACP,C","sources":["../node_modules/@esri/hub-components/dist/esm/arcgis-hub-table.entry.js","../node_modules/@esri/hub-components/dist/esm/get-prop-d82e4fa6.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-0d95d9d4.js';\nimport { g as getProp } from './get-prop-d82e4fa6.js';\n\nconst arcgisHubTableCss = \":host{display:block;color:var(--calcite-ui-text-1)}table,th,td{border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-2)}table{width:100%;table-layout:fixed;border-collapse:collapse}th,td{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-2);padding:0.5rem}tr:first-of-type{background-color:var(--calcite-ui-foreground-3)}.title{margin:0px;margin-bottom:0.5rem;display:flex;font-size:var(--calcite-font-size-3);line-height:2rem}.subtitle{margin:0px;margin-bottom:0.5rem;font-size:var(--calcite-font-size-2);line-height:1.5rem;font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-2)}\";\n\nconst ArcgisHubTable = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * array of table headers\n     * @type {Record<string,string>[]}\n     * @memberof ArcgisHubTable\n     */\n    this.headers = [];\n    /**\n     * array of table rows\n     * @type {Record<string,string>[]}\n     * @memberof ArcgisHubTable\n     */\n    this.rows = [];\n    this.rowKey = 'key';\n  }\n  renderTableHeaders() {\n    return h(\"tr\", null, this.headers.map(header => {\n      return h(\"th\", null, header.i18n);\n    }));\n  }\n  renderTableRows() {\n    return this.rows.map(row => {\n      return h(\"tr\", { key: getProp(row, this.rowKey) }, this.renderTableCells(row));\n    });\n  }\n  renderTableCells(row) {\n    return this.headers.map(({ id }) => {\n      return h(\"td\", { key: id }, row[id] || '-');\n    });\n  }\n  render() {\n    return (h(Host, { \"data-element\": \"table\" }, this.tableTitle && h(\"h1\", { class: \"title\" }, this.tableTitle), this.subtitle && h(\"h2\", { class: \"subtitle\" }, this.subtitle), h(\"table\", null, this.renderTableHeaders(), this.renderTableRows())));\n  }\n};\nArcgisHubTable.style = arcgisHubTableCss;\n\nexport { ArcgisHubTable as arcgis_hub_table };\n","/**\n * Get a property out of a deeply nested object\n * Does not handle anything but nested object graph\n */\nfunction getProp(obj, path) {\n    return path.split(\".\").reduce(function (prev, curr) {\n        /* istanbul ignore next no need to test undefined scenario */\n        return prev ? prev[curr] : undefined;\n    }, obj);\n}\n\nexport { getProp as g };\n"],"names":["ArcgisHubTable","hostRef","registerInstance","this","headers","rows","rowKey","h","map","header","i18n","row","key","getProp","renderTableCells","id","Host","tableTitle","class","subtitle","renderTableHeaders","renderTableRows","style","obj","path","split","reduce","prev","curr","undefined"],"sourceRoot":""}