{"version":3,"file":"static/js/91130.108f55af.chunk.js","mappings":"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","sources":["../node_modules/@esri/hub-components/dist/esm/arcgis-multi-page-modal.entry.js","../node_modules/@esri/hub-components/dist/esm/context-7d8f7366.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport './index-4e91769f.js';\n\nconst arcgisMultiPageModalCss = \":host{display:block}.page-container{display:flex;height:100%;flex-direction:column;justify-content:space-between}.page-counter{margin-top:1rem;text-align:center;color:var(--calcite-ui-text-3);font-size:var(--calcite-font-size--1)}\";\n\nconst ArcgisMultiPageModal = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisMultiPageModalClose = createEvent(this, \"arcgisMultiPageModalClose\", 7);\n    /**\n     * Controls whether the modal is open or not\n     */\n    this.open = false;\n    /**\n     * References to all child pages\n     */\n    this.pages = [];\n    /**\n     * Flag used to keep track of whether the modal was closed via the 'okay' button\n     * or the 'x' button\n     */\n    this.isAcceptButtonClicked = false;\n    bind(this, 'showPreviousPage', 'showNextPage', 'handleAccept', 'handleModalClose');\n  }\n  /**\n   * As closing the modal does not remove this component from the DOM, we cannot leverage\n   * the typical lifecycle hooks to re-initialize the component (i.e., grab the slotted\n   * child components, start from the first page, etc.)\n   *\n   * To mitigate the issue, we re-initialize the component whenever `open` is toggled to `true`\n   */\n  handleOpenChanged(isNowOpen, wasPreviouslyOpen) {\n    !wasPreviouslyOpen && isNowOpen && this.initializeModal();\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.el);\n  }\n  connectedCallback() {\n    this.open && this.initializeModal();\n  }\n  initializeModal() {\n    this.pages = Array.from(this.el.querySelectorAll('arcgis-modal-page'));\n    this.index = 0;\n    this.setVisiblePage();\n  }\n  setVisiblePage() {\n    this.pages.forEach((page, i) => (page.visible = i === this.index));\n  }\n  showNextPage() {\n    this.index++;\n    this.setVisiblePage();\n  }\n  showPreviousPage() {\n    this.index--;\n    this.setVisiblePage();\n  }\n  handleAccept() {\n    this.isAcceptButtonClicked = true;\n    // Setting this to false is the only way to programatically close\n    // the modal and force a `calciteModalClose` event to fire\n    this.open = false;\n  }\n  /**\n   * Runs when the underlying modal is closed in any manner\n   * @param event a calciteModalClose event\n   */\n  handleModalClose(event) {\n    event.preventDefault();\n    const detail = this.isAcceptButtonClicked ? 'Accepted' : 'Exited';\n    this.isAcceptButtonClicked = false;\n    // Modal is already closed, set `open=false` to prevent incongruencies\n    this.open = false;\n    this.arcgisMultiPageModalClose.emit(detail);\n  }\n  renderSecondaryButton() {\n    if (this.index > 0) {\n      return h(\"calcite-button\", { appearance: \"outline\", onClick: this.showPreviousPage, slot: \"secondary\", width: \"full\" }, this.intl.t('previousButton'));\n    }\n  }\n  renderPrimaryButton() {\n    return this.index === this.pages.length - 1\n      ? h(\"calcite-button\", { onClick: this.handleAccept, slot: \"primary\", width: \"full\" }, \" \", this.intl.t('acceptButton'), \" \")\n      : h(\"calcite-button\", { onClick: this.showNextPage, slot: \"primary\", width: \"full\" }, \" \", this.intl.t('nextButton'), \" \");\n  }\n  render() {\n    return (h(Host, { \"data-element\": \"multi-page-modal\" }, h(\"calcite-modal\", { \"disable-outside-close\": true, onCalciteModalClose: this.handleModalClose, open: this.open }, h(\"div\", { slot: \"header\" }, h(\"slot\", { name: \"header\" })), h(\"div\", { class: \"page-container\", slot: \"content\" }, h(\"slot\", null), h(\"div\", { class: \"page-counter\" }, this.intl.t('pageCounter', { currentPage: this.index + 1, numPages: this.pages.length }))), this.renderSecondaryButton(), this.renderPrimaryButton())));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"open\": [\"handleOpenChanged\"]\n  }; }\n};\nArcgisMultiPageModal.style = arcgisMultiPageModalCss;\n\nexport { ArcgisMultiPageModal as arcgis_multi_page_modal };\n","const bind = (context, ...methodNames) => {\n  methodNames.forEach(methodName => {\n    if (typeof context[methodName] !== 'function') {\n      throw new Error(`Cannot bind context. ${methodName} must be a function`);\n    }\n    context[methodName] = context[methodName].bind(context);\n  });\n};\n\nexport { bind as b };\n"],"names":["ArcgisMultiPageModal","hostRef","registerInstance","this","arcgisMultiPageModalClose","createEvent","open","pages","isAcceptButtonClicked","bind","isNowOpen","wasPreviouslyOpen","initializeModal","intlManager","el","intl","Array","from","querySelectorAll","index","setVisiblePage","forEach","page","i","visible","event","preventDefault","detail","emit","h","appearance","onClick","showPreviousPage","slot","width","t","length","handleAccept","showNextPage","Host","onCalciteModalClose","handleModalClose","name","class","currentPage","numPages","renderSecondaryButton","renderPrimaryButton","getElement","style","context","methodNames","methodName","Error"],"sourceRoot":""}