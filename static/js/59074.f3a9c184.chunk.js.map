{"version":3,"file":"static/js/59074.f3a9c184.chunk.js","mappings":"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","sources":["../.yalc/@esri/hub-components/dist/esm/arcgis-hub-access-level-controls_5.entry.js","../.yalc/@esri/hub-components/dist/esm/debounce-2015d676.js","../.yalc/@esri/hub-components/dist/esm/debounce-89fe9847.js","../.yalc/@esri/hub-components/dist/esm/get-prop-d82e4fa6.js","../.yalc/@esri/hub-components/dist/esm/logger-0c7a68de.js","../.yalc/@esri/hub-components/dist/esm/util-2150bd9e.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement, H as Host } from './index-0d95d9d4.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { c as cloneObject } from './util-2150bd9e.js';\nimport { I as ItemType, a as addCreateItemTypes, F as FileExtension } from './types-84000059.js';\nimport { a as extentToBBox } from './extent-0f42acfc.js';\nimport { D as DebounceDecoratorFactory } from './debounce-2015d676.js';\nimport { a as Logger } from './logger-0c7a68de.js';\nimport './index-4e91769f.js';\nimport './get-prop-d82e4fa6.js';\nimport './request-c15cc2af.js';\nimport './debounce-89fe9847.js';\n\nconst FEATURE_SERVICE_URL_REGEX = /(feature)server(\\/|\\/(\\d+))?$/i;\nconst SERVICE_URL_REGEX = /\\/[a-zA-Z]+server(\\/|\\/(\\d+))?$/i;\n/**\n * Feature service / Doc Links Should not have data urls. Let\"s exclude them from that.\n *\n * @export\n * @param {string} itemType What type of item is it?\n * @return {*}  {boolean}\n */\nfunction shouldHaveDataUrl(itemType) {\n    // Specifically we want to avoid FS / DL from having a data url.\n    return ![\"Feature Service\", \"Document Link\"].includes(itemType);\n}\n/**\n * Get the file name out of a url. Will return either the\n * hostname, or the pathname if it exists\n *\n * @export\n * @param {string} url Url to get a file name out of\n * @return {*}  {string}\n */\nfunction getFileName(url) {\n    let filename;\n    try {\n        const parsed = new URL(url);\n        // If the URL pathname exists, return its last segment,\n        // otherwise return the hostname\n        filename =\n            parsed.pathname !== \"/\"\n                ? parsed.pathname.split(\"/\").pop()\n                : parsed.hostname;\n    }\n    catch (e) {\n        throw new Error(`Error getting file name from data url`);\n    }\n    return filename;\n}\n/**\n * Is this a valid url?\n *\n * @param {string} url Url to validate\n * @return {*}  {boolean}\n */\nfunction isUrl(url) {\n    // Use try / catch as a simple string \"test\" will cause new URL() to throw an error.\n    try {\n        const result = new URL(url);\n        // Cast to bool.\n        return !!result;\n    }\n    catch (e) {\n        Logger.error(`Error parsing URL`);\n        return false;\n    }\n}\n/**\n * Tests if url string is a feature service / layer.\n *\n * @param {string} url URL to test\n * @return {*}  {boolean}\n */\nfunction isFeatureService(url) {\n    return FEATURE_SERVICE_URL_REGEX.test(url);\n}\n/**\n * Tests if url string is a service (map, feature, image, etc)\n *\n * @param {string} url Url to test\n * @return {*}  {boolean}\n */\nfunction isService(url) {\n    return SERVICE_URL_REGEX.test(url);\n}\n/**\n * Is the service a feature service AND is it a layer specifically\n *\n * @param {string} url\n * @return {*}  {boolean}\n */\nfunction isFeatureLayer(url) {\n    const results = url.match(FEATURE_SERVICE_URL_REGEX);\n    return results && !!results[3];\n}\n/**\n * Gets item title from url as a fall back\n *\n * @param {string} url item url\n * @return {*}  {string}\n */\nfunction getFeatureServiceTitle(url) {\n    return url.match(/\\/services\\/(.+)\\/(feature|map|image)server/i)[1];\n}\n/**\n * Gets item info out of a feature layer item.\n *\n * @export\n * @param url Item URL\n * @param body Item body.\n * @return Item info (title, description, extent, url)\n */\nfunction getFeatureLayerItem(url, body) {\n    return {\n        title: body.name,\n        description: body.description,\n        extent: body.extent,\n        url,\n    };\n}\n/**\n * Gets item info out of a feature service response (which is not a specific layer)\n *\n * @export\n * @param {*} url\n * @param {*} body\n * @return {*}\n */\nfunction getFeatureServiceItem(url, body) {\n    const description = body.serviceDescription || body.description;\n    const title = getFeatureServiceTitle(url);\n    const extent = body.fullExtent || body.initialExtent;\n    return { title, description, extent, url };\n}\n/**\n * Ping a non FS url and return response status && headers\n *\n * @export\n * @param {string} url Non FS URL\n * @return {*}  {Promise<{ ok: boolean, headers: Headers }>}\n */\nasync function pingUrl(url) {\n    const response = await fetch(url, { method: \"HEAD\" });\n    return {\n        ok: response.ok,\n        headers: response.headers,\n    };\n}\n/**\n * Ping a FS URL and handle matters such as \"hidden\" success failures.\n *\n * @export\n * @param {string} url\n * @return {*}  {Promise<{ ok: boolean, item?: any }>}\n */\nasync function pingFeatureService(url) {\n    // make sure the response is in json format\n    const parsed = new URL(url);\n    parsed.searchParams.set(\"f\", \"json\");\n    // Since the feature service can return a 200 response with error (e.g. for\n    // non-existing layer), we can only request the full metadata by a GET, not HEAD\n    // request\n    const response = await fetch(parsed.href);\n    if (!response.ok) {\n        return { ok: false };\n    }\n    const body = await response.json();\n    // Exit if the request returns an error\n    if (body.error) {\n        return { ok: false };\n    }\n    const getItem = isFeatureLayer(url)\n        ? getFeatureLayerItem\n        : getFeatureServiceItem;\n    const item = getItem(url, body);\n    return {\n        ok: true,\n        item,\n    };\n}\nfunction detectDataTypeFromHeader(headers) {\n    let contentType = headers.get(\"Content-Type\");\n    let dataType;\n    if (!contentType) {\n        return;\n    }\n    // Only get the \"media-type\"\n    contentType = contentType.split(\";\").shift();\n    if (contentType === \"text/csv\") {\n        dataType = ItemType.CSV;\n    }\n    else if (contentType === \"application/vnd.ms-excel\" ||\n        contentType ===\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n        dataType = ItemType[\"Microsoft Excel\"];\n    }\n    else if (contentType === \"application/pdf\") {\n        dataType = ItemType.PDF;\n    }\n    else if (contentType === \"image/jpeg\" ||\n        contentType === \"image/jpg\" ||\n        contentType === \"image/png\") {\n        dataType = ItemType.Image;\n    }\n    else if (contentType === \"application/geo+json\") {\n        dataType = ItemType.GeoJson;\n    }\n    return dataType;\n}\nfunction detectDataTypeFromExtension(url) {\n    const contentType = url.toLowerCase().split(\".\").pop();\n    let dataType;\n    if (contentType === \"csv\") {\n        dataType = ItemType.CSV;\n    }\n    else if (contentType === \"xls\" || contentType === \"xlsx\") {\n        dataType = ItemType[\"Microsoft Excel\"];\n    }\n    else if (contentType === \"pdf\") {\n        dataType = ItemType.PDF;\n    }\n    else if (contentType === \"jpeg\" ||\n        contentType === \"jpg\" ||\n        contentType === \"png\") {\n        dataType = ItemType.Image;\n    }\n    else if (contentType === \"geojson\") {\n        dataType = ItemType.GeoJson;\n    }\n    return dataType;\n}\n\n/**\n * Takes in a URL and validates it based on valid url, type of item, etc\n *\n * @export\n * @param {string} url\n * @return {*}  {Promise<any>}\n */\nasync function validateUrl(url) {\n    // If URL doesn't pass then exit out immediately.\n    if (!isUrl(url)) {\n        return {\n            pass: false,\n            error: \"invalidFormat\",\n        };\n    }\n    // Check if it's a FS, Map service, or image service\n    const isFeatureServiceUrl = isFeatureService(url);\n    const isServiceUrl = isService(url);\n    if (isServiceUrl && !isFeatureServiceUrl) {\n        return {\n            pass: false,\n            error: \"invalidFormat\",\n        };\n    }\n    // Content type which can be determined bby the url file extnesion or the request response header\n    let type;\n    let item;\n    let pingResult = {};\n    try {\n        pingResult = isFeatureServiceUrl\n            ? await pingFeatureService(url)\n            : await pingUrl(url);\n        // return an error if the response is not okay\n        if (!pingResult.ok) {\n            return {\n                pass: false,\n                error: \"invalidUrl\",\n            };\n        }\n    }\n    catch (e) {\n        // TODO: This is tricky. The fetch() API rejects when a network error\n        // happens. This error can be a CORS error, or a 404 error, or a timeout\n        // error. While an error like 404 does suggest a bad URL, the CORS occurs\n        // because this is a front-end request and the file is likely accessible by\n        // the server. Unfortunately, the error doesn't have any information about\n        // underline failure type. For now, the network failure is ignored, so the\n        // user can paste a URL from any domain and avoid the CORS issue.\n        Logger.error(`error requesting url`);\n    }\n    // Use the metadata from the ping response if exists, otherwise guess the file\n    // name from the URL\n    if (pingResult.item) {\n        item = pingResult.item;\n    }\n    else {\n        item = { title: getFileName(url), url };\n    }\n    if (pingResult.headers) {\n        type = detectDataTypeFromHeader(pingResult.headers);\n    }\n    if (isFeatureServiceUrl) {\n        type = ItemType[\"Feature Service\"];\n    }\n    else if (!type) {\n        // Guess the data type from the extension\n        type = detectDataTypeFromExtension(url);\n    }\n    if (type) {\n        item.type = type;\n    }\n    if (item.type && shouldHaveDataUrl(item.type)) {\n        item.dataUrl = item.url;\n    }\n    return {\n        pass: true,\n        // The type may or may not be true\n        type,\n        // fetched / calculated item\n        item,\n    };\n}\n\nconst arcgisHubAccessLevelControlsCss = \"calcite-block{width:95%}header{font-size:var(--calcite-font-size-1);line-height:1.5rem;font-weight:var(--calcite-font-weight-medium)}calcite-block{--calcite-font-size--1:16px;--calcite-font-size--2:14px}\";\n\nvar ACCESS_LEVEL;\n(function (ACCESS_LEVEL) {\n  ACCESS_LEVEL[\"PUBLIC\"] = \"public\";\n  ACCESS_LEVEL[\"ORG\"] = \"org\";\n  ACCESS_LEVEL[\"PRIVATE\"] = \"private\";\n})(ACCESS_LEVEL || (ACCESS_LEVEL = {}));\nconst ArcgisHubAccessLevelControls = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubItemAccessLevelChange = createEvent(this, \"arcgisHubItemAccessLevelChange\", 7);\n  }\n  updateAccessLevel(evt) {\n    evt.stopPropagation();\n    this.accessLevel = evt.detail;\n    this.arcgisHubItemAccessLevelChange.emit(this.accessLevel);\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n  }\n  render() {\n    const { intl, accessLevel } = this;\n    return (h(\"div\", null, h(\"calcite-radio-button-group\", { layout: \"vertical\", name: \"sharing-level\" }, h(\"calcite-label\", { layout: \"inline\" }, h(\"calcite-radio-button\", { checked: accessLevel === ACCESS_LEVEL.PUBLIC, value: \"public\" }), h(\"calcite-block\", { heading: intl.t('public') }, h(\"calcite-icon\", { icon: \"globe\", scale: \"s\", slot: \"icon\" }))), h(\"calcite-label\", { layout: \"inline\" }, h(\"calcite-radio-button\", { checked: accessLevel === ACCESS_LEVEL.ORG, value: \"org\" }), h(\"calcite-block\", { heading: intl.t('organization') }, h(\"calcite-icon\", { icon: \"organization\", scale: \"s\", slot: \"icon\" }))), h(\"calcite-label\", { layout: \"inline\" }, h(\"calcite-radio-button\", { checked: accessLevel === ACCESS_LEVEL.PRIVATE, value: \"shared\" }), h(\"calcite-block\", { heading: intl.t('owner') }, h(\"calcite-icon\", { icon: \"user\", scale: \"s\", slot: \"icon\" }))))));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n};\nArcgisHubAccessLevelControls.style = arcgisHubAccessLevelControlsCss;\n\nconst SCHEMA = {\n  required: ['title'],\n  type: 'object',\n  properties: {\n    title: {\n      type: 'string',\n      minLength: 1\n    },\n    snippet: {\n      type: 'string',\n      maxLength: 2048\n    },\n    tags: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    }\n  }\n};\nconst UI_SCHEMA = {\n  type: 'Layout',\n  elements: [\n    {\n      labelKey: 'title',\n      scope: '/properties/title',\n      type: 'Control'\n    },\n    {\n      labelKey: 'snippet',\n      scope: '/properties/snippet',\n      type: 'Control',\n      options: {\n        control: 'hub-field-input-input',\n        type: 'textarea'\n      }\n    },\n    {\n      labelKey: 'tags',\n      scope: '/properties/tags',\n      type: 'Control',\n      options: {\n        control: 'hub-field-input-multiselect'\n      }\n    }\n  ]\n};\n\nconst ArcgisHubFileMetadataEditor = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubFileMetadataEditorChange = createEvent(this, \"arcgisHubFileMetadataEditorChange\", 7);\n    /**\n     * The values for the arcgis-configuration-editor (title, snippet, tags)\n     *\n     * @type {IConfigurationValues}\n     * @memberof ArcgisHubFileMetadataEditor\n     */\n    this.values = {};\n    this._schema = cloneObject(SCHEMA);\n    this._uiSchema = cloneObject(UI_SCHEMA);\n    bind(this, 'translationFunc');\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n  }\n  handleValuesChanged() {\n    // clone values to avoid mutation\n    this.internalValues = cloneObject(this.values);\n  }\n  /**\n   * Emit an event with the updated item metadata values when a field in\n   * the arcgis-configuration-editor is changed\n   * @param event\n   */\n  handleEditorChangeEvent(event) {\n    event.stopPropagation();\n    this.arcgisHubFileMetadataEditorChange.emit(event.detail);\n  }\n  translationFunc(key, values, opts) {\n    return this.intl.t(key, values, opts);\n  }\n  render() {\n    return (h(\"div\", null, h(\"arcgis-configuration-editor\", { schema: this._schema, t: this.translationFunc, uiSchema: this._uiSchema, values: this.internalValues })));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"values\": [\"handleValuesChanged\"]\n  }; }\n};\n\n/**\n * Takes a file name and compares it against a list of extensions from online to extract the\n * extension itself.\n * @param name File name\n * @returns Object containing filename without extension, the full file name, and the extension\n */\nfunction sanitizeFileName(name) {\n  // Regex to extract extension.\n  const expression = /(?:\\.([^.]+))?$/;\n  // if there is another period or dash regex\n  const invalidTitleCharacters = /\\.|-/g;\n  // Cleans up the filename.\n  const fileName = name.replace(/^.*(\\\\|\\/|:)/, \"\");\n  // Get the extension\n  let extension = (fileName && expression.exec(fileName)[1] ? expression.exec(fileName)[1].toLowerCase() : \"\");\n  // Default title\n  let title = \"\";\n  // Handles RFT file extension\n  if (fileName.indexOf(\".rft.\") > -1) {\n    const [name, suffix] = fileName.split(\".rft.\");\n    extension = `rft.${suffix}`;\n    title = name;\n  }\n  // Files name without extension\n  if (fileName && !title) {\n    title = fileName.lastIndexOf(\".\") === -1 ? fileName : fileName.substring(0, fileName.lastIndexOf(\".\"));\n  }\n  // Replace any invalid characters with an underscore\n  title = title.replace(invalidTitleCharacters, \"_\");\n  // Return object\n  return { title, fileName, extension };\n}\n/**\n * Compare files extension to the master list of possibilities. Returns an array of possible item types\n *\n * @export\n * @param {FileExtension} extension Files extension\n * @param {AllowedFileTypes} allowedFileTypes File types passed in by parent to restrict 'allowed' exts.\n * @return {*}  {FileType[]}\n */\nfunction findPossibleItemTypesByExtension(extension, allowedFileTypes) {\n  // Get the list of item types from the list of options.\n  const itemTypes = Object.keys(addCreateItemTypes);\n  // empty array to add to.\n  const possibleItemTypes = [];\n  // Iterate item types\n  itemTypes.forEach((type) => {\n    var _a, _b, _c;\n    // If the type has a file extension and the files extension is present.\n    if (((_a = addCreateItemTypes[type].fileExt) === null || _a === void 0 ? void 0 : _a.indexOf(extension)) >= 0) {\n      // If the validate function was passed a smaller list of item types that can be used\n      // We want to compare against that as well, though the master list is the first gate keeper.\n      // If those file types were passed down...\n      if (allowedFileTypes) {\n        if (\n        // If that smaller subset includes the extension\n        ((_b = allowedFileTypes.extensions) === null || _b === void 0 ? void 0 : _b.indexOf(extension)) >= 0\n          // Of if it matches the types name (for example type === 'Image' actually matches jpg, jpeg, png, tif, and tiff)\n          || ((_c = allowedFileTypes.types) === null || _c === void 0 ? void 0 : _c.indexOf(addCreateItemTypes[type].type)) >= 0) {\n          // Then add the specific type fo possibleItemTypes.\n          possibleItemTypes.push(addCreateItemTypes[type]);\n        }\n      }\n      else {\n        // If allowedFileTypes was not passed in then add the type to possibleItemTypes.\n        possibleItemTypes.push(addCreateItemTypes[type]);\n      }\n    }\n  });\n  return possibleItemTypes;\n}\n/**\n * Validate passed in file/files bbased on number of files, size of the file, and file extension\n *\n * @export\n * @param {FileList} files File/files passed in\n * @param {number} maxFileSize Maximum size of file\n * @param {AllowedFileTypes} [allowedFileTypes] File types passed in by parent to restrict 'allowed' exts.\n * @return {*}  {{ success: boolean; errorMessage?: string }}\n */\nfunction validateAddedFile(files, maxFileSize, allowedFileTypes) {\n  let valid = false;\n  let errorMessage;\n  // Check if multiple files uploaded,\n  if (files.length > 1) {\n    errorMessage = 'multipleFilesError';\n    // Check if file is too big\n  }\n  else if (files[0].size > maxFileSize) {\n    errorMessage = 'fileTooLargeError';\n    // If it passes then update to true\n  }\n  else {\n    // Get possible types.\n    const possibleTypes = findPossibleItemTypesByExtension(sanitizeFileName(files[0].name).extension, allowedFileTypes);\n    // is it valid?\n    const validType = possibleTypes.length > 0; // May be extended to vet orgOnly / public user\n    if (!validType) {\n      errorMessage = 'unsupportedFileTypeError';\n    }\n    else {\n      valid = true;\n    }\n  }\n  // Check if file extension is supported\n  return { success: valid, errorMessage };\n}\n\nconst arcgisHubFileSelectCss = \":host{box-sizing:border-box;display:block;width:100%;border-width:1px;border-style:dashed;padding-top:2rem;padding-bottom:2rem;text-align:center;transition:all 200ms ease-in-out;border-color:#828282;background-color:var(--calcite-ui-foreground-1)}:host(.dragging){border-color:var(--calcite-ui-brand);background-color:rgba(0, 121, 193, 0.05)}:host(.error){background-color:#FFF1EF;border-color:var(--calcite-ui-danger)}:host(.success){border-color:var(--calcite-ui-success);color:var(--calcite-ui-success)}header{margin-bottom:5px;font-size:var(--calcite-font-size-2);line-height:1.5rem;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-2)}p{margin-top:5px;font-size:var(--calcite-font-size-0);line-height:1.25rem;font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-2)}a{display:block}input{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}\";\n\n/**\n * Maps type from the file (mime type) to a human readable type and extension.\n */\nconst mimeTypes = {\n  'image/png': ItemType.Image,\n  'image/jpeg': ItemType.Image,\n  'image/tiff': ItemType.Image,\n  'image/tif': ItemType.Image,\n  'text/csv': ItemType.CSV,\n  'application/pdf': ItemType.PDF,\n  'application/geo+json': ItemType.GeoJson,\n  'application/vnd.ms-excel': ItemType[\"Microsoft Excel\"],\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ItemType[\"Microsoft Excel\"],\n  'application/msword': ItemType[\"Microsoft Word\"],\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ItemType[\"Microsoft Word\"],\n  'application/vnd.ms-powerpoint': ItemType[\"Microsoft Powerpoint\"],\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation': ItemType[\"Microsoft Powerpoint\"]\n};\nconst dateFormatOptions$1 = { month: 'short', day: 'numeric', year: 'numeric' };\nconst ArcgisHubFileSelect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubFileSelected = createEvent(this, \"arcgisHubFileSelected\", 7);\n    this.arcgisHubDragOver = createEvent(this, \"arcgisHubDragOver\", 7);\n    /**\n     * Should the drag-n-drop zone be configured to show Image or Content specific strings.\n     *\n     * @type {('content' | 'image')}\n     * @memberof ArcgisHubFileSelect\n     */\n    this.componentType = 'content';\n    /**\n     * Max allowed size of a selected file in MB\n     *\n     * @memberof ArcgisHubFileSelect\n     */\n    this.maxSize = 200;\n    bind(this, 'handleDragOver', 'handleDragLeave', 'handleDrop', 'setInputEl', 'onInputChange', 'buttonRef', 'onButtonClick');\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.el);\n  }\n  /**\n   * Watches files State && validates selected file/files.\n   * On success selected file is emitted\n   * On failure error state.\n   *\n   * @memberof ArcgisHubFileSelect\n   */\n  validateFiles() {\n    const { files, allowedFileTypes } = this;\n    const maxSize = this.maxSize * 1000 * 1000;\n    // If a file was selected...\n    if (files) {\n      // Validate file\n      const { success, errorMessage } = validateAddedFile(files, maxSize, allowedFileTypes);\n      // If successfully validated\n      if (success) {\n        // Reset error message\n        this.errorMessage = undefined;\n        // Choose file\n        const file = files[0];\n        // Create item for use in createItem call\n        const mergedFileItem = {\n          owner: this.owner,\n          extent: extentToBBox(this.defaultExtent),\n          spatialReference: this.defaultExtent.spatialReference,\n          source: this.portalName,\n          publishedDate: this.intl.formatDate(new Date(), dateFormatOptions$1),\n          access: 'private',\n          title: this.trimExtension(file.name),\n          type: mimeTypes[file.type],\n          modified: file.lastModified,\n          file\n        };\n        // Emit item.\n        this.arcgisHubFileSelected.emit(mergedFileItem);\n      }\n      else {\n        this.errorMessage = errorMessage;\n      }\n    }\n  }\n  /**\n   * Removes extension from filename.\n   */\n  trimExtension(filename) {\n    const spl = filename.split('.');\n    // Filename may have more than one '.' in it.\n    return spl.splice(0, spl.length - 1).join('.');\n  }\n  // Focus Main input\n  async focusMainInput() {\n    this.mainInputRef.focus();\n  }\n  // Clear selected file.\n  async clearSelectedFile() {\n    this.files = undefined;\n  }\n  /**\n   * Takes passed in allowedFileTypes and returns a list of all possible extensions, made unique.\n   * allowedFileTypes can have an array of human readable File Types And/OR an array of extensions\n   * To compile this into one list the below is needed.\n   *\n   * @readonly\n   * @type {string[]}\n   * @memberof ArcgisHubFileSelect\n   */\n  get fileExtensionsFromAllowedFileTypes() {\n    var _a, _b;\n    const { allowedFileTypes } = this;\n    // Start out with an empty array.\n    let list = [];\n    // If we passed in file types via allowedFileTypes then use those...\n    if ((_a = allowedFileTypes === null || allowedFileTypes === void 0 ? void 0 : allowedFileTypes.extensions) === null || _a === void 0 ? void 0 : _a.length) {\n      list = [...list, ...this.allowedFileTypes.extensions];\n    }\n    // Types could have also been passed in. In which case we should add the exts matched to them.\n    // If types were passed in instead we'll need to look up them from addCreateItemTypes.\n    if ((_b = allowedFileTypes === null || allowedFileTypes === void 0 ? void 0 : allowedFileTypes.types) === null || _b === void 0 ? void 0 : _b.length) {\n      // Iterate over all types\n      list = allowedFileTypes.types.reduce((exts, type) => {\n        // If it exists on addCreateItemTypes\n        return (addCreateItemTypes[type] && addCreateItemTypes[type].fileExt)\n          // add the possible file extensions\n          ? [...exts, ...addCreateItemTypes[type].fileExt]\n          : exts;\n      }, list);\n    }\n    // Numerous types may have overlapping extensions, so we create a new Set to get unique exts.\n    list = [...new Set(list)];\n    // Return list.\n    return list;\n  }\n  // Is there a file selected AND no error?\n  get isFileSelected() {\n    return this.files && !this.errorMessage;\n  }\n  // Handles drag over event.\n  handleDragOver(e) {\n    if (e.dataTransfer.types.includes('Files') && !this.isFileSelected) {\n      e.preventDefault();\n      this.isDragging = true;\n      this.arcgisHubDragOver.emit(this.isDragging);\n    }\n    return false;\n  }\n  handleDragLeave() {\n    this.isDragging = false;\n  }\n  // Handles drop of drag event.\n  handleDrop(e) {\n    e.preventDefault();\n    this.isDragging = false;\n    this.files = e.dataTransfer.files;\n  }\n  // Handles the selection of file from clicking browse button\n  onInputChange(e) {\n    this.files = Object.assign({}, e.target.files);\n  }\n  // Input element ref\n  setInputEl(el) {\n    this.inputElement = el;\n  }\n  // Get list of file types for the input element accept attr.\n  get inputAcceptList() {\n    let list = this.fileExtensionsFromAllowedFileTypes;\n    // If nothing was passed in via allowedFileTypes then we should grab the defaults from FileExtension\n    if (!list.length) {\n      list = Object.keys(FileExtension);\n    }\n    // Combine all together in a comma separated list\n    return `.${list.join(', .')}`;\n  }\n  onButtonClick() {\n    var _a;\n    if (this.isFileSelected) {\n      this.clearSelectedFile();\n    }\n    else {\n      (_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.click();\n    }\n  }\n  buttonRef(el) {\n    this.mainInputRef = el;\n  }\n  get buttonIntl() {\n    const { isFileSelected, componentType } = this;\n    let button = 'contentButton';\n    if (isFileSelected) {\n      button = 'clearButton';\n    }\n    else if (componentType === 'image') {\n      button = 'imageButton';\n    }\n    return button;\n  }\n  // Handle heading intl because of the variety of options...\n  get headingIntl() {\n    const { componentType, errorMessage, files } = this;\n    // If there's an error return error heading\n    let heading = 'contentHeading';\n    if (errorMessage) {\n      heading = 'errorHeading';\n    }\n    else if (files && !errorMessage) {\n      // Otherwise if files have been selected, but no error then we want the selected heading\n      heading = 'selectedHeading';\n    }\n    else if (componentType === 'image') {\n      heading = 'imageHeading';\n    }\n    return heading;\n  }\n  // Render details block.\n  renderDetails() {\n    // Destructure the things from this.\n    const { errorMessage, files, isFileSelected, maxSize, fileExtensionsFromAllowedFileTypes, intl } = this;\n    let fileTypes;\n    // Determine if we should show link or not\n    const showLink = !fileExtensionsFromAllowedFileTypes.length || fileExtensionsFromAllowedFileTypes.length > 15;\n    // Which intl string should be used: error, just the max size part as we are showing a link, or max size && file types\n    let bodyText = 'maxSizeAndSupportedTypes';\n    if (errorMessage) {\n      bodyText = errorMessage;\n    }\n    else if (showLink) {\n      bodyText = 'maxSize';\n    }\n    // If we aren't showing a link or the error message we want a list of the file types.\n    if (!showLink || errorMessage) {\n      fileTypes = fileExtensionsFromAllowedFileTypes.join(', ');\n    }\n    // Get the strings\n    let text = intl.t(bodyText, { maxSize, fileTypes });\n    if (errorMessage) {\n      text = intl.t(bodyText);\n    }\n    else if (isFileSelected) {\n      text = files[0].name;\n    }\n    else if (showLink) {\n      text = intl.t(bodyText, { maxSize });\n    }\n    // Return the DOM\n    let dom = (h(\"p\", null, text));\n    if (showLink && !errorMessage) {\n      // TODO: Link below doesn't exist, but will go to docs re supported file extensions in the future. Put it in\n      // here when we get the url.\n      dom = (h(\"p\", null, text, h(\"a\", { href: \"\" }, intl.t('linkText'))));\n    }\n    return dom;\n  }\n  render() {\n    return (h(Host, { class: {\n        [\"file-select-zone\"]: true,\n        dragging: this.isDragging,\n        error: !!this.errorMessage,\n        success: this.isFileSelected\n      }, onDragLeave: this.handleDragLeave, onDragOver: this.handleDragOver, onDrop: this.handleDrop }, h(\"calcite-icon\", { \"aria-hidden\": \"true\", icon: `${this.isFileSelected ? \"check-circle\" : \"upload\"}`, scale: \"l\" }), h(\"header\", null, this.intl.t(this.headingIntl)), this.renderDetails(), h(\"input\", { accept: this.inputAcceptList, onChange: this.onInputChange, ref: this.setInputEl, tabIndex: -1, type: \"file\" }), h(\"calcite-button\", { appearance: \"outline\", onClick: this.onButtonClick, ref: this.buttonRef }, this.intl.t(this.buttonIntl)), h(\"slot\", null)));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"files\": [\"validateFiles\"]\n  }; }\n};\nArcgisHubFileSelect.style = arcgisHubFileSelectCss;\n\nconst arcgisHubGroupsSharingCss = \"header{font-size:var(--calcite-font-size-1);line-height:1.5rem;font-weight:var(--calcite-font-weight-medium);margin-bottom:0.375rem}calcite-label{--calcite-font-size--1:16px}\";\n\nconst ArcgisHubGroupsSharing = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubSelectedGroupsChange = createEvent(this, \"arcgisHubSelectedGroupsChange\", 7);\n    /**\n     * Array of groups that can be shared to.\n     */\n    this.groups = [];\n    /**\n     * Groups we want to optionally share to by default\n     * We pass down selected groups to pre-select one/multiple groups (presuming that's necessary)\n     */\n    this.selectedGroups = [];\n    /**\n     * Internal tracking of selected groups\n     * Keep track of selected / deselected groups internally to keep things clean\n     */\n    this.internalSelectedGroups = [];\n    this.internalDeselectedGroups = [];\n    bind(this, 'updateSelectedGroups', '_shouldGroupBeSelected');\n  }\n  /**\n   * Func bound to onCalciteCheckboxChange event.\n   * Done this way because said event doesn't return anything, and this is needed to avoid\n   * digging down the shadowdom tree to get at the correct target.\n   */\n  updateSelectedGroups(evt) {\n    if (evt.target.checked) {\n      this.internalSelectedGroups.push(evt.target.value);\n      // remove it from deselected groups array\n      this.internalDeselectedGroups = this.internalDeselectedGroups.filter(groupId => groupId !== evt.target.value);\n    }\n    else { // If deselected\n      // Add it to deselected groups array\n      this.internalDeselectedGroups.push(evt.target.value);\n      // remove it from selected groups array.\n      this.internalSelectedGroups = this.internalSelectedGroups.filter(groupId => groupId !== evt.target.value);\n    }\n    // Emit out results.\n    this.arcgisHubSelectedGroupsChange.emit({\n      share: this.internalSelectedGroups,\n      unshare: this.internalDeselectedGroups\n    });\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n    // If any selected groups were passed down in\n    if (this.selectedGroups.length) {\n      // Add them to our internal tracking of selected groups.\n      this.internalSelectedGroups = this.internalSelectedGroups.concat(this.selectedGroups);\n    }\n  }\n  _shouldGroupBeSelected(id) {\n    const val = this.internalSelectedGroups.find(internalGroup => internalGroup.id === id);\n    return !!val;\n  }\n  render() {\n    if (this.groups.length) {\n      return (h(\"div\", null, h(\"header\", null, this.intl.t('heading')), this.groups.map((group) => h(\"calcite-label\", { key: group.id, layout: \"inline\" }, h(\"calcite-checkbox\", { checked: this._shouldGroupBeSelected(group.id), name: group.title, onCalciteCheckboxChange: this.updateSelectedGroups, value: group }), group.title))));\n    }\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n};\nArcgisHubGroupsSharing.style = arcgisHubGroupsSharingCss;\n\nconst arcgisHubUrlContentFormCss = \":host{display:flex;flex-direction:column;align-items:center}header{margin-bottom:5px;font-size:var(--calcite-font-size-2);line-height:1.5rem;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-2)}calcite-input{width:100%}span{margin-top:5px;display:flex;align-items:center;justify-content:center;font-size:var(--calcite-font-size-0);line-height:1.25rem;font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-2)}calcite-icon[class=\\\"error\\\"]{color:var(--calcite-ui-danger)}calcite-icon[class=\\\"success\\\"]{color:var(--calcite-ui-success)}calcite-icon{margin-right:0.625rem}\";\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst dateFormatOptions = { month: 'short', day: 'numeric', year: 'numeric' };\nconst ArcgisHubUrlContentForm = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubUrlValidated = createEvent(this, \"arcgisHubUrlValidated\", 7);\n    this.arcgisHubItemTypeSelected = createEvent(this, \"arcgisHubItemTypeSelected\", 7);\n    /**\n     * State for whether or not we need to show the type picker\n     *\n     * @memberof ArcgisHubUrlContentForm\n     */\n    this.showTypePicker = false;\n    // Types, intl and type mapping.\n    this.types = [\n      // since Doc Link is the default we need to set it to active in the dropdown\n      { intl: 'doclink', type: 'Document Link', active: true },\n      { intl: 'csv', type: 'CSV' },\n      { intl: 'shp', type: 'Shapefile' },\n      { intl: 'geojson', type: 'GeoJson' },\n      { intl: 'featureservice', type: 'Feature Service' },\n      { intl: 'xls', type: 'Microsoft Excel' },\n      { intl: 'pdf', type: 'PDF' },\n      { intl: 'png', type: 'Image' },\n      { intl: 'jpg', type: 'Image' }\n    ];\n    bind(this, 'setDropdownEl', 'setInputEl', 'handleOnInput', 'handleOnKeyDown');\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.el);\n  }\n  validateDebounced() {\n    this.validateUrl();\n  }\n  /**\n   * Listen to the calciteDropdownSelect event, gets the selected type,\n   * sets the type on the validatedUrlItem, and then emits out the validatedUrl item.\n   */\n  handleItemTypeSelection() {\n    const selectedItem = this.dropdownEl.selectedItems[0];\n    if (selectedItem) {\n      const selectedValue = selectedItem.dataset.value;\n      // Update dom text with the title attr (it will already be translated)\n      this.selectedTypeText = selectedItem.getAttribute('title');\n      // If there's already a validatedUrlItem object...\n      if (this.validatedUrlItem) {\n        // Update the type on it to this new type.\n        this.validatedUrlItem.type = selectedValue;\n        // also add it to mergedUrlItem\n        this.mergedUrlItem.type = selectedValue;\n        // Emit out the object.\n        this.arcgisHubItemTypeSelected.emit(this.mergedUrlItem);\n      }\n    }\n  }\n  /**\n   * Handles url validation.\n   * Gets the url from the inputEl element, if a URL is present\n   * then it does validation, determines if the type picker should be shown,\n   * and emits the urlValidatedItem.\n   */\n  async validateUrl() {\n    // Get the input element value.\n    const url = this.inputEl.value;\n    if (url) {\n      // Run validation.\n      const validationResult = await validateUrl(url);\n      // assign it to state\n      this.validatedUrlItem = validationResult;\n      // create merged item\n      const extent = validationResult.item.extent || this.defaultExtent;\n      const mergedUrlItem = Object.assign({ owner: this.owner, extent: extentToBBox(extent), spatialReference: extent.spatialReference, source: this.portalName, publishedDate: this.intl.formatDate(new Date(), dateFormatOptions), access: 'private' }, validationResult.item);\n      // If the extent is in the wrong format from validateUrl then fix it.\n      if (typeof mergedUrlItem.extent === 'object') {\n        const mergedExtentObj = mergedUrlItem.extent;\n        mergedUrlItem.extent = extentToBBox(mergedExtentObj);\n      }\n      // update state\n      this.mergedUrlItem = mergedUrlItem;\n      // If there is no type then show type picker && set\n      // default type to Web Link.\n      if (!validationResult.type) {\n        // Show type picker.\n        this.showTypePicker = true;\n        // set default type to Document Link\n        this.validatedUrlItem.type = 'Document Link';\n        this.mergedUrlItem.type = 'Document Link';\n        // Make sure we know what type is selected.\n        this.selectedTypeText = this.intl.t('doclink');\n      }\n      // Emit out event.\n      this.arcgisHubUrlValidated.emit(this.mergedUrlItem);\n    }\n    else {\n      // if there's no url then reset validatedUrlItem to return the UI\n      // to default state. Needed if swapping between urls.\n      this.validatedUrlItem = undefined;\n    }\n  }\n  handleOnInput() {\n    this.validateDebounced();\n  }\n  handleOnKeyDown(e) {\n    if (e.key === \"Enter\") {\n      this.validateDebounced();\n    }\n  }\n  setDropdownEl(el) {\n    this.dropdownEl = el;\n  }\n  setInputEl(el) {\n    this.inputEl = el;\n  }\n  renderSubText() {\n    const { intl, showTypePicker, validatedUrlItem } = this;\n    // Set initial default state\n    let dom = (h(\"span\", null, intl.t('subText')));\n    // Check if validation has been done && if there was an error.\n    if (validatedUrlItem && validatedUrlItem.error) {\n      dom = (h(\"span\", null, h(\"calcite-icon\", { class: \"error\", icon: \"x-octagon\", scale: \"s\" }), intl.t(validatedUrlItem.error)));\n      // Otherwise if things passed and we need to show the type picker\n    }\n    else if (validatedUrlItem && validatedUrlItem.pass && showTypePicker) {\n      dom = (h(\"span\", null, h(\"calcite-icon\", { class: validatedUrlItem.type ? \"success\" : \"error\", icon: validatedUrlItem.type ? \"check-circle\" : \"x-octagon\", scale: \"s\" }), validatedUrlItem.type && this.intl.t('recognizedType'), h(\"calcite-dropdown\", { placement: \"top\", ref: this.setDropdownEl }, h(\"calcite-button\", { appearance: \"transparent\", \"icon-end\": \"caret-down\", slot: \"dropdown-trigger\" }, this.selectedTypeText || this.intl.t('fileTypeSelector')), h(\"calcite-dropdown-group\", { \"selection-mode\": \"single\" }, this.types.map(type => h(\"calcite-dropdown-item\", { \"data-value\": type.type, key: type.type, title: this.intl.t(type.intl) }, this.intl.t(type.intl)))))));\n      // Otherwise if it passed and we don't need to display type.\n    }\n    else if (validatedUrlItem && validatedUrlItem.pass) {\n      const type = validatedUrlItem.type.toLowerCase().split(' ').join('');\n      dom = (h(\"span\", null, h(\"calcite-icon\", { class: \"success\", icon: \"check-circle\", scale: \"s\" }), this.intl.t(type)));\n    }\n    return dom;\n  }\n  render() {\n    return (h(Host, null, h(\"header\", null, this.intl.t('heading')), h(\"calcite-input\", { onInput: this.handleOnInput, onKeyDown: this.handleOnKeyDown, ref: this.setInputEl }), this.renderSubText()));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get el() { return getElement(this); }\n};\n__decorate([\n  DebounceDecoratorFactory({ timeout: 300 })\n], ArcgisHubUrlContentForm.prototype, \"validateDebounced\", null);\nArcgisHubUrlContentForm.style = arcgisHubUrlContentFormCss;\n\nexport { ArcgisHubAccessLevelControls as arcgis_hub_access_level_controls, ArcgisHubFileMetadataEditor as arcgis_hub_file_metadata_editor, ArcgisHubFileSelect as arcgis_hub_file_select, ArcgisHubGroupsSharing as arcgis_hub_groups_sharing, ArcgisHubUrlContentForm as arcgis_hub_url_content_form };\n","import { d as debounce } from './debounce-89fe9847.js';\n\nfunction DebounceDecoratorFactory(params) {\n  function DebounceDecorator(_target, propertyKey, descriptor) {\n    const { value: original } = descriptor;\n    const debouncedKey = `${propertyKey.toString()}Debounced`;\n    const value = function (...args) {\n      if (!this[debouncedKey]) {\n        Object.defineProperty(this, debouncedKey, {\n          value: debounce(original, params.timeout),\n        });\n      }\n      this[debouncedKey](this, ...args);\n    };\n    return Object.assign(Object.assign({}, descriptor), { value });\n  }\n  return DebounceDecorator;\n}\n\nexport { DebounceDecoratorFactory as D };\n","/**\n * A util to debounce another function. It will return a function\n * that, as long as it continues to be invoked, will not be triggered\n * until the designated timeout has passed.\n */\nfunction debounce(fn, timeout = 300) {\n  let timeoutId;\n  return function (context, ...args) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn.apply(context, args), timeout);\n  };\n}\n\nexport { debounce as d };\n","/**\n * Get a property out of a deeply nested object\n * Does not handle anything but nested object graph\n */\nfunction getProp(obj, path) {\n    return path.split(\".\").reduce(function (prev, curr) {\n        /* istanbul ignore next no need to test undefined scenario */\n        return prev ? prev[curr] : undefined;\n    }, obj);\n}\n\nexport { getProp as g };\n","/* tslint:disable no-console */\n/**\n * Enum for Logger Levels\n */\nvar Level;\n(function (Level) {\n    Level[Level[\"all\"] = 0] = \"all\";\n    Level[Level[\"debug\"] = 1] = \"debug\";\n    Level[Level[\"info\"] = 2] = \"info\";\n    Level[Level[\"warn\"] = 3] = \"warn\";\n    Level[Level[\"error\"] = 4] = \"error\";\n    Level[Level[\"off\"] = 5] = \"off\";\n})(Level || (Level = {}));\n/**\n * ```js\n * import { Logger, Level } from '@esri/hub-common'\n * ```\n * Functions share the console interface\n * ```js\n * Logger.log('My Message');\n * Logger.warn('Watch out!', { threat: 'Charizard' });\n * // etc, etc\n * ```\n * Available logging levels are specified in the Level enum. The hierarchy is as follows:\n * ```\n * off > error > warn > info > debug > all\n * ```\n * Logger only sends messages whose level is greater than or equal to the global log level\n * ```js\n * // Global level is 'warn'\n * Logger.info('This message won't log');\n * Logger.error('But this one will!');\n * ```\n * Logger's default level is 'off', so set desired level before use\n * ```js\n * Logger.setLogLevel(Level.all);\n * ```\n */\nclass Logger {\n    /**\n     * Sets the global log level\n     * @param {Level} level\n     */\n    static setLogLevel(level) {\n        this.logLevel = level;\n    }\n    /**\n     * Logs to debug if level is enabled\n     * @param {string} message\n     * @param {...*} objects additional objects to log (optional rest parameter)\n     */\n    static log(message, ...objects) {\n        if (this.isLevelPermitted(Level.debug)) {\n            console.log(message, ...objects);\n        }\n    }\n    /**\n     * Logs to debug if level is enabled\n     * @param {string} message\n     * @param {...*} objects additional objects to log (optional rest parameter)\n     */\n    static debug(message, ...objects) {\n        if (this.isLevelPermitted(Level.debug)) {\n            console.debug(message, ...objects);\n        }\n    }\n    /**\n     * Logs to info if level is enabled\n     * @param {string} message\n     * @param {...*} objects additional objects to log (optional rest parameter)\n     */\n    static info(message, ...objects) {\n        if (this.isLevelPermitted(Level.info)) {\n            console.info(message, ...objects);\n        }\n    }\n    /**\n     * Logs to warn if level is enabled\n     * @param {string} message\n     * @param {...*} objects additional objects to log (optional rest parameter)\n     */\n    static warn(message, ...objects) {\n        if (this.isLevelPermitted(Level.warn)) {\n            console.warn(message, ...objects);\n        }\n    }\n    /**\n     * Logs to error if level is enabled\n     * @param {string} message\n     * @param {...*} objects additional objects to log (optional rest parameter)\n     */\n    static error(message, ...objects) {\n        if (this.isLevelPermitted(Level.error)) {\n            console.error(message, ...objects);\n        }\n    }\n    static isLevelPermitted(level) {\n        return this.logLevel <= level;\n    }\n}\nLogger.logLevel = Level.off;\n\nexport { Level as L, Logger as a };\n","import { g as getProp } from './get-prop-d82e4fa6.js';\n\n/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * ```js\n * import { cloneObject } from \"@esri/hub-common\";\n * const original = { foo: \"bar\" }\n * const copy = cloneObject(original)\n * copy.foo // \"bar\"\n * copy === original // false\n * ```\n * Make a deep clone, including arrays. Does not handle functions!\n */\nfunction cloneObject(obj) {\n    let clone = {};\n    // first check array\n    if (Array.isArray(obj)) {\n        clone = obj.map(cloneObject);\n    }\n    else if (typeof obj === \"object\") {\n        for (const i in obj) {\n            if (obj.hasOwnProperty(i)) {\n                const value = obj[i];\n                if (value != null && typeof value === \"object\") {\n                    if (value instanceof Date) {\n                        clone[i] = new Date(value.getTime());\n                    }\n                    else if (typeof Blob !== \"undefined\" && value instanceof Blob) {\n                        clone[i] = new Blob([value], { type: value.type });\n                    }\n                    else {\n                        clone[i] = cloneObject(value);\n                    }\n                }\n                else {\n                    clone[i] = value;\n                }\n            }\n        }\n    }\n    else {\n        clone = obj;\n    }\n    return clone;\n}\n/**\n * Return an entry from an array by a property name\n */\nfunction findBy(arr, prop, value) {\n    if (!arr) {\n        return null;\n    }\n    const res = arr.reduce((acc, entry) => {\n        if (getProp(entry, prop) === value) {\n            acc = entry;\n        }\n        return acc;\n    }, null);\n    return res;\n}\n/**\n * Return a new array without the specified value.\n *\n * @export\n * @param {any[]} arr\n * @param {*} val value or object to remove\n * @returns {any[]} Array without the value\n */\nfunction without(arr, value) {\n    const res = arr.filter((entry) => entry !== value);\n    return res;\n}\n/**\n * Return a random number, prefixed with a string. Used for unique identifiers that do not require\n * the rigor of a full UUID - i.e. node id's, process ids etc.\n * @param prefix String to prefix the random number with so the result is a valid javascript property\n */\nfunction createId(prefix = \"i\") {\n    // prepend some char so it's always a valid dotable property name\n    // get a random number, convert to base 36 representation, then grab chars 2-8\n    return `${prefix}${Math.random().toString(36).substr(2, 8)}`;\n}\n/**\n * Append or replace a value on an object, using a specified key, if the value is not null.\n * This is a very useful companion to the [getProp()](../getProp/) utility.\n *\n * Note: object that is passed in is cloned before the property is appended.\n *\n * Allows for code like:\n *\n * ```js\n * let model = {\n *  item: {\n *    title: 'some example object',\n *    description: 'this is some longer text',\n *    type: 'Web Map',\n *    properties: {\n *      sourceId: '3ef'\n *    }\n *  },\n *  data: {\n *    theme: 'orange',\n *    parcelLayer: {\n *      primaryField: 'PIN'\n *    }\n *  }\n * };\n *\n * // Let's extract some details into an object.\n * const summary = [\n *  'item.title',\n *  'item.description',\n *  'item.missingProp',\n *  'data.parcelLayer.primaryField'].reduce((acc, prop) => {\n *   // create the property name... you could do this however...\n *   let propName = prop.split('.').reverse()[0];\n *   return maybeAdd(propName, getProp(model, key), acc);\n * }, {});\n *\n * // summary =>\n * // {\n * //   title: 'some example object',\n * //   description: 'this is some longer text',\n * //   primaryField: 'PIN'\n * // }\n * ```\n * @param key - key to use when appending to the object\n * @param val - the possibly null value\n * @param target - the object to update\n */\nfunction maybeAdd(key, val, target) {\n    // see if we got something...\n    if (val !== null && val !== undefined) {\n        target = cloneObject(target);\n        // attach using the key\n        target[key] = val;\n    }\n    return target;\n}\n/**\n * Append a value to an array, if the value is not null.\n * This is a very useful companion to the [getProp()](../getProp/) utility.\n *\n * Note: the array that is passed in is cloned before being appended to.\n *\n * Allows for code like:\n * ```js\n *  // example object\n * let model = {\n *  item: {\n *    id: 'c00',\n *    title: 'some example object',\n *    description: 'this is some longer text',\n *    type: 'Web Map',\n *    properties: {\n *      sourceId: '3ef'\n *    }\n *  },\n *  data: {\n *    theme: 'orange',\n *    parcelLayer: {\n *      itemId: '7ca',\n *      primaryField: 'PIN'\n *    }\n *  }\n * };\n * // lets pluck some id's into an array...\n * maybePush(getProp(model, 'item.properties.sourceId'), []);\n * // > ['3ef']\n *\n * // now try to get a value from a property that is missing...\n * maybePush(getProp(obj, 'item.properties.childId'), []);\n * // > []\n *\n * // easily pluck values via property paths\n * const summary = [\n *  'item.id',\n *  'item.properties.sourceId',\n *  'item.properties.childId',\n *  'data.parcelLayer.itemId'].reduce((acc, prop) => {\n *   return maybePush(getProp(model, key), acc);\n * }, []);\n *\n * // summary => ['c00', '3ef', '7ca']\n *\n * ```\n *\n * @param val - the possibly null value\n * @param target - the array to add the value to\n */\nfunction maybePush(val, target) {\n    if (val !== null && val !== undefined) {\n        // create a clone because mutation makes us sad...\n        target = cloneObject(target);\n        target.push(val);\n    }\n    return target;\n}\n/**\n * Convert a string to camelCase\n *\n * @export\n * @param {string} value\n * @returns {string} camelCased string\n */\nfunction camelize(value) {\n    // lower case the whole thing to start...\n    value = value.toLowerCase();\n    // strip out any/all special chars...\n    value = value.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, \" \");\n    // Hoisted from EmberJS (MIT License)\n    // https://github.com/emberjs/ember.js/blob/v2.0.1/packages/ember-runtime/lib/system/string.js#L23-L27\n    const STRING_CAMELIZE_REGEXP_1 = /(\\-|\\_|\\.|\\s)+(.)?/g;\n    const STRING_CAMELIZE_REGEXP_2 = /(^|\\/)([A-Z])/g;\n    return value\n        .replace(STRING_CAMELIZE_REGEXP_1, function (match, separator, chr) {\n        return chr ? chr.toUpperCase() : \"\";\n    })\n        .replace(STRING_CAMELIZE_REGEXP_2, function (match, separator, chr) {\n        return match.toLowerCase();\n    });\n}\n/**\n * Determines if a value is unique in an array\n * Allows for code like:\n *\n * ```js\n * const ary = [ 1, 2, 3, 3, 4, 5, 1 ];\n *\n * const result = ary.filter(unique);\n *\n * result => [ 1, 2, 3, 4, 5 ]\n * ```\n * @param value - the value to search for\n * @param index - the index of the searched value\n * @param ary - the array to search\n * @returns {boolean} - indicating if the value is unique in the array\n */\nfunction unique(value, index, ary) {\n    return ary.indexOf(value) === index;\n}\n/**\n * Determine if a value is null or undefined\n * @param value anything\n * @returns\n */\nconst isNil = (value) => value == null;\n/**\n * Upper case first letter (only) of a string\n * @param word\n * @returns Word\n */\nconst capitalize = (word) => {\n    // upper case first letter and return as element in array for backwards compatibility\n    const chars = Array.from(word);\n    chars[0] = chars[0].toUpperCase();\n    return chars.join(\"\");\n};\n/**\n * An IE-compatible stand-in for Javascript's [array.flat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat)\n * @param arr the array\n * @returns an array\n */\nfunction flattenArray(arr) {\n    return arr.reduce((acc, val) => acc.concat(val), []);\n}\n\nexport { createId as a, camelize as b, cloneObject as c, maybePush as d, capitalize as e, flattenArray as f, findBy as g, isNil as i, maybeAdd as m, unique as u, without as w };\n"],"names":["FEATURE_SERVICE_URL_REGEX","SERVICE_URL_REGEX","shouldHaveDataUrl","itemType","includes","getFileName","url","filename","parsed","URL","pathname","split","pop","hostname","e","Error","isUrl","Logger","isFeatureService","test","isService","isFeatureLayer","results","match","getFeatureLayerItem","body","title","name","description","extent","getFeatureServiceItem","serviceDescription","getFeatureServiceTitle","fullExtent","initialExtent","pingUrl","fetch","method","response","ok","headers","pingFeatureService","searchParams","set","href","json","error","getItem","item","detectDataTypeFromHeader","dataType","contentType","get","shift","ItemType","detectDataTypeFromExtension","toLowerCase","validateUrl","pass","isFeatureServiceUrl","pingResult","type","dataUrl","ACCESS_LEVEL","ArcgisHubAccessLevelControls","hostRef","registerInstance","this","arcgisHubItemAccessLevelChange","createEvent","evt","stopPropagation","accessLevel","detail","emit","intlManager","element","intl","h","layout","checked","PUBLIC","value","heading","t","icon","scale","slot","ORG","PRIVATE","getElement","style","SCHEMA","required","properties","minLength","snippet","maxLength","tags","items","UI_SCHEMA","elements","labelKey","scope","options","control","ArcgisHubFileMetadataEditor","arcgisHubFileMetadataEditorChange","values","_schema","cloneObject","_uiSchema","bind","internalValues","event","key","opts","schema","translationFunc","uiSchema","validateAddedFile","files","maxFileSize","allowedFileTypes","errorMessage","valid","length","size","possibleTypes","extension","itemTypes","Object","keys","addCreateItemTypes","possibleItemTypes","forEach","_a","_b","_c","fileExt","indexOf","extensions","types","push","findPossibleItemTypesByExtension","expression","fileName","replace","exec","suffix","lastIndexOf","substring","sanitizeFileName","success","mimeTypes","dateFormatOptions$1","month","day","year","ArcgisHubFileSelect","arcgisHubFileSelected","arcgisHubDragOver","componentType","maxSize","el","undefined","file","mergedFileItem","owner","extentToBBox","defaultExtent","spatialReference","source","portalName","publishedDate","formatDate","Date","access","trimExtension","modified","lastModified","spl","splice","join","mainInputRef","focus","list","reduce","exts","Set","dataTransfer","isFileSelected","preventDefault","isDragging","assign","target","inputElement","fileExtensionsFromAllowedFileTypes","FileExtension","clearSelectedFile","click","button","fileTypes","showLink","bodyText","text","dom","Host","class","onDragLeave","handleDragLeave","onDragOver","handleDragOver","onDrop","handleDrop","headingIntl","renderDetails","accept","inputAcceptList","onChange","onInputChange","ref","setInputEl","tabIndex","appearance","onClick","onButtonClick","buttonRef","buttonIntl","ArcgisHubGroupsSharing","arcgisHubSelectedGroupsChange","groups","selectedGroups","internalSelectedGroups","internalDeselectedGroups","filter","groupId","share","unshare","concat","id","find","internalGroup","map","group","_shouldGroupBeSelected","onCalciteCheckboxChange","updateSelectedGroups","__decorate","decorators","desc","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","dateFormatOptions","ArcgisHubUrlContentForm","arcgisHubUrlValidated","arcgisHubItemTypeSelected","showTypePicker","active","selectedItem","dropdownEl","selectedItems","selectedValue","dataset","selectedTypeText","getAttribute","validatedUrlItem","mergedUrlItem","inputEl","validationResult","mergedExtentObj","validateDebounced","placement","setDropdownEl","onInput","handleOnInput","onKeyDown","handleOnKeyDown","renderSubText","DebounceDecoratorFactory","timeout","prototype","params","_target","propertyKey","descriptor","original","debouncedKey","toString","debounce","args","fn","timeoutId","context","clearTimeout","setTimeout","apply","getProp","obj","path","prev","curr","Level","level","logLevel","message","isLevelPermitted","debug","objects","console","log","info","warn","off","clone","Array","isArray","hasOwnProperty","getTime","Blob","findBy","arr","prop","acc","entry","without","createId","prefix","Math","random","substr","maybeAdd","val","maybePush","camelize","separator","chr","toUpperCase","unique","index","ary","isNil","capitalize","word","chars","from","flattenArray"],"sourceRoot":""}