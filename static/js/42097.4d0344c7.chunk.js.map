{"version":3,"file":"static/js/42097.4d0344c7.chunk.js","mappings":"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","sources":["../.yalc/@esri/hub-components/dist/esm/arcgis-hub-entity-editor.entry.js","../.yalc/@esri/hub-components/dist/esm/context-7d8f7366.js","../.yalc/@esri/hub-components/dist/esm/remove-020c0573.js","../.yalc/@esri/hub-components/dist/esm/types-c743f032.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport { g as getTypeFromEntity } from './types-c743f032.js';\nimport { c as cloneObject } from './util-2150bd9e.js';\nimport { b as bBoxToExtent, c as getGeographicOrgExtent, a as extentToBBox } from './extent-0f42acfc.js';\nimport { a as addItemResource, H as HubError } from './getPropertyMap-7bed72e1.js';\nimport { a as getPortalApiUrl } from './get-portal-api-url-2391fbac.js';\nimport { r as removeItemResource } from './remove-020c0573.js';\nimport { u as updateProject, g as getHubProjectEditorConfig } from './edit-d086fe2a.js';\nimport './index-4e91769f.js';\nimport './get-prop-d82e4fa6.js';\nimport './request-c15cc2af.js';\nimport './search-3af9e278.js';\nimport './generic-search-069e22da.js';\nimport './get-portal-url-423a76f5.js';\nimport './clean-url-be7c0879.js';\nimport './append-custom-params-fd9b7e72.js';\nimport './create-7cf3c372.js';\nimport './tslib.es6-3669ad41.js';\nimport './get-f2cd18e7.js';\nimport './get-with-default-6db049d8.js';\nimport './OperationError-85fd80c7.js';\nimport './update-fec93fc5.js';\nimport './fail-safe-1c23dad8.js';\nimport './set-prop-c51a6d0c.js';\nimport './ProjectBusinessRules-bb655b17.js';\nimport './get-item-thumbnail-url-7608a737.js';\nimport './interpolate-501f9adb.js';\n\n/**\n * Given an item, and owner, add a image resource to the item and returns its url\n * @param id\n * @param owner\n * @param file\n * @param filename\n * @param ro\n * @param prefix\n * @returns\n */\nasync function uploadImageResource(id, owner, file, filename, ro, prefix = \"\") {\n    try {\n        // Add item resource\n        const response = await addItemResource(Object.assign({ id,\n            owner, resource: file, name: filename, prefix }, ro));\n        // if err throw\n        if (!response.success) {\n            throw new HubError(\"Set Item Featured Image\", \"Unknown error setting featured image.\");\n        }\n        // return url\n        const portalRestUrl = getPortalApiUrl(ro.portal);\n        if (prefix) {\n            prefix = `${prefix}/`;\n        }\n        return `${portalRestUrl}/content/items/${id}/resources/${prefix}${filename}`;\n    }\n    catch (err) {\n        if (err instanceof Error) {\n            throw new HubError(\"Set Item Featured Image\", err.message, err);\n        }\n        else {\n            throw new HubError(\"Set Item Featured Image\", \"Unknown error setting featured image.\");\n        }\n    }\n}\n\n/***\n *    ######## ######## ##     ## ########\n *       ##    ##       ###   ### ##     ##\n *       ##    ##       #### #### ##     ##\n *       ##    ######   ## ### ## ########\n *       ##    ##       ##     ## ##\n *       ##    ##       ##     ## ##\n *       ##    ######## ##     ## ##\n *    FUNCTIONS IN THIS FILE WILL EVENTUALLY BE HOISTED TO HUB.JS\n */\nasync function getHubProjectEditorConfigOptions(project = {}, context) {\n  var _a, _b;\n  const cacheBust = new Date().getTime();\n  const useProjectExtent = !!((_a = project.extent) === null || _a === void 0 ? void 0 : _a.length);\n  const extent = await getProjectExtent(project, context);\n  return [\n    {\n      scope: '/properties/extent',\n      options: {\n        sources: [\n          {\n            value: 'none',\n            selected: !useProjectExtent\n          },\n          {\n            selected: useProjectExtent,\n            value: 'item',\n            labelKey: useProjectExtent\n              ? \"{{i18nScope}}.fields.extent.project\"\n              : \"{{i18nScope}}.fields.extent.org\",\n            graphic: { geometry: Object.assign({ type: 'extent' }, extent) }\n          }\n        ]\n      }\n    },\n    {\n      scope: '/properties/view/properties/featuredImage',\n      options: {\n        imgSrc: ((_b = project.view) === null || _b === void 0 ? void 0 : _b.featuredImageUrl) && `${project.view.featuredImageUrl}?token=${context.session.token}&v=${cacheBust}`\n      }\n    },\n    // TODO: add featured content (gallery picker) options\n  ];\n}\nasync function getHubProjectEditorValues(project, context) {\n  const values = cloneObject(project);\n  values.extent = await getProjectExtent(project, context);\n  return values;\n}\nasync function saveHubProjectEntityEditor(project, context) {\n  var _a;\n  const values = cloneObject(project);\n  // 1. convert extent to bbox\n  values.extent = extentToBBox(values.extent);\n  // 2. convert featuredImage blob to url and store as resource on project item\n  if ((_a = values.view) === null || _a === void 0 ? void 0 : _a.featuredImage) {\n    let featuredImageUrl;\n    const featuredImage = values.view.featuredImage;\n    delete values.view.featuredImage;\n    if (featuredImage.blob) {\n      featuredImageUrl = await uploadImageResource(project.id, project.owner, featuredImage.blob, \"featuredImage.png\", context.userRequestOptions);\n    }\n    else {\n      featuredImageUrl = null;\n      await removeItemResource(Object.assign({ id: project.id, owner: project.owner, resource: \"featuredImage.png\" }, context.userRequestOptions));\n    }\n    values.view.featuredImageUrl = featuredImageUrl;\n  }\n  return updateProject(values, context.userRequestOptions);\n}\nasync function getProjectExtent(project, context) {\n  var _a;\n  const useProjectExtent = (_a = project.extent) === null || _a === void 0 ? void 0 : _a.length;\n  return useProjectExtent\n    ? bBoxToExtent(project.extent)\n    : await getGeographicOrgExtent(context.hubRequestOptions);\n}\n\n/***\n *    ######## ######## ##     ## ########\n *       ##    ##       ###   ### ##     ##\n *       ##    ##       #### #### ##     ##\n *       ##    ######   ## ### ## ########\n *       ##    ##       ##     ## ##\n *       ##    ##       ##     ## ##\n *       ##    ######## ##     ## ##\n *    FUNCTIONS IN THIS FILE WILL BE IMPLEMENTED IN HUB.JS\n */\nasync function getEntityEditorConfig(entity, context) {\n  const type = getTypeFromEntity(entity);\n  const entityTypeToEditorConfigFns = {\n    project: {\n      config: getHubProjectEditorConfig,\n      options: getHubProjectEditorConfigOptions\n    }\n  };\n  const entityTypeEditorConfigFns = entityTypeToEditorConfigFns[type] || {};\n  /**\n   * TODO: in the future, we may want to pass in an additional arg here that\n   * specifies that we only want the options associated with a certain subset\n   * of the schema\n   */\n  const options = await entityTypeEditorConfigFns.options(entity, context);\n  /**\n   * A couple things to note here:\n   * 1. This assumes that the 18nScope for any editor config will always be\n   * the entity type (e.g. \"project\", \"site\")\n   * 2. This function currently defaults to returning the \"edit\" editor config\n   * (which we're currently associating with the \"details\" panel); In the future,\n   * however, we could easily pass in an additional param to this function to\n   * return a different editor config (e.g. \"settings\", \"domains\", etc.)\n   */\n  return entityTypeEditorConfigFns.config(type, \"edit\", options);\n}\nasync function getEntityEditorValues(entity, context) {\n  const type = getTypeFromEntity(entity);\n  const entityTypeToEditorValuesFn = {\n    project: getHubProjectEditorValues\n  };\n  return entityTypeToEditorValuesFn[type](entity, context);\n}\nasync function saveEntityEditor(entity, context) {\n  const type = getTypeFromEntity(entity);\n  const entityTypeToSaveFn = {\n    project: saveHubProjectEntityEditor\n  };\n  return entityTypeToSaveFn[type](entity, context);\n}\n\nconst arcgisHubEntityEditorCss = \".sc-arcgis-hub-entity-editor-h{display:block}\";\n\nconst ArcgisHubEntityEditor = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisHubWorkspaceEntityChange = createEvent(this, \"arcgisHubWorkspaceEntityChange\", 7);\n    bind(this, 'translationFunc', 'handleEntityEditorSave', 'handleEntityEditorChange');\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n    try {\n      const { schema, uiSchema } = await getEntityEditorConfig(this.entity, this.context);\n      this.schema = schema;\n      this.uiSchema = uiSchema;\n    }\n    catch (error) {\n      const entityType = getTypeFromEntity(this.entity);\n      console.error(`Could not fetch the editor config - verify the get${entityType}EditorConfig function is supported`);\n    }\n    const values = await getEntityEditorValues(this.entity, this.context);\n    this.values = values;\n  }\n  translationFunc(key, values, opts) {\n    return this.intl.t(key, values, opts);\n  }\n  handleEntityEditorChange() {\n    this.arcgisHubWorkspaceEntityChange.emit({ isDirty: true, entity: this.entity });\n  }\n  async handleEntityEditorSave(evt) {\n    let updatedEntity = this.entity;\n    try {\n      updatedEntity = await saveEntityEditor(evt.detail, this.context);\n    }\n    catch (error) {\n      console.error('Unable to save entity changes:', error);\n    }\n    finally {\n      this.arcgisHubWorkspaceEntityChange.emit({ isDirty: false, entity: updatedEntity });\n    }\n  }\n  render() {\n    return (h(Host, { \"data-element\": \"entity-editor\" }, h(\"h2\", null, this.intl.t('details')), h(\"arcgis-configuration-form\", { onArcgisConfigurationFormChanged: this.handleEntityEditorChange, onArcgisConfigurationFormSaved: this.handleEntityEditorSave, schema: this.schema, t: this.translationFunc, uiSchema: this.uiSchema, values: this.values })));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n};\nArcgisHubEntityEditor.style = arcgisHubEntityEditorCss;\n\nexport { ArcgisHubEntityEditor as arcgis_hub_entity_editor };\n","const bind = (context, ...methodNames) => {\n  methodNames.forEach(methodName => {\n    if (typeof context[methodName] !== 'function') {\n      throw new Error(`Cannot bind context. ${methodName} must be a function`);\n    }\n    context[methodName] = context[methodName].bind(context);\n  });\n};\n\nexport { bind as b };\n","import { _ as __assign } from './tslib.es6-3669ad41.js';\nimport { g as getPortalUrl } from './get-portal-url-423a76f5.js';\nimport { d as determineOwner } from './get-f2cd18e7.js';\nimport { r as request } from './request-c15cc2af.js';\n\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * ```js\n * import { removeItem } from \"@esri/arcgis-rest-portal\";\n * //\n * removeItem({\n *   id: \"3ef\",\n *   authentication\n * })\n * ```\n * Delete an item from the portal. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/delete-item.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that deletes an item.\n */\nfunction removeItem(requestOptions) {\n    return determineOwner(requestOptions).then(function (owner) {\n        var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/delete\";\n        return request(url, requestOptions);\n    });\n}\n/**\n * Remove a resource associated with an item\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that deletes an item resource.\n */\nfunction removeItemResource(requestOptions) {\n    return determineOwner(requestOptions).then(function (owner) {\n        var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/removeResources\";\n        // mix in user supplied params\n        requestOptions.params = __assign(__assign({}, requestOptions.params), { resource: requestOptions.resource });\n        // only override the deleteAll param specified previously if it is passed explicitly\n        if (typeof requestOptions.deleteAll !== \"undefined\") {\n            requestOptions.params.deleteAll = requestOptions.deleteAll;\n        }\n        return request(url, requestOptions);\n    });\n}\n\nexport { removeItem as a, removeItemResource as r };\n","// import { HubEntity } from \"./types/HubEntity\";\n// import { HubEntityType } from \"./types/HubEntityType\";\n/**\n * Given a HubEntity, return it's HubEntityType\n * @param entity\n * @returns\n */\nfunction getTypeFromEntity(entity) {\n    let type;\n    switch (entity.type) {\n        case \"Hub Site Application\":\n        case \"Site Application\":\n            type = \"site\";\n            break;\n        case \"Hub Page\":\n        case \"Site Page\":\n            type = \"page\";\n            break;\n        case \"Hub Project\":\n            type = \"project\";\n            break;\n        case \"Hub Initiative\":\n            type = \"initiative\";\n            break;\n    }\n    return type;\n}\n\nvar PANEL_ICONS;\n(function (PANEL_ICONS) {\n  PANEL_ICONS[\"overview\"] = \"home\";\n  PANEL_ICONS[\"details\"] = \"edit-attributes\";\n  PANEL_ICONS[\"settings\"] = \"gear\";\n})(PANEL_ICONS || (PANEL_ICONS = {}));\n\nexport { PANEL_ICONS as P, getTypeFromEntity as g };\n"],"names":["uploadImageResource","id","owner","file","filename","ro","prefix","addItemResource","Object","assign","resource","name","success","HubError","portalRestUrl","getPortalApiUrl","portal","Error","message","getHubProjectEditorConfigOptions","project","context","cacheBust","Date","getTime","useProjectExtent","_a","extent","length","getProjectExtent","scope","options","sources","value","selected","labelKey","graphic","geometry","type","imgSrc","_b","view","featuredImageUrl","session","token","getHubProjectEditorValues","values","cloneObject","saveHubProjectEntityEditor","extentToBBox","featuredImage","blob","userRequestOptions","removeItemResource","updateProject","bBoxToExtent","getGeographicOrgExtent","hubRequestOptions","getEntityEditorConfig","entity","getTypeFromEntity","entityTypeToEditorConfigFns","config","getHubProjectEditorConfig","entityTypeEditorConfigFns","getEntityEditorValues","entityTypeToEditorValuesFn","saveEntityEditor","entityTypeToSaveFn","ArcgisHubEntityEditor","hostRef","registerInstance","this","arcgisHubWorkspaceEntityChange","createEvent","bind","intlManager","element","intl","schema","uiSchema","entityType","console","error","key","opts","t","emit","isDirty","evt","updatedEntity","detail","h","Host","onArcgisConfigurationFormChanged","handleEntityEditorChange","onArcgisConfigurationFormSaved","handleEntityEditorSave","translationFunc","getElement","style","methodNames","forEach","methodName","removeItem","requestOptions","determineOwner","then","url","getPortalUrl","request","params","__assign","deleteAll","PANEL_ICONS"],"sourceRoot":""}