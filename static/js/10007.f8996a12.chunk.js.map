{"version":3,"file":"static/js/10007.f8996a12.chunk.js","mappings":"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","sources":["../node_modules/@esri/hub-components/dist/esm/HubInitiatives-caeefcab.js","../node_modules/@esri/hub-components/dist/esm/InitiativeBusinessRules-04858900.js","../node_modules/@esri/hub-components/dist/esm/arcgis-hub-workspace.entry.js","../node_modules/@esri/hub-components/dist/esm/context-7d8f7366.js","../node_modules/@esri/hub-components/dist/esm/fetch-a8e38b36.js","../node_modules/@esri/hub-components/dist/esm/fetchHubEntity-7424e794.js","../node_modules/@esri/hub-components/dist/esm/get-item-home-url-9ff2898b.js","../node_modules/@esri/hub-components/dist/esm/getTypeFromEntity-332e6f28.js"],"sourcesContent":["import { g as getBasePropertyMap, p as processEntityCapabilities, a as getItemBySlug, f as fetchModelFromItem, P as PropertyMapper, b as getUniqueSlug, c as getModel, d as updateModel } from './getPropertyMap-598a7bb8.js';\nimport { c as InitiativeDefaultCapabilities } from './InitiativeBusinessRules-04858900.js';\nimport { a as getItemThumbnailUrl } from './get-item-thumbnail-url-7e5ae2fd.js';\nimport { i as isGuid } from './is-guid-8127621d.js';\nimport { g as getItem } from './get-f2cd18e7.js';\n\n/**\n * Returns an Array of IPropertyMap objects\n * that define the projection of properties from a IModel to an IHubProject\n * @returns\n * @private\n */\nfunction getPropertyMap() {\n    const map = getBasePropertyMap();\n    // Type specific mappings\n    map.push({ objectKey: \"status\", modelKey: \"data.status\" });\n    map.push({ objectKey: \"catalog\", modelKey: \"data.catalog\" });\n    map.push({ objectKey: \"permissions\", modelKey: \"data.permissions\" });\n    map.push({\n        objectKey: \"capabilities\",\n        modelKey: \"data.settings.capabilities\",\n    });\n    map.push({ objectKey: \"contacts\", modelKey: \"data.contacts\" });\n    map.push({ objectKey: \"timeline\", modelKey: \"data.timeline\" });\n    return map;\n}\n\n/**\n * Given a model and an Initiative, set various computed properties that can't be directly mapped\n * @private\n * @param model\n * @param initiative\n * @param requestOptions\n * @returns\n */\nfunction computeProps(model, initiative, requestOptions) {\n    var _a;\n    let token;\n    if (requestOptions.authentication) {\n        const session = requestOptions.authentication;\n        token = session.token;\n    }\n    // thumbnail url\n    initiative.thumbnailUrl = getItemThumbnailUrl(model.item, requestOptions, token);\n    // Handle Dates\n    initiative.createdDate = new Date(model.item.created);\n    initiative.createdDateSource = \"item.created\";\n    initiative.updatedDate = new Date(model.item.modified);\n    initiative.updatedDateSource = \"item.modified\";\n    // Handle capabilities\n    initiative.capabilities = processEntityCapabilities(((_a = model.data.settings) === null || _a === void 0 ? void 0 : _a.capabilities) || {}, InitiativeDefaultCapabilities);\n    // cast b/c this takes a partial but returns a full object\n    return initiative;\n}\n\n// Note - we separate these imports so we can cleanly spy on things in tests\n/**\n * @private\n * Update a Hub Initiative\n * @param initiative\n * @param requestOptions\n */\nasync function updateInitiative(initiative, requestOptions) {\n    // verify that the slug is unique, excluding the current initiative\n    initiative.slug = await getUniqueSlug({ slug: initiative.slug, existingId: initiative.id }, requestOptions);\n    // get the backing item & data\n    const model = await getModel(initiative.id, requestOptions);\n    // create the PropertyMapper\n    const mapper = new PropertyMapper(getPropertyMap());\n    // Note: Although we are fetching the model, and applying changes onto it,\n    // we are not attempting to handle \"concurrent edit\" conflict resolution\n    // but this is where we would apply that sort of logic\n    const modelToUpdate = mapper.objectToModel(initiative, model);\n    // update the backing item\n    const updatedModel = await updateModel(modelToUpdate, requestOptions);\n    // now map back into an initiative and return that\n    let updatedInitiative = mapper.modelToObject(updatedModel, initiative);\n    updatedInitiative = computeProps(model, updatedInitiative, requestOptions);\n    // the casting is needed because modelToObject returns a `Partial<T>`\n    // where as this function returns a `T`\n    return updatedInitiative;\n}\n/**\n * @private\n * Get a Hub Initiative by id or slug\n * @param identifier item id or slug\n * @param requestOptions\n */\nfunction fetchInitiative(identifier, requestOptions) {\n    let getPrms;\n    if (isGuid(identifier)) {\n        // get item by id\n        getPrms = getItem(identifier, requestOptions);\n    }\n    else {\n        getPrms = getItemBySlug(identifier, requestOptions);\n    }\n    return getPrms.then((item) => {\n        if (!item)\n            return null;\n        return convertItemToInitiative(item, requestOptions);\n    });\n}\n/**\n * @private\n * Convert an Hub Initiative Item into a Hub Initiative, fetching any additional\n * information that may be required\n * @param item\n * @param auth\n * @returns\n */\nasync function convertItemToInitiative(item, requestOptions) {\n    const model = await fetchModelFromItem(item, requestOptions);\n    const mapper = new PropertyMapper(getPropertyMap());\n    const prj = mapper.modelToObject(model, {});\n    return computeProps(model, prj, requestOptions);\n}\n\nexport { fetchInitiative as f, updateInitiative as u };\n","/**\n * Default capabilities for a Initiative. If not listed here, the capability will not be available\n * This hash is combined with the capabilities hash stored in the item data. Regardless of what\n * properties are defined in the item data, only the capabilities defined here will be available\n * @private\n */\nconst InitiativeDefaultCapabilities = {\n    overview: true,\n    details: true,\n    settings: true,\n};\n/**\n * List of all the Initiative Capability Permissions\n * These are considered Hub Business Rules and are not intended\n * to be modified by consumers\n * @private\n */\nconst InitiativeCapabilityPermissions = [\n    {\n        entity: \"initiative\",\n        capability: \"overview\",\n        permissions: [\"hub:initiative:view\"],\n    },\n    {\n        entity: \"initiative\",\n        capability: \"details\",\n        permissions: [\"hub:initiative:edit\"],\n    },\n    {\n        entity: \"initiative\",\n        capability: \"settings\",\n        permissions: [\"hub:initiative:edit\"],\n    },\n];\n/**\n * Initiative Permission Policies\n * These define the requirements any user must meet to perform related actions\n * @private\n */\nconst InitiativePermissions = [\n    \"hub:initiative:create\",\n    \"hub:initiative:delete\",\n    \"hub:initiative:edit\",\n    \"hub:initiative:view\",\n];\n/**\n * Initiative permission policies\n * @private\n */\nconst InitiativePermissionPolicies = [\n    {\n        permission: \"hub:initiative:create\",\n        subsystems: [\"projects\"],\n        authenticated: true,\n        privileges: [\"portal:user:createItem\"],\n        licenses: [\"hub-premium\"],\n    },\n    {\n        permission: \"hub:initiative:view\",\n        subsystems: [\"projects\"],\n        authenticated: false,\n        licenses: [\"hub-premium\"],\n    },\n    {\n        permission: \"hub:initiative:edit\",\n        authenticated: true,\n        subsystems: [\"projects\"],\n        entityEdit: true,\n        licenses: [\"hub-premium\"],\n    },\n    {\n        permission: \"hub:initiative:delete\",\n        authenticated: true,\n        subsystems: [\"projects\"],\n        entityOwner: true,\n        licenses: [\"hub-premium\"],\n    },\n];\n\nexport { InitiativePermissionPolicies as I, InitiativePermissions as a, InitiativeCapabilityPermissions as b, InitiativeDefaultCapabilities as c };\n","import { r as registerInstance, h, H as Host, g as getElement } from './index-0d95d9d4.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport { f as fetchHubEntity } from './fetchHubEntity-7424e794.js';\nimport { g as getTypeFromEntity } from './getTypeFromEntity-332e6f28.js';\nimport './index-4e91769f.js';\nimport './HubInitiatives-caeefcab.js';\nimport './getPropertyMap-598a7bb8.js';\nimport './search-3af9e278.js';\nimport './generic-search-069e22da.js';\nimport './get-portal-url-423a76f5.js';\nimport './clean-url-be7c0879.js';\nimport './append-custom-params-fd9b7e72.js';\nimport './request-c15cc2af.js';\nimport './extent-0f42acfc.js';\nimport './get-prop-d82e4fa6.js';\nimport './util-3c40fe6c.js';\nimport './create-7cf3c372.js';\nimport './tslib.es6-3669ad41.js';\nimport './get-f2cd18e7.js';\nimport './get-with-default-6db049d8.js';\nimport './OperationError-85fd80c7.js';\nimport './get-portal-api-url-ccd8fd10.js';\nimport './update-fec93fc5.js';\nimport './fail-safe-1c23dad8.js';\nimport './set-prop-91329c47.js';\nimport './ProjectBusinessRules-bb655b17.js';\nimport './get-item-thumbnail-url-7e5ae2fd.js';\nimport './InitiativeBusinessRules-04858900.js';\nimport './is-guid-8127621d.js';\nimport './fetch-a8e38b36.js';\nimport './_internal-89d3dc92.js';\nimport './helpers-a80c0291.js';\nimport './_enrichments-7716cdcc.js';\nimport './getPortalBaseFromOrgUrl-6a5781aa.js';\nimport './get-portal-06f7947b.js';\nimport './getService-49b539e3.js';\nimport './tslib.es6-b2e8cdb8.js';\nimport './HubSites-95889869.js';\nimport './SiteBusinessRules-05d0a02f.js';\nimport './get-item-home-url-9ff2898b.js';\n\nconst arcgisHubWorkspaceCss = \".sc-arcgis-hub-workspace-h{position:relative;display:block;height:100vh}.workspace__navigation.sc-arcgis-hub-workspace{margin-top:1rem;margin-left:0.5rem;margin-right:2rem}.workspace__panel.sc-arcgis-hub-workspace{height:100%;overflow:auto;background-color:var(--calcite-ui-foreground-2)}.workspace__top-navigation.sc-arcgis-hub-workspace,.workspace__footer.sc-arcgis-hub-workspace{display:flex;height:4rem;align-items:center;justify-content:center;color:var(--calcite-ui-text-inverse);background-color:var(--calcite-ui-text-2)}\";\n\nconst ArcgisHubWorkspace = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.panel = \"overview\";\n    bind(this, 'handleWorkspaceNavigationLinkClicked');\n  }\n  handleEntityChange() {\n    this._entity = this.entity;\n  }\n  async fetchEntity() {\n    let _entity = this.entity;\n    if (!_entity && this.identifier) {\n      this.isLoading = true;\n      _entity = this.context && await fetchHubEntity(this.type, this.identifier, this.context);\n    }\n    this.isLoading = !this.context;\n    this._entity = _entity;\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.element);\n    await this.fetchEntity();\n  }\n  /**\n   * For now this is a simple getter that maps panels to a single\n   * component. Although we'd ideally like panel components to be\n   * generic enough to work for any entity, this may be unrealistic\n   * and we may need to eventually extend this logic to account for\n   * entity-specific panel components\n   */\n  get panelComponent() {\n    const panelToComponent = {\n      overview: 'arcgis-hub-entity-overview',\n      details: 'arcgis-hub-entity-editor',\n      settings: 'arcgis-hub-entity-settings'\n    };\n    return panelToComponent[this.panel] || 'arcgis-hub-workspace-missing-panel';\n  }\n  get _type() {\n    return this.type || getTypeFromEntity(this.entity);\n  }\n  handleWorkspaceNavigationLinkClicked(evt) {\n    this.panel = evt.detail;\n  }\n  renderHeader() {\n    return (h(\"div\", { slot: \"header\" }, h(\"div\", { class: \"workspace__top-navigation\" }, \"This is a top navigation placeholder\"), h(\"arcgis-hub-workspace-header\", { class: \"workspace__header\", entityName: this._entity.name, type: this._type })));\n  }\n  ;\n  renderNavigation() {\n    return (h(\"div\", { class: \"workspace__navigation\", slot: \"primary-panel\" }, h(\"slot\", { name: \"workspace-navigation\" }, h(\"arcgis-hub-workspace-navigation\", { context: this.context, entity: this._entity, onArcgisHubWorkspaceNavigationLinkClicked: this.handleWorkspaceNavigationLinkClicked }))));\n  }\n  ;\n  renderPanel() {\n    const Component = this.panelComponent;\n    return (h(\"div\", { class: \"workspace__panel\" }, h(Component, { context: this.context, entity: this._entity, panel: this.panel })));\n  }\n  renderFooter() {\n    return (h(\"div\", { class: \"workspace__footer\", slot: \"footer\" }, \"This is a footer placeholder\"));\n  }\n  render() {\n    // TODO: Loader should be representative of the UX being loaded\n    return (this.isLoading\n      ? h(\"arcgis-skeleton-loader\", { active: true, class: \"workspace__loader\", rows: 3, \"show-heading\": \"true\" })\n      : h(Host, { \"data-element\": \"workspace\", unthemed: true }, h(\"calcite-shell\", null, this.renderHeader(), this.renderNavigation(), this.renderPanel(), this.renderFooter())));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"entity\": [\"handleEntityChange\"],\n    \"context\": [\"fetchEntity\"]\n  }; }\n};\nArcgisHubWorkspace.style = arcgisHubWorkspaceCss;\n\nexport { ArcgisHubWorkspace as arcgis_hub_workspace };\n","const bind = (context, ...methodNames) => {\n  methodNames.forEach(methodName => {\n    if (typeof context[methodName] !== 'function') {\n      throw new Error(`Cannot bind context. ${methodName} must be a function`);\n    }\n    context[methodName] = context[methodName].bind(context);\n  });\n};\n\nexport { bind as b };\n","import { g as getFamily, m as getHubRelativeUrl } from './_internal-89d3dc92.js';\nimport { k as computeProps, a as getItemBySlug, f as fetchModelFromItem, l as fetchModelResources, P as PropertyMapper, h as getPropertyMap, E as EntityResourceMap } from './getPropertyMap-598a7bb8.js';\nimport { f as fetchItemEnrichments } from './_enrichments-7716cdcc.js';\nimport { p as parseInclude } from './HubSites-95889869.js';\nimport { u as unique } from './util-3c40fe6c.js';\nimport { g as getProp } from './get-prop-d82e4fa6.js';\nimport { a as getItemThumbnailUrl } from './get-item-thumbnail-url-7e5ae2fd.js';\nimport { g as getItemHomeUrl } from './get-item-home-url-9ff2898b.js';\nimport { i as isGuid } from './is-guid-8127621d.js';\nimport { g as getItem } from './get-f2cd18e7.js';\nimport { m as mapBy } from './SiteBusinessRules-05d0a02f.js';\n\n/**\n * @private\n * Get a Hub Project by id or slug\n * @param identifier item id or slug\n * @param requestOptions\n */\nasync function fetchProject(identifier, requestOptions) {\n    let getPrms;\n    if (isGuid(identifier)) {\n        // get item by id\n        getPrms = getItem(identifier, requestOptions);\n    }\n    else {\n        getPrms = getItemBySlug(identifier, requestOptions);\n    }\n    return getPrms.then((item) => {\n        if (!item)\n            return null;\n        return convertItemToProject(item, requestOptions);\n    });\n}\n/**\n * @private\n * Convert an Hub Project Item into a Hub Project, fetching any additional\n * information that may be required\n * @param item\n * @param auth\n * @returns\n */\nasync function convertItemToProject(item, requestOptions) {\n    const model = await fetchModelFromItem(item, requestOptions);\n    // Fetch resources based on above obj\n    model.resources = await fetchModelResources(item, EntityResourceMap, requestOptions);\n    // TODO: In the future we will handle the boundary fetching from resource\n    const mapper = new PropertyMapper(getPropertyMap());\n    const prj = mapper.modelToObject(model, {});\n    return computeProps(model, prj, requestOptions);\n}\n/**\n * @private\n * Fetch project specific enrichments\n * @param item\n * @param include\n * @param requestOptions\n * @returns\n */\nasync function enrichProjectSearchResult(item, include, requestOptions) {\n    // Create the basic structure\n    const result = {\n        access: item.access,\n        id: item.id,\n        type: item.type,\n        name: item.title,\n        owner: item.owner,\n        typeKeywords: item.typeKeywords,\n        tags: item.tags,\n        categories: item.categories,\n        summary: item.snippet || item.description,\n        createdDate: new Date(item.created),\n        createdDateSource: \"item.created\",\n        updatedDate: new Date(item.modified),\n        updatedDateSource: \"item.modified\",\n        family: getFamily(item.type),\n        links: {\n            self: \"not-implemented\",\n            siteRelative: \"not-implemented\",\n            thumbnail: \"not-implemented\",\n        },\n    };\n    // default includes\n    const DEFAULTS = [];\n    // merge includes\n    include = [...DEFAULTS, ...include].filter(unique);\n    // Parse the includes into a valid set of enrichments\n    const specs = include.map(parseInclude);\n    // Extract out the low-level enrichments needed\n    const enrichments = mapBy(\"enrichment\", specs).filter(unique);\n    // fetch the enrichments\n    let enriched = {};\n    if (enrichments.length) {\n        // TODO: Look into caching for the requests in fetchItemEnrichments\n        enriched = await fetchItemEnrichments(item, enrichments, requestOptions);\n    }\n    // map the enriched props onto the result\n    specs.forEach((spec) => {\n        result[spec.prop] = getProp(enriched, spec.path);\n    });\n    // Handle links\n    // TODO: Link handling should be an enrichment\n    result.links.thumbnail = getItemThumbnailUrl(item, requestOptions);\n    result.links.self = getItemHomeUrl(result.id, requestOptions);\n    result.links.siteRelative = getHubRelativeUrl(result.type, result.id, item.typeKeywords);\n    return result;\n}\n\nexport { enrichProjectSearchResult as e, fetchProject as f };\n","import { f as fetchInitiative } from './HubInitiatives-caeefcab.js';\nimport { f as fetchProject } from './fetch-a8e38b36.js';\nimport { f as fetchSite } from './HubSites-95889869.js';\n\n/**\n * Fetch a Hub entity by identifier (id or slug)\n * @param type\n * @param identifier\n * @param context\n * @returns\n */\nasync function fetchHubEntity(type, identifier, context) {\n    let result;\n    switch (type) {\n        case \"project\":\n            result = await fetchProject(identifier, context.requestOptions);\n            break;\n        case \"site\":\n            result = await fetchSite(identifier, context.hubRequestOptions);\n            break;\n        case \"initiative\":\n            result = await fetchInitiative(identifier, context.requestOptions);\n            break;\n        case \"page\":\n            throw new Error(`FetchPage not implemented`);\n    }\n    return result;\n}\n\nexport { fetchHubEntity as f };\n","import { a as getPortalUrl } from './get-portal-api-url-ccd8fd10.js';\n\n/**\n * Return the URL of the item's page in the Portal Home application\n * @param itemId The item's ID\n * @param portalUrlOrObject a portal base or API URL, a portal object, or request options containing either of those\n * @returns URL to the item's data REST end point, defaults to `https://www.arcgis.com/home/item.html?id={item.id}`\n */\nfunction getItemHomeUrl(itemId, portalUrlOrObject) {\n    const portalUrl = getPortalUrl(portalUrlOrObject);\n    return `${portalUrl}/home/item.html?id=${itemId}`;\n}\n\nexport { getItemHomeUrl as g };\n","// import { HubEntity } from \"./types/HubEntity\";\n// import { HubEntityType } from \"./types/HubEntityType\";\n/**\n * Given a HubEntity, return it's HubEntityType\n * @param entity\n * @returns\n */\nfunction getTypeFromEntity(entity) {\n    let type;\n    switch (entity.type) {\n        case \"Hub Site Application\":\n        case \"Site Application\":\n            type = \"site\";\n            break;\n        case \"Hub Page\":\n        case \"Site Page\":\n            type = \"page\";\n            break;\n        case \"Hub Project\":\n            type = \"project\";\n            break;\n        case \"Hub Initiative\":\n            type = \"initiative\";\n            break;\n    }\n    return type;\n}\n\nexport { getTypeFromEntity as g };\n"],"names":["getPropertyMap","map","getBasePropertyMap","push","objectKey","modelKey","computeProps","model","initiative","requestOptions","_a","token","authentication","thumbnailUrl","getItemThumbnailUrl","item","createdDate","Date","created","createdDateSource","updatedDate","modified","updatedDateSource","capabilities","processEntityCapabilities","data","settings","InitiativeDefaultCapabilities","updateInitiative","getUniqueSlug","slug","existingId","id","getModel","mapper","PropertyMapper","modelToUpdate","objectToModel","updateModel","updatedModel","updatedInitiative","modelToObject","fetchInitiative","identifier","isGuid","getItem","getItemBySlug","then","convertItemToInitiative","fetchModelFromItem","prj","overview","details","InitiativeCapabilityPermissions","entity","capability","permissions","InitiativePermissions","InitiativePermissionPolicies","permission","subsystems","authenticated","privileges","licenses","entityEdit","entityOwner","ArcgisHubWorkspace","hostRef","registerInstance","this","panel","bind","_entity","isLoading","context","fetchHubEntity","type","intlManager","element","intl","fetchEntity","getTypeFromEntity","evt","detail","h","slot","class","entityName","name","_type","onArcgisHubWorkspaceNavigationLinkClicked","handleWorkspaceNavigationLinkClicked","Component","panelComponent","active","rows","Host","unthemed","renderHeader","renderNavigation","renderPanel","renderFooter","getElement","style","methodNames","forEach","methodName","Error","fetchProject","getPrms","convertItemToProject","fetchModelResources","EntityResourceMap","resources","enrichProjectSearchResult","include","result","access","title","owner","typeKeywords","tags","categories","summary","snippet","description","family","getFamily","links","self","siteRelative","thumbnail","filter","unique","specs","parseInclude","enrichments","mapBy","enriched","length","fetchItemEnrichments","spec","prop","getProp","path","getItemHomeUrl","getHubRelativeUrl","fetchSite","hubRequestOptions","itemId","portalUrlOrObject","portalUrl","getPortalUrl"],"sourceRoot":""}