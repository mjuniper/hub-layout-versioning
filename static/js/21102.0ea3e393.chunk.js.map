{"version":3,"file":"static/js/21102.0ea3e393.chunk.js","mappings":"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","sources":["../node_modules/@esri/hub-components/dist/esm/arcgis-hub-image-upload.entry.js","../node_modules/@esri/hub-components/dist/esm/context-7d8f7366.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, F as Fragment, g as getElement } from './index-0d95d9d4.js';\nimport { b as bind } from './context-7d8f7366.js';\nimport { i as intlManager } from './intl-manager-821aea3b.js';\nimport './index-4e91769f.js';\n\nconst arcgisHubImageUploadCss = \".image-upload__title{margin-bottom:0px;font-size:var(--calcite-font-size-2);line-height:1.5rem}.image-upload__content{transition:all 200ms ease-in-out;border:1px solid var(--calcite-ui-border-3);box-sizing:border-box;background-color:var(--calcite-ui-background);padding-left:2rem;padding-right:2rem;padding-top:1rem;padding-bottom:1.5rem}.image-upload__content--with-map{min-height:400px}.image-upload__content--no-padding{padding:0px}.image-upload__canvas{left:-10000px;visibility:hidden;position:fixed}.or-container{margin-top:1rem;margin-bottom:1rem;text-align:center;font-weight:var(--calcite-font-weight-medium)}.or-container:before,.or-container:after{content:\\\"\\\";border-top:solid 1px var(--calcite-ui-border-input);width:15%;height:1px;z-index:1;display:inline-block;vertical-align:middle}.or-wrapper{padding-left:0.5rem;padding-right:0.5rem}.image-upload__from-map-button{border:1px solid var(--calcite-ui-foreground-3);background-color:var(--calcite-ui-foreground-1);padding:1rem;text-align:center}.image-upload__from-map-button:hover{border:1px solid var(--calcite-ui-brand)}.image-upload__from-map-title{display:inline-block}.from-map-title-wrapper{display:flex;align-items:center}.from-map-icon{margin-right:0.5rem}.image-upload__from-map-desc{margin:0px;font-size:var(--calcite-font-size-1);line-height:1.5rem}.hide{display:none}.button-container{margin-top:0.5rem;display:flex;width:100%;flex-direction:row;justify-content:space-between;padding-top:1.25rem}.error{background-color:#FFF1EF;border-color:var(--calcite-ui-danger)}\";\n\nconst ArcgisHubImageUpload = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisImageUploadCancel = createEvent(this, \"arcgisImageUploadCancel\", 7);\n    this.arcgisImageUploadError = createEvent(this, \"arcgisImageUploadError\", 7);\n    this.arcgisImageUploadSave = createEvent(this, \"arcgisImageUploadSave\", 7);\n    /**\n     * Flag to indicate whether or not to auto zoom to fit the image into the frame\n     */\n    this.zoomToFit = true;\n    /**\n     * Maximum width for the scaled image output\n     */\n    this.maxWidth = 300;\n    /**\n     * Maximum height for the scaled image output\n     */\n    this.maxHeight = 300;\n    /**\n     * Flag to indicate to auto fill background with the color #efefef\n     */\n    this.fillBackground = false;\n    /**\n     * Desired height of the output image\n     */\n    this.height = window.innerWidth < 412 ? 200 : 300;\n    /**\n     * Number to indicate the ratio of the output image width relative to the height\n     */\n    this.aspectRatio = 1;\n    this.inline = false;\n    this.saving = false;\n    this.editExisting = false;\n    this.isModified = false;\n    this.activeStep = \"file\";\n    this.hasError = false;\n    this.imageFormat = \"png\";\n    this.fileName = \"\";\n    this.triggerErrorState = () => {\n      this.hasError = true;\n      setTimeout(() => {\n        this.resetErrorState();\n      }, 3000);\n    };\n    this.resetErrorState = () => {\n      this.hasError = false;\n    };\n    this.handleCancel = () => {\n      this.arcgisImageUploadCancel.emit();\n    };\n    this.handleChooseDiffClick = () => {\n      this.activeStep = \"file\";\n      this.previewSrc = \"\";\n      this.editExisting = false;\n    };\n    this.handleSaveClick = async () => {\n      if (this.activeStep === \"file\") {\n        return;\n      }\n      this.saving = true;\n      const data = await this.getCanvasImage();\n      this.arcgisImageUploadSave.emit(data);\n      if (this.inline) {\n        this.resetState();\n      }\n    };\n    bind(this, 'handleCancel', 'handleChooseDiffClick', 'handleSaveClick', 'getEditStepRef', 'getCanvasRef');\n  }\n  async componentWillLoad() {\n    this.intl = await intlManager.loadIntlForComponent(this.el);\n  }\n  handleFileChange(evt) {\n    const { fileName, dataURL } = evt.detail;\n    this.fileName = fileName;\n    this.previewSrc = dataURL;\n    this.activeStep = \"edit\";\n    this.resetErrorState();\n  }\n  handleInvalidFile() {\n    this.arcgisImageUploadError.emit(\"invalid file type.\");\n    this.triggerErrorState();\n  }\n  handleImageChange() {\n    this.isModified = true;\n  }\n  handleActiveChange() {\n    if (!this.active) {\n      this.resetState();\n    }\n  }\n  resetState() {\n    this.activeStep = \"file\";\n    this.saving = false;\n    this.isModified = false;\n    this.previewSrc = \"\";\n    this.editExisting = false;\n    this.resetErrorState();\n  }\n  dataURIToBlob(dataURI) {\n    const byteString = atob(dataURI.split(\",\")[1]);\n    const mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const uintArray = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < byteString.length; i++) {\n      uintArray[i] = byteString.charCodeAt(i);\n    }\n    const blob = new Blob([arrayBuffer], {\n      type: mimeString\n    });\n    return blob;\n  }\n  drawImage({ selectionX, selectionY, selectionWidth, selectionHeight, canvasWidth, canvasHeight, minWidth, minHeight, drawDimensions }, scaleFactor, img, context) {\n    this.canvasEl.width = canvasWidth < minWidth ? minWidth : canvasWidth * scaleFactor;\n    this.canvasEl.height = canvasHeight < minHeight ? minHeight : canvasHeight * scaleFactor;\n    if (this.maxWidth) {\n      if (this.canvasEl.width > this.maxWidth) {\n        this.canvasEl.width = this.maxWidth;\n      }\n    }\n    if (this.maxHeight) {\n      if (this.canvasEl.height > this.maxHeight) {\n        this.canvasEl.height = this.maxHeight;\n      }\n    }\n    const left = drawDimensions.left * this.canvasEl.width;\n    const top = drawDimensions.top * this.canvasEl.height;\n    const width = drawDimensions.width * this.canvasEl.width;\n    const height = drawDimensions.height * this.canvasEl.height;\n    if (this.fillBackground) {\n      context.fillStyle = \"#efefef\";\n      context.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\n    }\n    context.drawImage(img, selectionX, selectionY, selectionWidth, selectionHeight, left, top, width, height);\n    const base64 = this.canvasEl.toDataURL(\"image/png\");\n    const blob = this.dataURIToBlob(base64);\n    return {\n      base64,\n      blob\n    };\n  }\n  async getScaledImageData(img) {\n    const context = this.canvasEl.getContext(\"2d\");\n    const drawParameters = await this.editStepEl.getDrawParameters();\n    let results;\n    function retry() {\n      context.clearRect(0, 0, this.canvasEl.width, this.canvasEl.height);\n      return this.drawImage(drawParameters, 1600 / img.width, img, context);\n    }\n    try {\n      results = this.drawImage(drawParameters, 1, img, context);\n      if (results.blob.size > 10000000 || results.blob.size === 0) {\n        results = retry();\n      }\n    }\n    catch (e) {\n      if (e.name !== \"NS_ERROR_FAILURE\") {\n        this.arcgisImageUploadError.emit(\"unable to save the image provided.\");\n      }\n      else {\n        results = retry();\n      }\n    }\n    return {\n      blob: results === null || results === void 0 ? void 0 : results.blob,\n      base64: results === null || results === void 0 ? void 0 : results.base64,\n      format: this.imageFormat,\n      fileName: this.fileName\n    };\n  }\n  getCanvasImage() {\n    return new Promise((resolve) => {\n      const img = new Image();\n      if (this.previewSrc.indexOf(\"arcgis.com\") > -1) {\n        img.crossOrigin = \"Anonymous\";\n      }\n      img.onload = () => {\n        const properAspectRatio = Math.abs(this.aspectRatio - img.width / img.height) < 0.01;\n        if (properAspectRatio && !this.isModified) {\n          resolve({\n            blob: this.dataURIToBlob(this.previewSrc),\n            base64: this.previewSrc,\n            format: this.imageFormat,\n            fileName: this.fileName\n          });\n          return;\n        }\n        resolve(this.getScaledImageData(img));\n      };\n      img.src = this.previewSrc;\n    });\n  }\n  getEditStepRef(el) {\n    this.editStepEl = el;\n  }\n  getCanvasRef(el) {\n    this.canvasEl = el;\n  }\n  renderButtons() {\n    const buttons = (h(Fragment, null, (this.activeStep === \"edit\") && (h(\"calcite-button\", { appearance: \"transparent\", disabled: this.saving, \"icon-start\": \"chevron-left\", onClick: this.handleChooseDiffClick, slot: \"back\", width: this.inline ? \"auto\" : \"full\" }, this.intl.t('chooseDiff'))), h(\"calcite-button\", { appearance: \"outline\", class: {\n        hide: this.inline\n      }, disabled: this.saving, onClick: this.handleCancel, slot: \"secondary\", width: \"full\" }, this.intl.t('cancel')), h(\"calcite-button\", { appearance: \"solid\", class: {\n        hide: this.inline && this.activeStep === \"file\"\n      }, loading: this.saving, onClick: this.handleSaveClick, slot: \"primary\", width: this.inline ? \"auto\" : \"full\" }, this.intl.t('done'))));\n    return this.inline ? (h(\"div\", { class: \"button-container\" }, buttons)) : buttons;\n  }\n  renderContent() {\n    return (h(Fragment, null, h(\"h3\", { \"aria-label\": this.modalTitle, class: \"image-upload__title\", id: \"image-upload-modal-title\", slot: \"header\" }, this.modalTitle), h(\"div\", { class: {\n        [\"image-upload__content\"]: true,\n        error: this.hasError\n      }, slot: \"content\" }, this.activeStep === \"file\" && (h(\"div\", null, h(\"arcgis-hub-image-upload-file-step\", { sizeDescription: this.sizeDescription }))), this.activeStep === \"edit\" && (h(\"arcgis-hub-image-upload-edit-step\", { aspectRatio: this.aspectRatio, height: this.height, previewSrc: this.previewSrc, ref: this.getEditStepRef, zoomToFit: this.zoomToFit })), this.activeStep === \"edit\" && (h(\"canvas\", { class: \"image-upload__canvas\", ref: this.getCanvasRef }))), this.renderButtons()));\n  }\n  render() {\n    return this.inline ? (h(Fragment, null, this.renderContent())) : (h(\"calcite-modal\", { \"aria-labelledby\": \"image-upload-modal-title\", \"aria-modal\": \"true\", disableOutsideClose: true, intlClose: this.intl.t('close'), onCalciteModalClose: this.handleCancel, open: this.active, role: \"dialog\", width: 650 }, this.renderContent()));\n  }\n  static get assetsDirs() { return [\"locales\"]; }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"active\": [\"handleActiveChange\"]\n  }; }\n};\nArcgisHubImageUpload.style = arcgisHubImageUploadCss;\n\nexport { ArcgisHubImageUpload as arcgis_hub_image_upload };\n","const bind = (context, ...methodNames) => {\n  methodNames.forEach(methodName => {\n    if (typeof context[methodName] !== 'function') {\n      throw new Error(`Cannot bind context. ${methodName} must be a function`);\n    }\n    context[methodName] = context[methodName].bind(context);\n  });\n};\n\nexport { bind as b };\n"],"names":["ArcgisHubImageUpload","hostRef","registerInstance","this","arcgisImageUploadCancel","createEvent","arcgisImageUploadError","arcgisImageUploadSave","zoomToFit","maxWidth","maxHeight","fillBackground","height","window","innerWidth","aspectRatio","inline","saving","editExisting","isModified","activeStep","hasError","imageFormat","fileName","triggerErrorState","setTimeout","resetErrorState","handleCancel","emit","handleChooseDiffClick","previewSrc","handleSaveClick","getCanvasImage","data","resetState","bind","intlManager","el","intl","evt","detail","dataURL","active","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","length","uintArray","Uint8Array","i","charCodeAt","Blob","type","scaleFactor","img","context","selectionX","selectionY","selectionWidth","selectionHeight","canvasWidth","canvasHeight","minWidth","minHeight","drawDimensions","canvasEl","width","left","top","fillStyle","fillRect","drawImage","base64","toDataURL","blob","dataURIToBlob","retry","clearRect","drawParameters","getContext","editStepEl","getDrawParameters","results","size","e","name","format","Promise","resolve","Image","indexOf","crossOrigin","onload","Math","abs","getScaledImageData","src","buttons","h","Fragment","appearance","disabled","onClick","slot","t","class","hide","loading","modalTitle","id","sizeDescription","ref","getEditStepRef","getCanvasRef","renderButtons","renderContent","disableOutsideClose","intlClose","onCalciteModalClose","open","role","getElement","style","methodNames","forEach","methodName","Error"],"sourceRoot":""}