{"version":3,"file":"static/js/83650.5a4ba159.chunk.js","mappings":"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","sources":["../.yalc/@esri/hub-components/dist/esm/access-c6f01a39.js","../.yalc/@esri/hub-components/dist/esm/append-custom-params-fd9b7e72.js","../.yalc/@esri/hub-components/dist/esm/clean-url-be7c0879.js","../.yalc/@esri/hub-components/dist/esm/create-7cf3c372.js","../.yalc/@esri/hub-components/dist/esm/generic-search-069e22da.js","../.yalc/@esri/hub-components/dist/esm/get-859a2960.js","../.yalc/@esri/hub-components/dist/esm/get-f2cd18e7.js","../.yalc/@esri/hub-components/dist/esm/get-portal-url-423a76f5.js","../.yalc/@esri/hub-components/dist/esm/get-prop-d82e4fa6.js","../.yalc/@esri/hub-components/dist/esm/search-3af9e278.js","../.yalc/@esri/hub-components/dist/esm/tslib.es6-3669ad41.js","../.yalc/@esri/hub-components/dist/esm/util-2150bd9e.js"],"sourcesContent":["import { _ as __assign } from './tslib.es6-3669ad41.js';\nimport { g as getPortalUrl } from './get-portal-url-423a76f5.js';\nimport { g as getGroup } from './get-859a2960.js';\nimport { r as request } from './request-c15cc2af.js';\n\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nfunction getSharingUrl(requestOptions) {\n    var username = requestOptions.authentication.username;\n    var owner = requestOptions.owner || username;\n    return getPortalUrl(requestOptions) + \"/content/users/\" + encodeURIComponent(owner) + \"/items/\" + requestOptions.id + \"/share\";\n}\nfunction isItemOwner(requestOptions) {\n    var username = requestOptions.authentication.username;\n    var owner = requestOptions.owner || username;\n    return owner === username;\n}\n/**\n * Check it the user is a full org_admin\n * @param requestOptions\n * @returns Promise resolving in a boolean indicating if the user is an ArcGIS Organization administrator\n */\nfunction isOrgAdmin(requestOptions) {\n    var session = requestOptions.authentication;\n    return session.getUser(requestOptions).then(function (user) {\n        return user && user.role === \"org_admin\" && !user.roleId;\n    });\n}\n/**\n * Get the User Membership for a particular group. Use this if all you have is the groupId.\n * If you have the group object, check the `userMembership.memberType` property instead of calling this method.\n *\n * @param requestOptions\n * @returns A Promise that resolves with \"owner\" | \"admin\" | \"member\" | \"nonmember\"\n */\nfunction getUserMembership(requestOptions) {\n    // fetch the group...\n    return getGroup(requestOptions.groupId, requestOptions)\n        .then(function (group) {\n        return group.userMembership.memberType;\n    })\n        .catch(function () {\n        return \"none\";\n    });\n}\n\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * ```js\n * import { setItemAccess } from \"@esri/arcgis-rest-portal\";\n * //\n * setItemAccess({\n *   id: \"abc123\",\n *   access: \"public\", // 'org' || 'private'\n *   authentication: session\n * })\n * ```\n * Change who is able to access an item.\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction setItemAccess(requestOptions) {\n    var url = getSharingUrl(requestOptions);\n    if (isItemOwner(requestOptions)) {\n        // if the user owns the item, proceed\n        return updateItemAccess(url, requestOptions);\n    }\n    else {\n        // otherwise we need to check to see if they are an organization admin\n        return isOrgAdmin(requestOptions).then(function (admin) {\n            if (admin) {\n                return updateItemAccess(url, requestOptions);\n            }\n            else {\n                // if neither, updating the sharing isnt possible\n                throw Error(\"This item can not be shared by \" + requestOptions.authentication.username + \". They are neither the item owner nor an organization admin.\");\n            }\n        });\n    }\n}\nfunction updateItemAccess(url, requestOptions) {\n    requestOptions.params = __assign({ org: false, everyone: false }, requestOptions.params);\n    // if the user wants to make the item private, it needs to be unshared from any/all groups as well\n    if (requestOptions.access === \"private\") {\n        requestOptions.params.groups = \" \";\n    }\n    if (requestOptions.access === \"org\") {\n        requestOptions.params.org = true;\n    }\n    // if sharing with everyone, share with the entire organization as well.\n    if (requestOptions.access === \"public\") {\n        // this is how the ArcGIS Online Home app sets public access\n        // setting org = true instead of account = true will cancel out all sharing\n        requestOptions.params.account = true;\n        requestOptions.params.everyone = true;\n    }\n    return request(url, requestOptions);\n}\n\nexport { getUserMembership as g, setItemAccess as s };\n","import { _ as __assign } from './request-c15cc2af.js';\n\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper for methods with lots of first order request options to pass through as request parameters.\n */\nfunction appendCustomParams(customOptions, keys, baseOptions) {\n    var requestOptionsKeys = [\n        \"params\",\n        \"httpMethod\",\n        \"rawResponse\",\n        \"authentication\",\n        \"portal\",\n        \"fetch\",\n        \"maxUrlLength\",\n        \"headers\"\n    ];\n    var options = __assign(__assign({ params: {} }, baseOptions), customOptions);\n    // merge all keys in customOptions into options.params\n    options.params = keys.reduce(function (value, key) {\n        if (customOptions[key] || typeof customOptions[key] === \"boolean\") {\n            value[key] = customOptions[key];\n        }\n        return value;\n    }, options.params);\n    // now remove all properties in options that don't exist in IRequestOptions\n    return requestOptionsKeys.reduce(function (value, key) {\n        if (options[key]) {\n            value[key] = options[key];\n        }\n        return value;\n    }, {});\n}\n\nexport { appendCustomParams as a };\n","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper method to ensure that user supplied urls don't include whitespace or a trailing slash.\n */\nfunction cleanUrl(url) {\n    // Guard so we don't try to trim something that's not a string\n    if (typeof url !== \"string\") {\n        return url;\n    }\n    // trim leading and trailing spaces, but not spaces inside the url\n    url = url.trim();\n    // remove the trailing slash to the url if one was included\n    if (url[url.length - 1] === \"/\") {\n        url = url.slice(0, -1);\n    }\n    return url;\n}\n\nexport { cleanUrl as c };\n","import { _ as __assign } from './tslib.es6-3669ad41.js';\nimport { g as getPortalUrl } from './get-portal-url-423a76f5.js';\nimport { d as determineOwner, s as serializeItem, i as isBBox, b as bboxToString } from './get-f2cd18e7.js';\nimport { a as appendCustomParams } from './append-custom-params-fd9b7e72.js';\nimport { r as request } from './request-c15cc2af.js';\n\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * ```js\n * import { createFolder } from \"@esri/arcgis-rest-portal\";\n * //\n * createFolder({\n *   title: 'Map Collection',\n *   authentication: userSession\n * })\n *   .then(response)\n * ```\n * Create a folder. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/create-folder.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that resolves with folder details once the folder has been created\n */\nfunction createFolder(requestOptions) {\n    return determineOwner(requestOptions).then(function (owner) {\n        var baseUrl = getPortalUrl(requestOptions) + \"/content/users/\" + owner;\n        var url = baseUrl + \"/createFolder\";\n        requestOptions.params = __assign({ title: requestOptions.title }, requestOptions.params);\n        return request(url, requestOptions);\n    });\n}\n/**\n * ```js\n * import { createItemInFolder } from \"@esri/arcgis-rest-portal\";\n * //\n * createItemInFolder({\n *   item: {\n *     title: \"The Amazing Voyage\",\n *     type: \"Web Map\"\n *   },\n *   folderId: 'fe8',\n *   authentication\n * })\n * ```\n * Create an item in a folder. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/add-item.htm) for more information.\n *\n * @param requestOptions = Options for the request\n */\nfunction createItemInFolder(requestOptions) {\n    if (requestOptions.multipart && !requestOptions.filename) {\n        return Promise.reject(new Error(\"The filename is required for a multipart request.\"));\n    }\n    return determineOwner(requestOptions).then(function (owner) {\n        var baseUrl = getPortalUrl(requestOptions) + \"/content/users/\" + owner;\n        var url = baseUrl + \"/addItem\";\n        if (requestOptions.folderId) {\n            url = baseUrl + \"/\" + requestOptions.folderId + \"/addItem\";\n        }\n        requestOptions.params = __assign(__assign({}, requestOptions.params), serializeItem(requestOptions.item));\n        // convert extent, if present, into a string from bbox\n        // processParams was previously doing this sort of work,\n        // however now we need to let array of arrays through\n        // Thus for extents we need to move this logic here\n        if (requestOptions.params.extent && isBBox(requestOptions.params.extent)) {\n            requestOptions.params.extent = bboxToString(requestOptions.params.extent);\n        }\n        // serialize the item into something Portal will accept\n        var options = appendCustomParams(requestOptions, [\n            \"owner\",\n            \"folderId\",\n            \"file\",\n            \"dataUrl\",\n            \"text\",\n            \"async\",\n            \"multipart\",\n            \"filename\",\n            \"overwrite\"\n        ], {\n            params: __assign({}, requestOptions.params)\n        });\n        return request(url, options);\n    });\n}\n/**\n * ```js\n * import { createItem } from \"@esri/arcgis-rest-portal\";\n * //\n * createItem({\n *   item: {\n *     title: \"The Amazing Voyage\",\n *     type: \"Web Map\"\n *   },\n *   authentication\n * })\n * ```\n * Create an Item in the user's root folder. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/add-item.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that creates an item.\n */\nfunction createItem(requestOptions) {\n    // delegate to createItemInFolder placing in the root of the filestore\n    var options = __assign({ folderId: null }, requestOptions);\n    return createItemInFolder(options);\n}\n\nexport { createFolder as a, createItem as c };\n","import { g as getPortalUrl } from './get-portal-url-423a76f5.js';\nimport { a as appendCustomParams } from './append-custom-params-fd9b7e72.js';\nimport { r as request } from './request-c15cc2af.js';\n\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Method used internally to surface messages to developers.\n */\nfunction warn(message) {\n    if (console && console.warn) {\n        console.warn.apply(console, [message]);\n    }\n}\n\n/* Copyright (c) 2018-2021 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * `SearchQueryBuilder` can be used to construct the `q` param for\n * [`searchItems`](/arcgis-rest-js/api/portal/searchItems#searchItems-search) or\n * [`searchGroups`](/arcgis-rest-js/api/portal/searchGroups#searchGroups-search).\n * By chaining methods, it helps build complex search queries.\n *\n * ```js\n * const startDate = new Date(\"2020-01-01\");\n * const endDate = new Date(\"2020-09-01\");\n * const query = new SearchQueryBuilder()\n *  .match(\"Patrick\")\n *  .in(\"owner\")\n *  .and()\n *  .from(startDate)\n *  .to(endDate)\n *  .in(\"created\")\n *  .and()\n *  .startGroup()\n *    .match(\"Web Mapping Application\")\n *    .in(\"type\")\n *    .or()\n *    .match(\"Mobile Application\")\n *    .in(\"type\")\n *    .or()\n *    .match(\"Application\")\n *    .in(\"type\")\n *  .endGroup()\n *  .and()\n *  .match(\"Demo App\");\n *\n * searchItems(query).then((res) => {\n *   console.log(res.results);\n * });\n * ```\n *\n * Will search for items matching\n * ```\n * \"owner: Patrick AND created:[1577836800000 TO 1598918400000] AND (type:\"Web Mapping Application\" OR type:\"Mobile Application\" OR type:Application) AND Demo App\"\n * ```\n */\nvar SearchQueryBuilder = /** @class */ (function () {\n    /**\n     * @param q An existing query string to start building from.\n     */\n    function SearchQueryBuilder(q) {\n        if (q === void 0) { q = \"\"; }\n        this.termStack = [];\n        this.rangeStack = [];\n        this.openGroups = 0;\n        this.q = q;\n    }\n    /**\n     * Defines strings to search for.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"My Layer\")\n     * ```\n     *\n     * @param terms strings to search for.\n     */\n    SearchQueryBuilder.prototype.match = function () {\n        var terms = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            terms[_i] = arguments[_i];\n        }\n        this.termStack = this.termStack.concat(terms);\n        return this;\n    };\n    /**\n     * Defines fields to search in. You can pass `\"*\"` or call this method without arguments to search a default set of fields\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"My Layer\")\n     *   .in(\"title\")\n     * ```\n     *\n     * @param field The field to search for the previous match in.\n     */\n    SearchQueryBuilder.prototype.in = function (field) {\n        var fn = \"`in(\" + (field ? \"\\\"\" + field + \"\\\"\" : \"\") + \")`\";\n        if (!this.hasRange && !this.hasTerms) {\n            warn(\n            // apparently-p-rettier-ignore causes some\n            fn + \" was called with no call to `match(...)` or `from(...)`/`to(...)`. Your query was not modified.\");\n            return this;\n        }\n        if (field && field !== \"*\") {\n            this.q += field + \":\";\n        }\n        return this.commit();\n    };\n    /**\n     * Starts a new search group.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .startGroup()\n     *     .match(\"Lakes\")\n     *     .in(\"title\")\n     *   .endGroup()\n     *   .or()\n     *   .startGroup()\n     *     .match(\"Rivers\")\n     *     .in(\"title\")\n     *   .endGroup()\n     * ```\n     */\n    SearchQueryBuilder.prototype.startGroup = function () {\n        this.commit();\n        if (this.openGroups > 0) {\n            this.q += \" \";\n        }\n        this.openGroups++;\n        this.q += \"(\";\n        return this;\n    };\n    /**\n     * Ends a search group.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .startGroup()\n     *     .match(\"Lakes\")\n     *     .in(\"title\")\n     *   .endGroup()\n     *   .or()\n     *   .startGroup()\n     *     .match(\"Rivers\")\n     *     .in(\"title\")\n     *   .endGroup()\n     * ```\n     */\n    SearchQueryBuilder.prototype.endGroup = function () {\n        if (this.openGroups <= 0) {\n            warn(\"`endGroup(...)` was called without calling `startGroup(...)` first. Your query was not modified.\");\n            return this;\n        }\n        this.commit();\n        this.openGroups--;\n        this.q += \")\";\n        return this;\n    };\n    /**\n     * Joins two sets of queries with an `AND` clause.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Lakes\")\n     *   .in(\"title\")\n     *   .and()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     * ```\n     */\n    SearchQueryBuilder.prototype.and = function () {\n        return this.addModifier(\"and\");\n    };\n    /**\n     * Joins two sets of queries with an `OR` clause.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Lakes\")\n     *   .in(\"title\")\n     *   .or()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     * ```\n     */\n    SearchQueryBuilder.prototype.or = function () {\n        return this.addModifier(\"or\");\n    };\n    /**\n     * Joins two sets of queries with a `NOT` clause. Another option for filtering results is the [prohibit operator '-'](https://developers.arcgis.com/rest/users-groups-and-items/search-reference.htm#ESRI_SECTION1_5C6C35DB9E4A4F4492C5B937BDA2BF67).\n     *\n     * ```js\n     * // omit results with \"Rivers\" in their title\n     * const query = new SearchQueryBuilder()\n     *   .not()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     *\n     * // equivalent\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Rivers\")\n     *   .in(\"-title\")\n     * ```\n     */\n    SearchQueryBuilder.prototype.not = function () {\n        return this.addModifier(\"not\");\n    };\n    /**\n     * Begins a new range query.\n     *\n     * ```js\n     *\n     * const NEWYEARS = new Date(\"2020-01-01\")\n     * const TODAY = new Date()\n     *\n     * const query = new SearchQueryBuilder()\n     *   .from(NEWYEARS)\n     *   .to(TODAY)\n     *   .in(\"created\")\n     * ```\n     */\n    SearchQueryBuilder.prototype.from = function (term) {\n        if (this.hasTerms) {\n            warn(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            \"`from(...)` is not allowed after `match(...)` try using `.from(...).to(...).in(...)`. Optionally, you may see this because dates are incorrectly formatted. Dates should be a primative Date value, aka a number in milliseconds or Date object, ie new Date(\\\"2020-01-01\\\").  Your query was not modified.\");\n            return this;\n        }\n        this.rangeStack[0] = term;\n        return this;\n    };\n    /**\n     * Ends a range query.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .from(yesterdaysDate)\n     *   .to(todaysDate)\n     *   .in(\"created\")\n     * ```\n     */\n    SearchQueryBuilder.prototype.to = function (term) {\n        if (this.hasTerms) {\n            warn(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            \"`to(...)` is not allowed after `match(...)` try using `.from(...).to(...).in(...)`. Optionally, you may see this because dates are incorrectly formatted. Dates should be a primative Date value, aka a number in milliseconds or Date object, ie new Date(\\\"2020-01-01\\\"). Your query was not modified.\");\n            return this;\n        }\n        this.rangeStack[1] = term;\n        return this;\n    };\n    /**\n     * Boosts the previous term to increase its rank in the results.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Lakes\")\n     *   .in(\"title\")\n     *   .or()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     *   .boost(3)\n     * ```\n     */\n    SearchQueryBuilder.prototype.boost = function (num) {\n        this.commit();\n        this.q += \"^\" + num;\n        return this;\n    };\n    /**\n     * Returns the current query string. Called internally when the request is made.\n     */\n    SearchQueryBuilder.prototype.toParam = function () {\n        this.commit();\n        this.cleanup();\n        return this.q;\n    };\n    /**\n     * Returns a new instance of `SearchQueryBuilder` based on the current instance.\n     */\n    SearchQueryBuilder.prototype.clone = function () {\n        this.commit();\n        this.cleanup();\n        return new SearchQueryBuilder(this.q + \"\");\n    };\n    SearchQueryBuilder.prototype.addModifier = function (modifier) {\n        if (this.currentModifer) {\n            warn(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            \"You have called `\" + this.currentModifer + \"()` after `\" + modifier + \"()`. Your current query was not modified.\");\n            return this;\n        }\n        this.commit();\n        if (this.q === \"\" && modifier !== \"not\") {\n            warn(\"You have called `\" + modifier + \"()` without calling another method to modify your query first. Try calling `match()` first.\");\n            return this;\n        }\n        this.currentModifer = modifier;\n        this.q += this.q === \"\" ? \"\" : \" \";\n        this.q += modifier.toUpperCase() + \" \";\n        return this;\n    };\n    SearchQueryBuilder.prototype.needsQuotes = function (s) {\n        return /\\s|:/g.test(s);\n    };\n    SearchQueryBuilder.prototype.formatTerm = function (term) {\n        if (term instanceof Date) {\n            return term.getTime();\n        }\n        if (typeof term === \"string\" && this.needsQuotes(term)) {\n            return \"\\\"\" + term + \"\\\"\";\n        }\n        return term;\n    };\n    SearchQueryBuilder.prototype.commit = function () {\n        var _this = this;\n        this.currentModifer = undefined;\n        if (this.hasRange) {\n            this.q += \"[\" + this.formatTerm(this.rangeStack[0]) + \" TO \" + this.formatTerm(this.rangeStack[1]) + \"]\";\n            this.rangeStack = [undefined, undefined];\n        }\n        if (this.hasTerms) {\n            this.q += this.termStack\n                .map(function (term) {\n                return _this.formatTerm(term);\n            })\n                .join(\" \");\n            this.termStack = [];\n        }\n        return this;\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"hasTerms\", {\n        get: function () {\n            return this.termStack.length > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"hasRange\", {\n        get: function () {\n            return this.rangeStack.length && this.rangeStack[0] && this.rangeStack[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.cleanup = function () {\n        // end a group if we have started one\n        if (this.openGroups > 0) {\n            warn(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            \"Automatically closing \" + this.openGroups + \" group(s). You can use `endGroup(...)` to remove this warning.\");\n            while (this.openGroups > 0) {\n                this.q += \")\";\n                this.openGroups--;\n            }\n        }\n        var oldQ = this.q;\n        this.q = oldQ.replace(/( AND ?| NOT ?| OR ?)*$/, \"\");\n        if (oldQ !== this.q) {\n            warn(\"`startGroup(...)` was called without calling `endGroup(...)` first. Your query was not modified.\");\n        }\n        // clear empty groups\n        this.q = this.q.replace(/(\\(\\))*/, \"\");\n    };\n    return SearchQueryBuilder;\n}());\n\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nfunction genericSearch(search, searchType) {\n    var options;\n    if (typeof search === \"string\" || search instanceof SearchQueryBuilder) {\n        options = {\n            httpMethod: \"GET\",\n            params: {\n                q: search,\n            },\n        };\n    }\n    else {\n        // searchUserAccess has one (knonw) valid value: \"groupMember\"\n        options = appendCustomParams(search, [\n            \"q\",\n            \"num\",\n            \"start\",\n            \"sortField\",\n            \"sortOrder\",\n            \"searchUserAccess\",\n            \"searchUserName\",\n            \"filter\",\n            \"countFields\",\n            \"countSize\",\n            \"categories\",\n            \"categoryFilters\",\n        ], {\n            httpMethod: \"GET\",\n        });\n    }\n    var path;\n    switch (searchType) {\n        case \"item\":\n            path = \"/search\";\n            break;\n        case \"group\":\n            path = \"/community/groups\";\n            break;\n        case \"groupContent\":\n            // Need to have groupId property to do group contents search,\n            // cso filter out all but ISearchGroupContentOptions\n            if (typeof search !== \"string\" &&\n                !(search instanceof SearchQueryBuilder) &&\n                search.groupId) {\n                path = \"/content/groups/\" + search.groupId + \"/search\";\n            }\n            else {\n                return Promise.reject(new Error(\"you must pass a `groupId` option to `searchGroupContent`\"));\n            }\n            break;\n        default:\n            // \"users\"\n            path = \"/portals/self/users/search\";\n            break;\n    }\n    var url = getPortalUrl(options) + path;\n    // send the request\n    return request(url, options).then(function (r) {\n        if (r.nextStart && r.nextStart !== -1) {\n            r.nextPage = function () {\n                var newOptions;\n                if (typeof search === \"string\" ||\n                    search instanceof SearchQueryBuilder) {\n                    newOptions = {\n                        q: search,\n                        start: r.nextStart,\n                    };\n                }\n                else {\n                    newOptions = search;\n                    newOptions.start = r.nextStart;\n                }\n                return genericSearch(newOptions, searchType);\n            };\n        }\n        return r;\n    });\n}\n\nexport { SearchQueryBuilder as S, genericSearch as g };\n","import { _ as __assign } from './tslib.es6-3669ad41.js';\nimport { g as getPortalUrl } from './get-portal-url-423a76f5.js';\nimport { r as request } from './request-c15cc2af.js';\nimport { a as appendCustomParams } from './append-custom-params-fd9b7e72.js';\n\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * ```js\n * import { getGroup } from \"@esri/arcgis-rest-portal\";\n * //\n * getGroup(\"fxb988\") // id\n *   .then(response)\n * ```\n * Fetch a group using its id. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/group.htm) for more information.\n *\n * @param id - Group Id\n * @param requestOptions  - Options for the request\n * @returns  A Promise that will resolve with the data from the response.\n */\nfunction getGroup(id, requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/community/groups/\" + id;\n    // default to a GET request\n    var options = __assign({ httpMethod: \"GET\" }, requestOptions);\n    return request(url, options);\n}\n/**\n * Get the usernames of the admins and members. Does not return actual 'User' objects. Those must be\n * retrieved via separate calls to the User's API.\n * @param id - Group Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with arrays of the group admin usernames and the member usernames\n */\nfunction getGroupUsers(id, requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/community/groups/\" + id + \"/users\";\n    // default to a GET request\n    var options = __assign({ httpMethod: \"GET\" }, requestOptions);\n    return request(url, options);\n}\n/**\n * ```js\n * import { searchGroupUsers } from \"@esri/arcgis-rest-portal\";\n * //\n * searchGroupUsers('abc123')\n *   .then(response)\n * ```\n * Search the users in a group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/group-users-list.htm) for more information.\n *\n * @param id - The group id\n * @param searchOptions - Options for the request, including paging parameters.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction searchGroupUsers(id, searchOptions) {\n    var url = getPortalUrl(searchOptions) + \"/community/groups/\" + id + \"/userlist\";\n    var options = appendCustomParams(searchOptions || {}, [\"name\", \"num\", \"start\", \"sortField\", \"sortOrder\", \"joined\", \"memberType\"], {\n        httpMethod: \"GET\"\n    });\n    return request(url, options);\n}\n\nexport { getGroupUsers as a, getGroup as g, searchGroupUsers as s };\n","import { _ as __assign } from './tslib.es6-3669ad41.js';\nimport { g as getPortalUrl } from './get-portal-url-423a76f5.js';\nimport { r as request } from './request-c15cc2af.js';\nimport { a as appendCustomParams } from './append-custom-params-fd9b7e72.js';\n\n/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Serialize an item and its data into a json format accepted by the Portal API for create and update operations\n *\n * @param item Item to be serialized\n * @returns a formatted json object to be sent to Portal\n */\nfunction serializeItem(item) {\n    // create a clone so we're not messing with the original\n    var clone = JSON.parse(JSON.stringify(item));\n    // binary data needs POSTed as a `file`\n    // JSON object literals should be passed as `text`.\n    if (clone.data) {\n        (typeof Blob !== \"undefined\" && item.data instanceof Blob) ||\n            // Node.js doesn't implement Blob\n            item.data.constructor.name === \"ReadStream\"\n            ? (clone.file = item.data)\n            : (clone.text = item.data);\n        delete clone.data;\n    }\n    return clone;\n}\n/**\n * `requestOptions.owner` is given priority, `requestOptions.item.owner` will be checked next. If neither are present, `authentication.getUserName()` will be used instead.\n */\nfunction determineOwner(requestOptions) {\n    if (requestOptions.owner) {\n        return Promise.resolve(requestOptions.owner);\n    }\n    else if (requestOptions.item && requestOptions.item.owner) {\n        return Promise.resolve(requestOptions.item.owner);\n    }\n    else if (requestOptions.authentication &&\n        requestOptions.authentication.getUsername) {\n        return requestOptions.authentication.getUsername();\n    }\n    else {\n        return Promise.reject(new Error(\"Could not determine the owner of this item. Pass the `owner`, `item.owner`, or `authentication` option.\"));\n    }\n}\n/**\n * checks if the extent is a valid BBox (2 element array of coordinate pair arrays)\n * @param extent\n * @returns\n */\nfunction isBBox(extent) {\n    return (Array.isArray(extent) &&\n        Array.isArray(extent[0]) &&\n        Array.isArray(extent[1]));\n}\n/**\n * Given a Bbox, convert it to a string. Some api endpoints expect a string\n *\n * @param {BBox} extent\n * @return {*}  {string}\n */\nfunction bboxToString(extent) {\n    return extent.join(\",\");\n}\n\n// eslint-disable-next-line no-control-regex\nvar CONTROL_CHAR_MATCHER = /[\\x00-\\x1F\\x7F-\\x9F\\xA0]/g;\n/**\n * Returns a new string with all control characters removed.\n *\n * Doesn't remove characters from input string.\n *\n * @param str - the string to scrub\n */\nfunction scrubControlChars(str) {\n    return str.replace(CONTROL_CHAR_MATCHER, \"\");\n}\n\n/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * ```\n * import { getItem } from \"@esri/arcgis-rest-portal\";\n * //\n * getItem(\"ae7\")\n *   .then(response);\n * // or\n * getItem(\"ae7\", { authentication })\n *   .then(response)\n * ```\n * Get an item by id. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item.htm) for more information.\n *\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction getItem(id, requestOptions) {\n    var url = getItemBaseUrl(id, requestOptions);\n    // default to a GET request\n    var options = __assign({ httpMethod: \"GET\" }, requestOptions);\n    return request(url, options);\n}\n/**\n * Get the fully qualified base URL to the REST end point for an item.\n * @param id Item Id\n * @param portalUrlOrRequestOptions a portal URL or request options\n * @returns URL to the item's REST end point, defaults to `https://www.arcgis.com/sharing/rest/content/items/{id}`\n */\nvar getItemBaseUrl = function (id, portalUrlOrRequestOptions) {\n    var portalUrl = typeof portalUrlOrRequestOptions === \"string\"\n        ? portalUrlOrRequestOptions\n        : getPortalUrl(portalUrlOrRequestOptions);\n    return portalUrl + \"/content/items/\" + id;\n};\n/**\n * ```\n * import { getItemData } from \"@esri/arcgis-rest-portal\";\n * //\n * getItemData(\"ae7\")\n *   .then(response)\n * // or\n * getItemData(\"ae7\", { authentication })\n *   .then(response)\n * ```\n * Get the /data for an item. If no data exists, returns `undefined`. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item-data.htm) for more information.\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the json data for the item.\n */\nfunction getItemData(id, requestOptions) {\n    var url = getItemBaseUrl(id, requestOptions) + \"/data\";\n    // default to a GET request\n    var options = __assign({ httpMethod: \"GET\", params: {} }, requestOptions);\n    if (options.file) {\n        options.params.f = null;\n    }\n    return request(url, options).catch(function (err) {\n        /* if the item doesn't include data, the response will be empty\n           and the internal call to response.json() will fail */\n        var emptyResponseErr = RegExp(/The string did not match the expected pattern|(Unexpected end of (JSON input|data at line 1 column 1))/i);\n        /* istanbul ignore else */\n        if (emptyResponseErr.test(err.message)) {\n            return;\n        }\n        else\n            throw err;\n    });\n}\n/**\n * Get the resources associated with an item\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to get some item resources.\n */\nfunction getItemResources(id, requestOptions) {\n    var url = getItemBaseUrl(id, requestOptions) + \"/resources\";\n    // Mix in num:1000 with any user supplied params\n    // Key thing - we don't want to mutate the passed in requestOptions\n    // as that may be used in other (subsequent) calls in the course\n    // of a long promise chains\n    var options = __assign({}, requestOptions);\n    options.params = __assign({ num: 1000 }, options.params);\n    return request(url, options);\n}\n/**\n * ```js\n * import { getItemResource } from \"@esri/arcgis-rest-portal\";\n *\n * // Parses contents as blob by default\n * getItemResource(\"3ef\", { fileName: \"resource.jpg\", ...})\n *  .then(resourceContents => {});\n *\n * // Can override parse method\n * getItemResource(\"3ef\", { fileName: \"resource.json\", readAs: 'json', ...})\n *  .then(resourceContents => {});\n *\n * // Get the response object instead\n * getItemResource(\"3ef\",{ rawResponse: true, fileName: \"resource.json\" })\n *  .then(response => {})\n * ```\n * Fetches an item resource and optionally parses it to the correct format.\n *\n * Note: provides JSON parse error protection by sanitizing out any unescaped control\n * characters before parsing that would otherwise cause an error to be thrown\n *\n * @param {string} itemId\n * @param {IGetItemResourceOptions} requestOptions\n */\nfunction getItemResource(itemId, requestOptions) {\n    var readAs = requestOptions.readAs || 'blob';\n    return getItemFile(itemId, \"/resources/\" + requestOptions.fileName, readAs, requestOptions);\n}\n/**\n * ```js\n * import { getItemGroups } from \"@esri/arcgis-rest-portal\";\n * //\n * getItemGroups(\"30e5fe3149c34df1ba922e6f5bbf808f\")\n *   .then(response)\n * ```\n * Lists the groups of which the item is a part, only showing the groups that the calling user can access. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/groups.htm) for more information.\n *\n * @param id - The Id of the item to query group association for.\n * @param requestOptions - Options for the request\n * @returns A Promise to get some item groups.\n */\nfunction getItemGroups(id, requestOptions) {\n    var url = getItemBaseUrl(id, requestOptions) + \"/groups\";\n    return request(url, requestOptions);\n}\n/**\n * ```js\n * import { getItemStatus } from \"@esri/arcgis-rest-portal\";\n * //\n * getItemStatus({\n *   id: \"30e5fe3149c34df1ba922e6f5bbf808f\",\n *   authentication\n * })\n *   .then(response)\n * ```\n * Inquire about status when publishing an item, adding an item in async mode, or adding with a multipart upload. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/status.htm) for more information.\n *\n * @param id - The Id of the item to get status for.\n * @param requestOptions - Options for the request\n * @returns A Promise to get the item status.\n */\nfunction getItemStatus(requestOptions) {\n    return determineOwner(requestOptions).then(function (owner) {\n        var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/status\";\n        var options = appendCustomParams(requestOptions, [\"jobId\", \"jobType\"], { params: __assign({}, requestOptions.params) });\n        return request(url, options);\n    });\n}\n/**\n * ```\n * import { getItemInfo } from \"@esri/arcgis-rest-portal\";\n * // get the \"Info Card\" for the item\n * getItemInfo(\"ae7\")\n *   .then(itemInfoXml) // XML document as a string\n * // or get the contents of a specific file\n * getItemInfo(\"ae7\", { fileName: \"form.json\", readAs: \"json\", authentication })\n *   .then(formJson) // JSON document as JSON\n * ```\n * Get an info file for an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item-info-file.htm) for more information.\n * @param id - Item Id\n * @param requestOptions - Options for the request, including the file name which defaults to `iteminfo.xml`.\n * If the file is not a text file (XML, HTML, etc) you will need to specify the `readAs` parameter\n * @returns A Promise that will resolve with the contents of the info file for the item.\n */\nfunction getItemInfo(id, requestOptions) {\n    var _a = requestOptions || {}, _b = _a.fileName, fileName = _b === void 0 ? \"iteminfo.xml\" : _b, _c = _a.readAs, readAs = _c === void 0 ? \"text\" : _c;\n    var options = __assign({ httpMethod: \"GET\" }, requestOptions);\n    return getItemFile(id, \"/info/\" + fileName, readAs, options);\n}\n/**\n * ```\n * import { getItemMetadata } from \"@esri/arcgis-rest-portal\";\n * // get the metadata for the item\n * getItemMetadata(\"ae7\")\n *   .then(itemMetadataXml) // XML document as a string\n * // or with additional request options\n * getItemMetadata(\"ae7\", { authentication })\n *   .then(itemMetadataXml) // XML document as a string\n * ```\n * Get the standard formal metadata XML file for an item (`/info/metadata/metadata.xml`)\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the contents of the metadata file for the item as a string.\n */\nfunction getItemMetadata(id, requestOptions) {\n    var options = __assign(__assign({}, requestOptions), { fileName: \"metadata/metadata.xml\" });\n    return getItemInfo(id, options);\n}\n// overrides request()'s default behavior for reading the response\n// which is based on `params.f` and defaults to JSON\n// Also adds JSON parse error protection by sanitizing out any unescaped control characters before parsing\nfunction getItemFile(id, \n// NOTE: fileName should include any folder/subfolders\nfileName, readMethod, requestOptions) {\n    var url = \"\" + getItemBaseUrl(id, requestOptions) + fileName;\n    // preserve escape hatch to let the consumer read the response\n    // and ensure the f param is not appended to the query string\n    var options = __assign({ params: {} }, requestOptions);\n    var justReturnResponse = options.rawResponse;\n    options.rawResponse = true;\n    options.params.f = null;\n    return request(url, options).then(function (response) {\n        if (justReturnResponse) {\n            return response;\n        }\n        return readMethod !== 'json'\n            ? response[readMethod]()\n            : response.text().then(function (text) { return JSON.parse(scrubControlChars(text)); });\n    });\n}\n\nexport { getItemGroups as a, bboxToString as b, getItemData as c, determineOwner as d, getItemMetadata as e, getItemResources as f, getItem as g, getItemResource as h, isBBox as i, getItemStatus as j, serializeItem as s };\n","import { c as cleanUrl } from './clean-url-be7c0879.js';\n\n/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper that returns the appropriate portal url for a given request. `requestOptions.portal` is given\n * precedence over `authentication.portal`. If neither `portal` nor `authentication` is present,\n * `www.arcgis.com/sharing/rest` is returned.\n *\n * @param requestOptions - Request options that may have authentication manager\n * @returns Portal url to be used in API requests\n */\nfunction getPortalUrl(requestOptions) {\n    if (requestOptions === void 0) { requestOptions = {}; }\n    // use portal in options if specified\n    if (requestOptions.portal) {\n        return cleanUrl(requestOptions.portal);\n    }\n    // if auth was passed, use that portal\n    if (requestOptions.authentication) {\n        // the portal url is already scrubbed in the auth package\n        return requestOptions.authentication.portal;\n    }\n    // default to arcgis.com\n    return \"https://www.arcgis.com/sharing/rest\";\n}\n\nexport { getPortalUrl as g };\n","/**\n * Get a property out of a deeply nested object\n * Does not handle anything but nested object graph\n */\nfunction getProp(obj, path) {\n    return path.split(\".\").reduce(function (prev, curr) {\n        /* istanbul ignore next no need to test undefined scenario */\n        return prev ? prev[curr] : undefined;\n    }, obj);\n}\n\nexport { getProp as g };\n","import { g as genericSearch } from './generic-search-069e22da.js';\n\n/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * ```js\n * import { searchItems } from \"@esri/arcgis-rest-portal\";\n * //\n * searchItems('water')\n *   .then(response) // response.total => 355\n * ```\n * Search a portal for items. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/search.htm) for more information.\n *\n * @param search - A string or RequestOptions object to pass through to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction searchItems(search) {\n    return genericSearch(search, \"item\");\n}\n\nexport { searchItems as s };\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nexport { __assign as _, __spreadArrays as a };\n","import { g as getProp } from './get-prop-d82e4fa6.js';\n\n/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * ```js\n * import { cloneObject } from \"@esri/hub-common\";\n * const original = { foo: \"bar\" }\n * const copy = cloneObject(original)\n * copy.foo // \"bar\"\n * copy === original // false\n * ```\n * Make a deep clone, including arrays. Does not handle functions!\n */\nfunction cloneObject(obj) {\n    let clone = {};\n    // first check array\n    if (Array.isArray(obj)) {\n        clone = obj.map(cloneObject);\n    }\n    else if (typeof obj === \"object\") {\n        for (const i in obj) {\n            if (obj.hasOwnProperty(i)) {\n                const value = obj[i];\n                if (value != null && typeof value === \"object\") {\n                    if (value instanceof Date) {\n                        clone[i] = new Date(value.getTime());\n                    }\n                    else if (typeof Blob !== \"undefined\" && value instanceof Blob) {\n                        clone[i] = new Blob([value], { type: value.type });\n                    }\n                    else {\n                        clone[i] = cloneObject(value);\n                    }\n                }\n                else {\n                    clone[i] = value;\n                }\n            }\n        }\n    }\n    else {\n        clone = obj;\n    }\n    return clone;\n}\n/**\n * Return an entry from an array by a property name\n */\nfunction findBy(arr, prop, value) {\n    if (!arr) {\n        return null;\n    }\n    const res = arr.reduce((acc, entry) => {\n        if (getProp(entry, prop) === value) {\n            acc = entry;\n        }\n        return acc;\n    }, null);\n    return res;\n}\n/**\n * Return a new array without the specified value.\n *\n * @export\n * @param {any[]} arr\n * @param {*} val value or object to remove\n * @returns {any[]} Array without the value\n */\nfunction without(arr, value) {\n    const res = arr.filter((entry) => entry !== value);\n    return res;\n}\n/**\n * Return a random number, prefixed with a string. Used for unique identifiers that do not require\n * the rigor of a full UUID - i.e. node id's, process ids etc.\n * @param prefix String to prefix the random number with so the result is a valid javascript property\n */\nfunction createId(prefix = \"i\") {\n    // prepend some char so it's always a valid dotable property name\n    // get a random number, convert to base 36 representation, then grab chars 2-8\n    return `${prefix}${Math.random().toString(36).substr(2, 8)}`;\n}\n/**\n * Append or replace a value on an object, using a specified key, if the value is not null.\n * This is a very useful companion to the [getProp()](../getProp/) utility.\n *\n * Note: object that is passed in is cloned before the property is appended.\n *\n * Allows for code like:\n *\n * ```js\n * let model = {\n *  item: {\n *    title: 'some example object',\n *    description: 'this is some longer text',\n *    type: 'Web Map',\n *    properties: {\n *      sourceId: '3ef'\n *    }\n *  },\n *  data: {\n *    theme: 'orange',\n *    parcelLayer: {\n *      primaryField: 'PIN'\n *    }\n *  }\n * };\n *\n * // Let's extract some details into an object.\n * const summary = [\n *  'item.title',\n *  'item.description',\n *  'item.missingProp',\n *  'data.parcelLayer.primaryField'].reduce((acc, prop) => {\n *   // create the property name... you could do this however...\n *   let propName = prop.split('.').reverse()[0];\n *   return maybeAdd(propName, getProp(model, key), acc);\n * }, {});\n *\n * // summary =>\n * // {\n * //   title: 'some example object',\n * //   description: 'this is some longer text',\n * //   primaryField: 'PIN'\n * // }\n * ```\n * @param key - key to use when appending to the object\n * @param val - the possibly null value\n * @param target - the object to update\n */\nfunction maybeAdd(key, val, target) {\n    // see if we got something...\n    if (val !== null && val !== undefined) {\n        target = cloneObject(target);\n        // attach using the key\n        target[key] = val;\n    }\n    return target;\n}\n/**\n * Append a value to an array, if the value is not null.\n * This is a very useful companion to the [getProp()](../getProp/) utility.\n *\n * Note: the array that is passed in is cloned before being appended to.\n *\n * Allows for code like:\n * ```js\n *  // example object\n * let model = {\n *  item: {\n *    id: 'c00',\n *    title: 'some example object',\n *    description: 'this is some longer text',\n *    type: 'Web Map',\n *    properties: {\n *      sourceId: '3ef'\n *    }\n *  },\n *  data: {\n *    theme: 'orange',\n *    parcelLayer: {\n *      itemId: '7ca',\n *      primaryField: 'PIN'\n *    }\n *  }\n * };\n * // lets pluck some id's into an array...\n * maybePush(getProp(model, 'item.properties.sourceId'), []);\n * // > ['3ef']\n *\n * // now try to get a value from a property that is missing...\n * maybePush(getProp(obj, 'item.properties.childId'), []);\n * // > []\n *\n * // easily pluck values via property paths\n * const summary = [\n *  'item.id',\n *  'item.properties.sourceId',\n *  'item.properties.childId',\n *  'data.parcelLayer.itemId'].reduce((acc, prop) => {\n *   return maybePush(getProp(model, key), acc);\n * }, []);\n *\n * // summary => ['c00', '3ef', '7ca']\n *\n * ```\n *\n * @param val - the possibly null value\n * @param target - the array to add the value to\n */\nfunction maybePush(val, target) {\n    if (val !== null && val !== undefined) {\n        // create a clone because mutation makes us sad...\n        target = cloneObject(target);\n        target.push(val);\n    }\n    return target;\n}\n/**\n * Convert a string to camelCase\n *\n * @export\n * @param {string} value\n * @returns {string} camelCased string\n */\nfunction camelize(value) {\n    // lower case the whole thing to start...\n    value = value.toLowerCase();\n    // strip out any/all special chars...\n    value = value.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, \" \");\n    // Hoisted from EmberJS (MIT License)\n    // https://github.com/emberjs/ember.js/blob/v2.0.1/packages/ember-runtime/lib/system/string.js#L23-L27\n    const STRING_CAMELIZE_REGEXP_1 = /(\\-|\\_|\\.|\\s)+(.)?/g;\n    const STRING_CAMELIZE_REGEXP_2 = /(^|\\/)([A-Z])/g;\n    return value\n        .replace(STRING_CAMELIZE_REGEXP_1, function (match, separator, chr) {\n        return chr ? chr.toUpperCase() : \"\";\n    })\n        .replace(STRING_CAMELIZE_REGEXP_2, function (match, separator, chr) {\n        return match.toLowerCase();\n    });\n}\n/**\n * Determines if a value is unique in an array\n * Allows for code like:\n *\n * ```js\n * const ary = [ 1, 2, 3, 3, 4, 5, 1 ];\n *\n * const result = ary.filter(unique);\n *\n * result => [ 1, 2, 3, 4, 5 ]\n * ```\n * @param value - the value to search for\n * @param index - the index of the searched value\n * @param ary - the array to search\n * @returns {boolean} - indicating if the value is unique in the array\n */\nfunction unique(value, index, ary) {\n    return ary.indexOf(value) === index;\n}\n/**\n * Determine if a value is null or undefined\n * @param value anything\n * @returns\n */\nconst isNil = (value) => value == null;\n/**\n * Upper case first letter (only) of a string\n * @param word\n * @returns Word\n */\nconst capitalize = (word) => {\n    // upper case first letter and return as element in array for backwards compatibility\n    const chars = Array.from(word);\n    chars[0] = chars[0].toUpperCase();\n    return chars.join(\"\");\n};\n/**\n * An IE-compatible stand-in for Javascript's [array.flat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat)\n * @param arr the array\n * @returns an array\n */\nfunction flattenArray(arr) {\n    return arr.reduce((acc, val) => acc.concat(val), []);\n}\n\nexport { createId as a, camelize as b, cloneObject as c, maybePush as d, capitalize as e, flattenArray as f, findBy as g, isNil as i, maybeAdd as m, unique as u, without as w };\n"],"names":["getUserMembership","requestOptions","getGroup","groupId","then","group","userMembership","memberType","catch","setItemAccess","url","username","authentication","owner","getPortalUrl","encodeURIComponent","id","getSharingUrl","isItemOwner","updateItemAccess","getUser","user","role","roleId","isOrgAdmin","admin","Error","params","__assign","org","everyone","access","groups","account","request","appendCustomParams","customOptions","keys","baseOptions","options","reduce","value","key","cleanUrl","trim","length","slice","createFolder","determineOwner","title","createItem","multipart","filename","Promise","reject","baseUrl","folderId","serializeItem","item","extent","isBBox","bboxToString","createItemInFolder","warn","message","console","apply","SearchQueryBuilder","q","this","termStack","rangeStack","openGroups","prototype","match","terms","_i","arguments","concat","in","field","fn","hasRange","hasTerms","commit","startGroup","endGroup","and","addModifier","or","not","from","term","to","boost","num","toParam","cleanup","clone","modifier","currentModifer","toUpperCase","needsQuotes","s","test","formatTerm","Date","getTime","_this","undefined","map","join","Object","defineProperty","get","enumerable","configurable","oldQ","replace","genericSearch","search","searchType","path","httpMethod","r","nextStart","nextPage","newOptions","start","getGroupUsers","searchGroupUsers","searchOptions","JSON","parse","stringify","data","Blob","constructor","name","file","text","resolve","getUsername","Array","isArray","CONTROL_CHAR_MATCHER","getItem","getItemBaseUrl","portalUrlOrRequestOptions","getItemData","f","err","RegExp","getItemResources","getItemResource","itemId","readAs","getItemFile","fileName","getItemGroups","getItemStatus","getItemMetadata","_a","_b","_c","getItemInfo","readMethod","justReturnResponse","rawResponse","response","portal","getProp","obj","split","prev","curr","searchItems","assign","t","i","n","p","hasOwnProperty","call","__spreadArrays","il","k","a","j","jl","cloneObject","type","findBy","arr","prop","acc","entry","without","filter","createId","prefix","Math","random","toString","substr","maybeAdd","val","target","maybePush","push","camelize","toLowerCase","separator","chr","unique","index","ary","indexOf","isNil","capitalize","word","chars","flattenArray"],"sourceRoot":""}