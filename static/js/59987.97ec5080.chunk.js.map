{"version":3,"file":"static/js/59987.97ec5080.chunk.js","mappings":"8MAaA,SAASA,EAAMC,GACbC,KAAKC,EAAI,CAAC,EAGVD,KAAKE,GAAK,GACVF,KAAKG,GAAK,KACVH,KAAKI,EAAIL,CACX,CAUAD,EAAMO,UAAY,CAIhBC,QAAS,WACP,QAASN,KAAKI,CAChB,EAsBAG,GAAI,SAAYC,EAAOC,GACrB,GAAIA,GAAgBA,EAAaR,EAG/B,OADAD,KAAKC,EAAEO,GAASC,EACTA,EAIT,IAAIV,EAAQU,EACRC,EAAYV,KAAKC,EAAEO,GAEvB,GAAIE,EAMF,OALIX,IACFW,EAAUN,EAAIL,GAITW,EAITA,EAAYC,IAEZ,IAAIC,EAAgBC,EAAMb,KAAMQ,GAahC,OAXII,GAEFE,OAAOC,OAAOL,EAAUT,EAAGW,EAAcX,GACzCS,EAAUR,GAAGc,OAAOJ,EAAcV,IAClCQ,EAAUR,GAAKU,EAAcT,GAC7BO,EAAUN,EAAIL,GAASa,EAAcR,GAErCM,EAAUN,EAAIL,EAGhBC,KAAKC,EAAEO,GAASE,EACTA,CACT,GAOF,IAAIC,EAAY,WACd,OAAO,IAAIb,CACb,EAMImB,EAAqB,SAA4BlB,GACnD,OAAO,IAAID,EAAMC,EACnB,EAQImB,EAAQ,SAAeC,EAAYX,EAAOE,GAEvCS,EAAWlB,EAAEO,KAChBW,EAAWlB,EAAEO,GAASE,EAI1B,EAQIU,EAAa,SAAoBD,EAAYE,EAAOX,GACtDS,EAAWjB,GAAGoB,KAAK,CAACD,EAAOX,GAC7B,EAQIG,EAAQ,SAAeU,EAAOf,GAEhC,IAAIE,EAAYa,EAAMtB,EAAEO,GAExB,GAAIE,EACF,OAAOA,EAUT,IAAK,IAAIc,EAAI,EAAGA,EAAID,EAAMrB,GAAGuB,OAAQD,IAAK,CACxC,IAAIH,EAAQE,EAAMrB,GAAGsB,GAAG,GACpBE,EAAaH,EAAMrB,GAAGsB,GAAG,GAE7B,GAAIH,EAAMM,KAAKnB,GACb,OAAOkB,CAEX,CAGA,OAAOH,EAAMpB,EACf,EASIyB,EAAa,SAAoBT,EAAYU,EAAOnB,GACtD,IAAK,IAAIc,EAAI,EAAGA,EAAIK,EAAMJ,OAAQD,IAChCN,EAAMC,EAAYU,EAAML,GAAId,EAEhC,EASIoB,EAAa,SAAoBX,EAAYY,GAC/C,IAAK,IAAIP,EAAI,EAAGA,EAAIO,EAAYN,OAAQD,IAAK,CAC3C,IAAIhB,EAAQuB,EAAYP,GAAG,GACvBd,EAAYqB,EAAYP,GAAG,GAC/BN,EAAMC,EAAYX,EAAOE,EAC3B,CACF,EAgBIsB,EAAa,SAAoBT,EAAOU,EAAKC,EAAUC,GAKzD,IAJA,IAEIzB,EAFAc,EAAI,EACJY,EAAMH,EAAIR,OAGPD,EAAIY,IAAQ1B,EAAYa,EAAMtB,EAAEgC,EAAIT,MACzCD,EAAQb,EACRc,IAGF,GAAIA,GAAKY,EACP,MAAO,GAIT,KAAOZ,EAAIY,EAAM,GACf1B,EAAYyB,IACZjB,EAAMK,EAAOU,EAAIT,GAAId,GACrBa,EAAQb,EACRc,IAGFN,EAAMK,EAAOU,EAAIG,EAAM,GAAIF,EAC7B,EAOIG,EAAS,SACTC,EAAY,YAGZC,EAAM,MAENC,EAAM,MAONC,EAAW,WAEXC,EAAS,SAGTC,EAAK,KAELC,EAAK,KAGLC,EAAY,YAEZC,EAAc,cAEdC,EAAmB,mBAEnBC,EAAY,YAEZC,EAAa,aAEbC,EAAe,eAEfC,EAAoB,oBAEpBC,EAAa,aAGbC,EAAY,YAEZC,EAAa,aAEbC,EAAW,WAEXC,EAAK,KAELC,EAAY,YAEZC,EAAW,WAEXC,EAAQ,QAERC,EAAQ,QAERC,EAAQ,QAERC,EAAS,SAETC,EAAM,MAENC,EAAS,SAETC,EAAc,cAEdC,EAAS,SAETC,EAAU,UAEVC,EAAO,OAEPC,EAAO,OAEPC,EAAQ,QAERC,EAAQ,QAERC,EAAQ,QAERC,EAAO,OAEPC,EAAQ,QAERC,EAAQ,QAERC,EAAa,aAGbC,EAAM,MAENC,GAAoBhE,OAAOiE,OAAO,CACrCC,UAAW,KACX3C,OAAQA,EACRC,UAAWA,EACXC,IAAKA,EACLC,IAAKA,EACLC,SAAUA,EACVC,OAAQA,EACRC,GAAIA,EACJC,GAAIA,EACJC,UAAWA,EACXC,YAAaA,EACbC,iBAAkBA,EAClBC,UAAWA,EACXC,WAAYA,EACZC,aAAcA,EACdC,kBAAmBA,EACnBC,WAAYA,EACZC,UAAWA,EACXC,WAAYA,EACZC,SAAUA,EACVC,GAAIA,EACJC,UAAWA,EACXC,SAAUA,EACVC,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,OAAQA,EACRC,IAAKA,EACLC,OAAQA,EACRC,YAAaA,EACbC,OAAQA,EACRC,QAASA,EACTC,KAAMA,EACNC,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,WAAYA,EACZC,IAAKA,IASFI,GAAO,qtWA89CPC,MAAM,KAWNC,GAAS,8qPAETC,GAAQ,q9CAERC,GAAkB,SAElBC,GAAQ,KACRC,GAAQ,KAMZ,SAASC,KACP,IAAIC,EAAkBC,UAAUjE,OAAS,QAAsBkE,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,GAEtFE,EAAUjF,IACVkF,EAAQ5E,EAAmBuB,GAC3BsD,EAAW7E,EAAmBoB,GAC9B0D,EAAkBpF,IAElBqF,EAAO/E,EAAmB0B,GAC1BsD,EAA2B,CAAC,CAACX,GAAOQ,GAAW,CAACX,GAAQW,GAAW,CAACV,GAAOU,GAAW,CAACT,GAAiBS,IAExGI,GAAkB,WACpB,IAAI3E,EAAQN,EAAmBoB,GAK/B,OAJAd,EAAMtB,EAAI,CACR,IAAK8F,GAEPxE,EAAMrB,GAAK,GAAGiG,OAAOF,GACd1E,CACT,EAII6E,GAAsB,SAA6BrG,GACrD,IAAIwB,EAAQ2E,KAEZ,OADA3E,EAAMnB,EAAIL,EACHwB,CACT,EAGAO,EAAW8D,EAAS,CAAC,CAAC,IAAK3E,EAAmBqC,IAAc,CAAC,IAAKrC,EAAmB4B,IAAa,CAAC,IAAK5B,EAAmB6B,IAAe,CAAC,IAAK7B,EAAmB8B,IAAoB,CAAC,IAAK9B,EAAmB+B,IAAa,CAAC,IAAK/B,EAAmBgC,IAAc,CAAC,IAAKhC,EAAmBiC,IAAgB,CAAC,IAAKjC,EAAmBkC,IAAqB,CAAC,IAAKlC,EAAmBmC,IAAc,CAAC,IAAKnC,EAAmBoC,IAAa,CAAC,IAAKpC,EAAmBsC,IAAY,CAAC,IAAKtC,EAAmBuC,IAAM,CAAC,IAAKvC,EAAmByC,IAAY,CAAC,IAAKzC,EAAmB0C,IAAS,CAAC,IAAK1C,EAAmB2C,IAAS,CAAC,IAAK3C,EAAmB4C,IAAS,CAAC,IAAK5C,EAAmB6C,IAAU,CAAC,IAAK7C,EAAmB8C,IAAO,CAAC,IAAK9C,EAAmB+C,IAAU,CAAC,IAAK/C,EAAmBgD,IAAe,CAAC,IAAKhD,EAAmBiD,IAAU,CAAC,IAAKjD,EAAmBkD,IAAW,CAAC,IAAKlD,EAAmBmD,IAAQ,CAAC,IAAKnD,EAAmBoD,IAAQ,CAAC,IAAKpD,EAAmBqD,IAAS,CAAC,IAAKrD,EAAmBsD,IAAS,CAAC,IAAKtD,EAAmBuD,IAAS,CAAC,IAAKvD,EAAmByD,IAAS,CAAC,IAAKzD,EAAmBwD,IAAQ,CAAC,IAAKxD,EAAmB0D,IAAS,CAAC,IAAK1D,EAAmB2D,IAAc,CAAC,KAAM3D,EAAmBwC,MAG1pCvC,EAAM0E,EAAS,KAAM3E,EAAmB2B,IACxCxB,EAAWwE,EAASL,GAAOS,GAE3B9E,EAAM8E,EAAM,KAAMrF,KAElBS,EAAW4E,EAAMT,GAAOS,GAGxB,IAAK,IAAIxE,GAAI,EAAGA,GAAIyD,GAAKxD,OAAQD,KAC/BQ,EAAW4D,EAASX,GAAKzD,IAAI4E,GAAoB7D,GAAM2D,IAIzD,IAAIG,GAAkBH,KAClBI,GAAiBJ,KACjBK,GAAkBL,KAClBM,GAAWN,KACflE,EAAW4D,EAAS,OAAQS,GAAiBH,IAC7ClE,EAAW4D,EAAS,MAAOU,GAAgBJ,IAC3ClE,EAAW4D,EAAS,OAAQW,GAAiBL,IAC7ClE,EAAW4D,EAAS,SAAUY,GAAUN,IAExC,IAAIO,GAAoBP,KACpBQ,GAAkBzF,EAAmBwB,GAErCkE,GAAgB1F,EAAmByB,GAGvCxB,EAAMoF,GAAgB,IAAKG,IAC3BvF,EAAMoF,GAAgB,IAAKI,IAC3BxF,EAAMqF,GAAiB,IAAKE,IAC5BvF,EAAMqF,GAAiB,IAAKG,IAE5BxF,EAAMmF,GAAiB,IAAKK,IAC5BxF,EAAMuF,GAAmB,IAAKC,IAC9BxF,EAAMsF,GAAU,IAAKG,IAIrB,IAFA,IAAIC,GAAoBV,KAEfW,GAAK,EAAGA,GAAKpB,EAAgBhE,OAAQoF,KAC5C7E,EAAW4D,EAASH,EAAgBoB,IAAKD,GAAmBV,IAkC9D,OA/BAhF,EAAM0F,GAAmB,IAAKF,IAE9B1E,EAAW4D,EAAS,YAAaQ,GAAoB9D,GAAY4D,IAIjE9E,EAAWwE,EAASN,GAAOO,GAC3BzE,EAAWwE,EAAST,GAAQW,GAC5B1E,EAAWwE,EAASR,GAAOU,GAC3B1E,EAAWwE,EAASP,GAAiBS,GACrC1E,EAAWyE,EAAOP,GAAOO,GACzBzE,EAAWyE,EAAOV,GAAQW,GAE1B1E,EAAWyE,EAAOT,GAAOU,GAEzB1E,EAAWyE,EAAOR,GAAiBS,GAEnC5E,EAAM2E,EAAO,IAAKE,GAElB7E,EAAM4E,EAAU,IAAKC,GACrB7E,EAAM6E,EAAiB,IAAKA,GAC5B3E,EAAW0E,EAAUR,GAAOQ,GAC5B1E,EAAW0E,EAAUX,GAAQW,GAC7B1E,EAAW0E,EAAUV,GAAOU,GAC5B1E,EAAW0E,EAAUT,GAAiBS,GACtC1E,EAAW2E,EAAiBT,GAAOQ,GACnC1E,EAAW2E,EAAiBZ,GAAQW,GACpC1E,EAAW2E,EAAiBX,GAAOU,GACnC1E,EAAW2E,EAAiBV,GAAiBS,GAE7CF,EAAQzF,GAAKc,EAAmB4D,GACzBe,CACT,CAyGA,SAASkB,GAAQC,GAaf,OATED,GADoB,oBAAXE,QAAoD,kBAApBA,OAAOC,SACtC,SAAUF,GAClB,cAAcA,CAChB,EAEU,SAAUA,GAClB,OAAOA,GAAyB,oBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAO3G,UAAY,gBAAkB0G,CAC3H,EAGKD,GAAQC,EACjB,CAMA,IAAII,GAAW,CACbC,gBAAiB,OACjBC,OAAQ,KACRC,OAAQC,GACRC,WAAYD,GACZE,OAAO,EACPC,QAAS,IACTC,OAAQ,KACRC,IAAK,KACLC,UAAU,EACVC,SAAU,EACVC,UAAW,KACXC,WAAY,KACZC,WAAY,IAOd,SAASC,GAAQC,GACfA,EAAOA,GAAQ,CAAC,EAChBnI,KAAKoH,gBAAkB,oBAAqBe,EAAOA,EAAKf,gBAAkBD,GAASC,gBACnFpH,KAAKqH,OAAS,WAAYc,EAAOA,EAAKd,OAASF,GAASE,OACxDrH,KAAKsH,OAAS,WAAYa,EAAOA,EAAKb,OAASH,GAASG,OACxDtH,KAAKwH,WAAa,eAAgBW,EAAOA,EAAKX,WAAaL,GAASK,WACpExH,KAAKyH,MAAQ,UAAWU,EAAOA,EAAKV,MAAQN,GAASM,MACrDzH,KAAK0H,QAAU,YAAaS,EAAOA,EAAKT,QAAUP,GAASO,QAC3D1H,KAAK2H,OAAS,WAAYQ,EAAOA,EAAKR,OAASR,GAASQ,OACxD3H,KAAK4H,IAAM,QAASO,EAAOA,EAAKP,IAAMT,GAASS,IAC/C5H,KAAK6H,SAAW,aAAcM,EAAOA,EAAKN,SAAWV,GAASU,SAC9D7H,KAAK8H,SAAW,aAAcK,EAAOA,EAAKL,SAAWX,GAASW,SAC9D9H,KAAK+H,UAAY,cAAeI,EAAOA,EAAKJ,UAAYZ,GAASY,UACjE/H,KAAKgI,WAAaG,EAAKH,YAAcb,GAASa,WAC9ChI,KAAKiI,WAAa,GAIlB,IAFA,IAAIG,GAAc,eAAgBD,EAAOA,EAAKF,WAAad,GAASc,YAE3DzG,EAAI,EAAGA,EAAI4G,EAAY3G,OAAQD,IACtCxB,KAAKiI,WAAW3G,KAAK8G,EAAY5G,GAAG6G,cAExC,CA8DA,SAASd,GAAKe,GACZ,OAAOA,CACT,CA/DAJ,GAAQ7H,UAAY,CAIlBkI,QAAS,SAAiBxI,GACxB,IAAIyI,EAAOzI,EAAM0I,OAAOzI,KAAKoH,iBAC7B,MAAO,CACLsB,UAAW1I,KAAK2I,IAAI,SAAU5I,EAAM6I,WAAY7I,GAChD8I,cAAe7I,KAAK2I,IAAI,aAAcH,EAAMzI,GAC5C2H,QAAS1H,KAAK2I,IAAI,UAAWH,EAAMzI,GACnCgI,UAAW/H,KAAK2I,IAAI,YAAaH,EAAMzI,GACvC4H,OAAQ3H,KAAK2I,IAAI,SAAUH,EAAMzI,GACjC6H,IAAK5H,KAAK2I,IAAI,MAAOH,EAAMzI,GAC3BsH,OAAQrH,KAAK8I,UAAU,SAAUN,EAAMzI,GACvCiI,WAAYhI,KAAK8I,UAAU,aAAcN,EAAMzI,GAC/C+H,SAAU9H,KAAK2I,IAAI,WAAYH,EAAMzI,GAEzC,EAMAgJ,MAAO,SAAehJ,GACpB,OAAOC,KAAK2I,IAAI,WAAY5I,EAAM6I,WAAY7I,EAChD,EAUA4I,IAAK,SAAaK,EAAKC,EAAUlJ,GAC/B,IAMImJ,EANAC,EAASnJ,KAAKgJ,GAElB,IAAKG,EACH,OAAOA,EAKT,OAAQrC,GAAQqC,IACd,IAAK,WACH,OAAOA,EAAOF,EAAUlJ,EAAMK,GAEhC,IAAK,SAEH,MAA8B,oBAD9B8I,EAAcnJ,EAAMK,KAAK+I,EAASA,EAAOpJ,EAAMK,GAAK+G,GAAS6B,IAClBE,EAAYD,EAAUlJ,EAAMK,GAAK8I,EAGhF,OAAOC,CACT,EACAL,UAAW,SAAmBE,EAAKC,EAAUlJ,GAC3C,IAAIoJ,EAASnJ,KAAKgJ,GAClB,MAAyB,oBAAXG,EAAwBA,EAAOF,EAAUlJ,EAAMK,GAAK+I,CACpE,GAOF,IAAIC,GAAuBtI,OAAOiE,OAAO,CACxCC,UAAW,KACXmC,SAAUA,GACVe,QAASA,KAmCV,SAASmB,KAAc,CAgFvB,SAASC,GAAiBC,EAAMC,GAC9B,SAASC,EAAMC,EAAOC,GACpB3J,KAAKI,EAAImJ,EACTvJ,KAAK4J,EAAIF,EACT1J,KAAK6J,GAAKF,CACZ,CAGA,OAnHF,SAAkBG,EAAQC,GACxB,IAAIP,EAAQ9D,UAAUjE,OAAS,QAAsBkE,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC7EsE,EAAWlJ,OAAOmJ,OAAOH,EAAOzJ,WAEpC,IAAK,IAAI6J,KAAKV,EACZQ,EAASE,GAAKV,EAAMU,GAGtBF,EAAS9C,YAAc6C,EACvBA,EAAM1J,UAAY2J,CAEpB,CAuGEG,CAASd,GAAYI,EAAOD,GACrBC,CACT,CAxFAJ,GAAWhJ,UAAY,CAMrBD,EAAG,QAOHgK,QAAQ,EAORxB,SAAU,WACR,OAAO5I,KAAK4J,CACd,EAQAnB,OAAQ,WACN,OAAOzI,KAAK4I,UACd,EAMAyB,WAAY,WACV,OAAOrK,KAAK6J,GAAG,GAAGS,CACpB,EAOAC,SAAU,WACR,OAAOvK,KAAK6J,GAAG7J,KAAK6J,GAAGpI,OAAS,GAAG+I,CACrC,EAWAC,SAAU,WACR,IAAIC,EAAWhF,UAAUjE,OAAS,QAAsBkE,IAAjBD,UAAU,GAAmBA,UAAU,GAAKyB,GAASC,gBAC5F,MAAO,CACLmC,KAAMvJ,KAAKI,EACXsJ,MAAO1J,KAAK4J,EACZQ,OAAQpK,KAAKoK,OACb5B,KAAMxI,KAAKyI,OAAOiC,GAClBC,MAAO3K,KAAKqK,aACZO,IAAK5K,KAAKuK,WAEd,GAyBF,IAAIM,GAAcvB,GAAiB,QAAS,CAC1Cc,QAAQ,IAQNU,GAAQxB,GAAiB,QAAS,CACpCc,QAAQ,EACR3B,OAAQ,WACN,MAAO,UAAYzI,KAAK4I,UAC1B,IAQEmC,GAAOzB,GAAiB,QAOxB0B,GAAK1B,GAAiB,MAOtB2B,GAAM3B,GAAiB,MAAO,CAChCc,QAAQ,EAUR3B,OAAQ,WASN,IARA,IAAIiC,EAAWhF,UAAUjE,OAAS,QAAsBkE,IAAjBD,UAAU,GAAmBA,UAAU,GAAKyB,GAASC,gBACxFuC,EAAS3J,KAAK6J,GACdqB,GAAc,EACdC,GAAgB,EAChBC,EAAS,GACT5J,EAAI,EAGDmI,EAAOnI,GAAGpB,IAAMqC,GACrByI,GAAc,EACdE,EAAO9J,KAAKqI,EAAOnI,GAAGoI,GACtBpI,IAIF,KAAOmI,EAAOnI,GAAGpB,IAAMsE,GACrByG,GAAgB,EAChBC,EAAO9J,KAAKqI,EAAOnI,GAAGoI,GACtBpI,IAIF,KAAOA,EAAImI,EAAOlI,OAAQD,IACxB4J,EAAO9J,KAAKqI,EAAOnI,GAAGoI,GASxB,OANAwB,EAASA,EAAOC,KAAK,IAEfH,GAAeC,IACnBC,EAAS,GAAGjF,OAAOuE,EAAU,OAAOvE,OAAOiF,IAGtCA,CACT,EACAF,YAAa,WACX,OAAOlL,KAAK6J,GAAG,GAAGzJ,IAAMqC,CAC1B,IAGE6I,GAAqBxK,OAAOiE,OAAO,CACtCC,UAAW,KACXqE,WAAYA,GACZkC,KAAMlC,GACNC,iBAAkBA,GAClBuB,YAAaA,GACbC,MAAOA,GACPC,KAAMA,GACNC,GAAIA,GACJC,IAAKA,KAsBN,SAASO,KAEP,IAAI5F,EAAUjF,IAGV8K,EAAa9K,IAEb6F,EAAW7F,IAEX+K,EAAmB/K,IAEnBgL,EAAyBhL,IAEzBmF,EAAWnF,IAEXiL,EAAejL,IAEfkL,EAAQ5K,EAAmBgK,IAE3Ba,EAAcnL,IAEdoL,EAAa9K,EAAmBgK,IAEhCe,GAAQ/K,EAAmBgK,IAE3BgB,GAAsBtL,IAEtBuL,GAAkBvL,IAElBwL,GAAoBxL,IAEpByL,GAAyBzL,IAEzB0L,GAAkB1L,IAElB2L,GAAoBrL,EAAmBgK,IAEvCsB,GAAsBtL,EAAmBgK,IAEzCuB,GAA2BvL,EAAmBgK,IAE9CwB,GAAoBxL,EAAmBgK,IAEvCyB,GAAuB/L,IAEvBgM,GAAyBhM,IAEzBiM,GAA8BjM,IAE9BkM,GAAuBlM,IAEvBmM,GAAiBnM,IAEjBoM,GAAqBpM,IAErBqM,GAAU/L,EAAmB6J,IAE7BmC,GAAgBtM,IAEhBuM,GAAejM,EAAmB6J,IAElCqC,GAAiBlM,EAAmB4J,IAEpCuC,GAA+BzM,IAE/B0M,GAAc1M,IAEd2M,GAAiB3M,IAEjB4M,GAAkB5M,IAElB6M,GAAOvM,EAAmB+J,IAG9B9J,EAAM0E,EAAShD,EAAI4K,IACnBtM,EAAM0E,EAASnD,EAAUgJ,GACzBvK,EAAM0E,EAASlD,EAAQ8D,GACvBtF,EAAMuK,EAAY/G,EAAOgH,GACzBxK,EAAMwK,EAAkBhH,EAAOiH,GAE/BzK,EAAM0E,EAASrD,EAAKuD,GACpB5E,EAAM0E,EAASvD,EAAQyD,GACvB5E,EAAM0E,EAAStD,EAAWuJ,GAC1B3K,EAAM0E,EAASpD,EAAKsD,GAEpB5E,EAAMyK,EAAwBpJ,EAAKyJ,IACnC9K,EAAMyK,EAAwBtJ,EAAQ2J,IACtC9K,EAAMyK,EAAwBnJ,EAAKwJ,IACnC9K,EAAMyK,EAAwBrJ,EAAW0J,IAGzC9K,EAAM4E,EAAU/B,EAAK6H,GACrB1K,EAAM4L,GAAgB/I,EAAKgJ,IAG3B7L,EAAM0K,EAAcrJ,EAAKsJ,GACzB3K,EAAM0K,EAAcvJ,EAAQyD,GAC5B5E,EAAM0K,EAAcpJ,EAAKsD,GACzB5E,EAAM0K,EAActJ,EAAWwD,GAC/B5E,EAAM6L,GAAoBxK,EAAKyK,IAC/B9L,EAAM6L,GAAoB1K,EAAQyK,IAClC5L,EAAM6L,GAAoBvK,EAAKsK,IAC/B5L,EAAM6L,GAAoBzK,EAAWwK,IAGrC5L,EAAM2K,EAAO9H,EAAK6H,GAClB1K,EAAM8L,GAASjJ,EAAKgJ,IAGpB7L,EAAM2K,EAAOjI,EAAOkI,GACpB5K,EAAM2K,EAAOnH,EAAOsH,IACpB9K,EAAM4K,EAAatJ,EAAKuJ,GACxB7K,EAAM6K,EAAYrH,EAAOsH,IACzB9K,EAAM8L,GAASpJ,EAAOqJ,IACtB/L,EAAM+L,GAAezK,EAAK0K,IAE1B,IAAIO,GAAc,CAACpK,EAAWE,EAAUC,EAAIC,EAAWC,EAAUC,EAAOG,EAAQzB,EAAQ2B,EAAQE,EAAQ5B,EAAWE,EAAK2B,EAASC,EAAMC,EAAMC,EAAO7B,EAAUiC,EAAOG,EAAKF,EAAOpC,EAAKqC,GAIlL8I,GAAiB,CAACpK,EAAYH,EAAmBF,EAAYC,EAAcE,EAAYQ,EAAOC,EAAOE,EAAKE,EAAalB,EAAkBF,EAAWC,EAAaE,EAAWuB,EAAOC,EAAOC,GAI9LvD,EAAM8K,GAAOnJ,EAAWqJ,IACxBhL,EAAM8K,GAAOlJ,EAAaqJ,IAC1BjL,EAAM8K,GAAOjJ,EAAkBqJ,IAC/BlL,EAAM8K,GAAOhJ,EAAWqJ,IAExBnL,EAAM+K,GAAqBpJ,EAAWqJ,IACtChL,EAAM+K,GAAqBnJ,EAAaqJ,IACxCjL,EAAM+K,GAAqBlJ,EAAkBqJ,IAC7ClL,EAAM+K,GAAqBjJ,EAAWqJ,IAEtCnL,EAAMgL,GAAiBjJ,EAAY+I,IACnC9K,EAAMiL,GAAmBjJ,EAAc8I,IACvC9K,EAAMkL,GAAwBjJ,EAAmB6I,IACjD9K,EAAMmL,GAAiBjJ,EAAY4I,IACnC9K,EAAMoL,GAAmBrJ,EAAY+I,IACrC9K,EAAMqL,GAAqBrJ,EAAc8I,IACzC9K,EAAMsL,GAA0BrJ,EAAmB6I,IACnD9K,EAAMuL,GAAmBrJ,EAAY4I,IACrC9K,EAAMwL,GAAsBzJ,EAAY+I,IACxC9K,EAAMyL,GAAwBzJ,EAAc8I,IAC5C9K,EAAM0L,GAA6BzJ,EAAmB6I,IACtD9K,EAAM2L,GAAsBzJ,EAAY4I,IAIxCpK,EAAWsK,GAAiBuB,GAAanB,IACzC1K,EAAWuK,GAAmBsB,GAAalB,IAC3C3K,EAAWwK,GAAwBqB,GAAajB,IAChD5K,EAAWyK,GAAiBoB,GAAahB,IACzC7K,EAAWsK,GAAiBwB,GAAgBhB,IAC5C9K,EAAWuK,GAAmBuB,GAAgBf,IAC9C/K,EAAWwK,GAAwBsB,GAAgBd,IACnDhL,EAAWyK,GAAiBqB,GAAgBb,IAE5CjL,EAAW0K,GAAmBmB,GAAanB,IAC3C1K,EAAW2K,GAAqBkB,GAAalB,IAC7C3K,EAAW4K,GAA0BiB,GAAajB,IAClD5K,EAAW6K,GAAmBgB,GAAahB,IAC3C7K,EAAW0K,GAAmBoB,GAAgBpB,IAC9C1K,EAAW2K,GAAqBmB,GAAgBnB,IAChD3K,EAAW4K,GAA0BkB,GAAgBlB,IACrD5K,EAAW6K,GAAmBiB,GAAgBjB,IAC9C7K,EAAW8K,GAAsBe,GAAanB,IAC9C1K,EAAW+K,GAAwBc,GAAalB,IAChD3K,EAAWgL,GAA6Ba,GAAajB,IACrD5K,EAAWiL,GAAsBY,GAAahB,IAC9C7K,EAAW8K,GAAsBgB,GAAgBhB,IACjD9K,EAAW+K,GAAwBe,GAAgBf,IACnD/K,EAAWgL,GAA6Bc,GAAgBd,IACxDhL,EAAWiL,GAAsBa,GAAgBb,IAEjDjL,EAAWoK,GAAOyB,GAAazB,IAC/BpK,EAAWqK,GAAqBwB,GAAazB,IAC7CpK,EAAWoK,GAAO0B,GAAgBzB,IAClCrK,EAAWqK,GAAqByB,GAAgBzB,IAMhD/K,EAAMsF,EAAUjE,EAAK4K,IACrBjM,EAAMsF,EAAUnE,EAAQ8K,IACxBjM,EAAMsF,EAAUhE,EAAK2K,IACrBjM,EAAMsF,EAAUlE,EAAW6K,IAE3BvL,EAAWuL,GAAgBM,GAAaN,IACxCvL,EAAWuL,GAAgBO,GAAgBN,IAC3CxL,EAAWwL,GAA8BK,GAAaN,IACtDvL,EAAWwL,GAA8BM,GAAgBN,IAGzD,IAAIO,GAAqB,CAACtK,EAAWC,EAAYC,EAAUE,EAAWC,EAAUC,EAAOV,EAAYa,EAAQzB,EAAQ2B,EAAQE,EAAQ1B,EAAKK,EAAWsB,EAASC,EAAMC,EAAMC,EAAOC,EAAOG,EAAOG,EAAKF,EAAOpC,EAAKqC,GAoB9M,OAjBAhD,EAAWkE,EAAU6H,GAAoBN,IACzCnM,EAAM4E,EAAUtC,EAAI8J,IACpB1L,EAAWiK,EAAO8B,GAAoBN,IACtCnM,EAAM2K,EAAOrI,EAAI8J,IACjB1L,EAAWgK,EAAc+B,GAAoBN,IAG7CzL,EAAWyL,GAAaM,GAAoBN,IAC5CnM,EAAMmM,GAAa7J,EAAI8J,IAEvBpM,EAAMmM,GAAatJ,EAAKwJ,IACxB3L,EAAW2L,GAAiBI,GAAoBN,IAChDnM,EAAMoM,GAAgB/K,EAAKuK,IAC3B5L,EAAMoM,GAAgBjL,EAAQyK,IAC9B5L,EAAMoM,GAAgB9K,EAAKsK,IAC3B5L,EAAMoM,GAAgBhL,EAAW0K,IAE1BpH,CACT,CAwFA,SAASgI,GAAuBC,EAAOrN,EAAOmJ,GAC5C,IAAImE,EAAWnE,EAAO,GAAGW,EACrByD,EAASpE,EAAOA,EAAOlI,OAAS,GAAG+I,EAEvC,OAAO,IAAIqD,EADCrN,EAAMwN,OAAOF,EAAUC,EAASD,GACpBnE,EAC1B,CAEA,IAAIsE,GAA0B,qBAAZC,SAA2BA,SAAWA,QAAQD,MAAQ,WAAa,EAGjFE,GAAO,CACTC,QAAS,KACTC,OAAQ,KACRC,YAAa,GACb7I,gBAAiB,GACjB8I,aAAa,GA0Df,SAASC,KAEPL,GAAKC,QAAU,CACbzD,MAAOnF,GAAO2I,GAAK1I,iBACnBkE,OAAQ7E,IAEVqJ,GAAKE,OAAS,CACZ1D,MAAOa,KACP7B,OAAQ2B,IAMV,IAJA,IAAImD,EAAQ,CACVnF,iBAAkBA,IAGX9H,EAAI,EAAGA,EAAI2M,GAAKG,YAAY7M,OAAQD,IAC3C2M,GAAKG,YAAY9M,GAAG,GAAG,CACrB4M,QAASD,GAAKC,QACdC,OAAQF,GAAKE,OACbI,MAAOA,IAIXN,GAAKI,aAAc,CACrB,CAOA,SAASG,GAASzM,GAKhB,OAJKkM,GAAKI,aACRC,KArLJ,SAAa7D,EAAOnK,EAAOmJ,GAMzB,IALA,IAAIvH,EAAMuH,EAAOlI,OACbkN,EAAS,EACTC,EAAS,GACTC,EAAa,GAEVF,EAASvM,GAAK,CAQnB,IAPA,IAAIb,EAAQoJ,EACRmE,EAAc,KACdpO,EAAY,KACZqO,EAAc,EACdC,EAAkB,KAClBC,GAAgB,EAEbN,EAASvM,KAAS0M,EAAcjO,EAAMU,EAAOoI,EAAOgF,GAAQvO,KAGjEyO,EAAWvN,KAAKqI,EAAOgF,MAGzB,KAAOA,EAASvM,IAAQ1B,EAAYoO,GAAejO,EAAMU,EAAOoI,EAAOgF,GAAQvO,KAE7E0O,EAAc,MACdvN,EAAQb,GAEEJ,WACR2O,EAAe,EACfD,EAAkBzN,GACT0N,GAAgB,GACzBA,IAGFN,IACAI,IAGF,GAAIE,EAAe,EAGjB,IAAK,IAAIzN,EAAImN,EAASI,EAAavN,EAAImN,EAAQnN,IAC7CqN,EAAWvN,KAAKqI,EAAOnI,QAEpB,CAGDqN,EAAWpN,OAAS,IACtBmN,EAAOtN,KAAKsM,GAAuB7C,GAAMvK,EAAOqO,IAChDA,EAAa,IAIfF,GAAUM,EACVF,GAAeE,EAEf,IAAIpB,EAAQmB,EAAgB5O,EACxB8O,EAAYvF,EAAOwF,MAAMR,EAASI,EAAaJ,GACnDC,EAAOtN,KAAKsM,GAAuBC,EAAOrN,EAAO0O,GACnD,CACF,CAOA,OAJIL,EAAWpN,OAAS,GACtBmN,EAAOtN,KAAKsM,GAAuB7C,GAAMvK,EAAOqO,IAG3CD,CACT,CAsHSQ,CAAIjB,GAAKE,OAAO1D,MAAO1I,EAp3BhC,SAAe0I,EAAO1I,GAmBpB,IAbA,IAAIoN,EAsEN,SAAuBpN,GAKrB,IAJA,IAAImJ,EAAS,GACThJ,EAAMH,EAAIR,OACV6N,EAAQ,EAELA,EAAQlN,GAAK,CAClB,IAAImN,EAAQtN,EAAIuN,WAAWF,GACvBG,OAAS,EACTC,EAAOH,EAAQ,OAAUA,EAAQ,OAAUD,EAAQ,IAAMlN,IAAQqN,EAASxN,EAAIuN,WAAWF,EAAQ,IAAM,OAAUG,EAAS,MAASxN,EAAIqN,GACzIrN,EAAIkN,MAAMG,EAAOA,EAAQ,GAE3BlE,EAAO9J,KAAKoO,GACZJ,GAASI,EAAKjO,MAChB,CAEA,OAAO2J,CACT,CAtFiBuE,CAAc1N,EAAI2N,QAAQ,UAAU,SAAUC,GAC3D,OAAOA,EAAEC,aACX,KACIC,EAAYV,EAAS5N,OAErBkI,EAAS,GAITgF,EAAS,EAETqB,EAAa,EAEVA,EAAaD,GAAW,CAQ7B,IAPA,IAAIxO,EAAQoJ,EACRjK,EAAY,KACZuP,EAAc,EACdjB,EAAkB,KAClBC,GAAgB,EAChBiB,GAAqB,EAElBF,EAAaD,IAAcrP,EAAYG,EAAMU,EAAO8N,EAASW,OAClEzO,EAAQb,GAEEJ,WACR2O,EAAe,EACfiB,EAAoB,EACpBlB,EAAkBzN,GACT0N,GAAgB,IACzBA,GAAgBI,EAASW,GAAYvO,OACrCyO,KAGFD,GAAeZ,EAASW,GAAYvO,OACpCkN,GAAUU,EAASW,GAAYvO,OAC/BuO,IAIFrB,GAAUM,EACVe,GAAcE,EACdD,GAAehB,EAGftF,EAAOrI,KAAK,CACVlB,EAAG4O,EAAgB5O,EAEnBwJ,EAAG3H,EAAI+L,OAAOW,EAASsB,EAAaA,GAEpC3F,EAAGqE,EAASsB,EAEZzF,EAAGmE,GAGP,CAEA,OAAOhF,CACT,CAqzBqCwG,CAAMhC,GAAKC,QAAQzD,MAAO1I,GAC/D,CA8CA,IAAMmO,GAA8BtP,OAAOiE,OAAO,CAChDC,UAAW,KACXkD,QAASA,GACTmI,KAzCF,SAAcpO,GAKZ,IAJA,IAAIsH,EAAO7D,UAAUjE,OAAS,QAAsBkE,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,KAC3EiE,EAAS+E,GAASzM,GAClBqO,EAAW,GAEN9O,EAAI,EAAGA,EAAImI,EAAOlI,OAAQD,IAAK,CACtC,IAAIzB,EAAQ4J,EAAOnI,IAEfzB,EAAMqK,QAAYb,GAAQxJ,EAAMK,IAAMmJ,GACxC+G,EAAShP,KAAKvB,EAAM0K,WAExB,CAEA,OAAO6F,CACT,EA4BE9B,KAAMA,GACNpF,QAASA,GACTmH,uBAxGF,SAAgC7F,GAK9B,GAJIyD,GAAKI,aACPN,GAAK,uEAAwE9H,OAAOuE,EAAU,mJAG3F,YAAY/I,KAAK+I,GACpB,MAAM8F,MAAM,6FAGdrC,GAAK1I,gBAAgBnE,KAAKoJ,EAC5B,EA+FE+F,eA9HF,SAAwBC,EAAMC,GAC5B,IAAK,IAAInP,EAAI,EAAGA,EAAI2M,GAAKG,YAAY7M,OAAQD,IAC3C,GAAIkP,IAASvC,GAAKG,YAAY9M,GAAG,GAG/B,OAFAyM,GAAK,sBAAuB9H,OAAOuK,EAAM,oDACzCvC,GAAKG,YAAY9M,GAAK,CAACkP,EAAMC,IAKjCxC,GAAKG,YAAYhN,KAAK,CAACoP,EAAMC,IAEzBxC,GAAKI,aACPN,GAAK,8DAA+D9H,OAAOuK,EAAM,wIAErF,EAiHEE,MA5IF,WACEzC,GAAKC,QAAU,KACfD,GAAKE,OAAS,KACdF,GAAKG,YAAc,GACnBH,GAAK1I,gBAAkB,GACvB0I,GAAKI,aAAc,CACrB,EAuIE5M,KAfF,SAAcM,GACZ,IAAIsH,EAAO7D,UAAUjE,OAAS,QAAsBkE,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,KAC3EiE,EAAS+E,GAASzM,GACtB,OAAyB,IAAlB0H,EAAOlI,QAAgBkI,EAAO,GAAGS,UAAYb,GAAQI,EAAO,GAAGvJ,IAAMmJ,EAC9E,EAYEmF,SAAUA,KAGNmC,IAAuBC,EAAAA,EAAAA,GAAsBV,IAE/CW,IAAgBC,EAAAA,EAAAA,IAAqB,SAAUC,GAInD,SAASC,EAAkB1G,GACvB,GAAIA,GAAKA,EAAE2G,WAAY,OAAO3G,EAC9B,IAAI4G,EAAItQ,OAAOmJ,OAAO,MAatB,OAZIO,GACA1J,OAAOuQ,KAAK7G,GAAG8G,SAAQ,SAAUC,GAC7B,GAAU,YAANA,EAAiB,CACjB,IAAIC,EAAI1Q,OAAO2Q,yBAAyBjH,EAAG+G,GAC3CzQ,OAAO4Q,eAAeN,EAAGG,EAAGC,EAAE7I,IAAM6I,EAAI,CACpCG,YAAY,EACZhJ,IAAK,WAAc,OAAO6B,EAAE+G,EAAI,GAExC,CACJ,IAEJH,EAAW,QAAI5G,EACR1J,OAAOiE,OAAOqM,EACzB,CAEA,IAAIQ,EAAkCV,EAAkBL,IAMpDgB,EAAqB,CAKvBC,KAAM,QAEJC,EAAc,wBACdC,EAAW,cACXC,EAAQ,mBAERC,EAEJ,WACE,SAASA,EAAaC,GACpBnS,KAAKmS,MAAQA,CACf,CA0BA,OAxBAD,EAAa7R,UAAU+R,MAAQ,SAAUC,GACvC,GAAKA,EAAL,CAIA,IAAIC,EAAUD,EAAOE,MAAMR,GAE3B,OAAIO,EACK,MAAQA,EAAQ,GAAK,KAG9BA,EAAUD,EAAOE,MAAMP,IAGd,KAAOM,EAAQ,GAAK,KAG7BA,EAAUD,EAAOE,MAAMN,IAGdjS,KAAKmS,MAAMG,EAAQ,KAAO,IAAMA,EAAQ,GAAK,SADtD,CAhBA,CAmBF,EAEOJ,CACT,CA9BA,GAgCIM,EAAM,YACNC,EAAQ,WACRC,EAAO,SAEX,SAASC,EAAQjD,GACf,OAAO8C,EAAI7Q,KAAK+N,EAClB,CAEA,SAASkD,EAAQlD,GACf,OAAO+C,EAAM9Q,KAAK+N,EACpB,CAMA,IAAImD,EAEJ,WACE,SAASA,EAAiBC,EAAUC,EAAcC,QACnC,IAATA,IACFA,EAAO,cAGThT,KAAK8S,SAAWA,EAChB9S,KAAK+S,aAAeA,EACpB/S,KAAKgT,KAAOA,EACZhT,KAAKuB,MAAQ,aAGbvB,KAAKiT,MAAQ,EACbjT,KAAKkT,QAAU,EACflT,KAAKQ,MAAQ,GACbR,KAAKsP,OAAS,EACdtP,KAAKmT,cAAgB,GACrBnT,KAAKoT,OAAS,CACZC,WAAY,WACV,IAAI3D,EAAO1P,KAAKsT,OAEhB,GAAa,MAAT5D,GAAiB1P,KAAKuT,kBAMnB,CACL,GAAkB,eAAdvT,KAAKgT,MAAkC,OAATtD,EAAe,CAC/C,IAAI8D,EAAMxT,KAAKmT,cAAcrD,cAEjB,QAAR0D,GAAyB,aAARA,GACnBxT,KAAKyT,SAET,CAEAzT,KAAK0T,aAAa,QAGlB1T,KAAK8S,SAASa,WAChB,MAlBE3T,KAAK0T,aAAa,WAGlB1T,KAAK4T,eACL5T,KAAKyT,SAeT,EACAI,KAAM,WACJ,IAAInE,EAAO1P,KAAKsT,OACZE,EAAMxT,KAAKmT,cAEF,MAATzD,GAAiB1P,KAAKuT,kBAON,MAAT7D,GAAwB,WAAR8D,GAA4B,UAARA,GAC7CxT,KAAKyT,UACLzT,KAAK8S,SAASgB,aAAa9T,KAAK+T,kBAAoB,OAEpD/T,KAAKyT,UACLzT,KAAK8S,SAASgB,aAAapE,KAX3B1P,KAAK8S,SAASkB,aACdhU,KAAK0T,aAAa,WAGlB1T,KAAK4T,eACL5T,KAAKyT,UAQT,EACAQ,QAAS,WACP,IAAIvE,EAAO1P,KAAKyT,UAEH,MAAT/D,EACF1P,KAAK0T,aAAa,yBAGA,MAAThE,EACT1P,KAAK0T,aAAa,eAGA,MAAThE,GAAyB,MAATA,GAAgBkD,EAAQlD,MACjD1P,KAAK0T,aAAa,WAGlB1T,KAAKmT,cAAgB,GACrBnT,KAAK8S,SAASoB,gBACdlU,KAAKmU,gBAAgBzE,GAEzB,EACA0E,sBAAuB,WACrB,IAAI1E,EAAO1P,KAAKyT,UAEH,MAAT/D,GAAgC,MAAhB1P,KAAKsT,QACvBtT,KAAKyT,UACLzT,KAAK0T,aAAa,gBAGlB1T,KAAK8S,SAASuB,gBAIO,YAFF3E,EAAKrH,cAAgBrI,KAAKQ,MAAM8T,UAAUtU,KAAKsP,MAAOtP,KAAKsP,MAAQ,GAAGjH,gBAGvFrI,KAAKyT,UACLzT,KAAKyT,UACLzT,KAAKyT,UACLzT,KAAKyT,UACLzT,KAAKyT,UACLzT,KAAKyT,UACLzT,KAAK0T,aAAa,WAGd1T,KAAK8S,SAASyB,cAAcvU,KAAK8S,SAASyB,eAGpD,EACAC,QAAS,WAGH7B,EAFO3S,KAAKyT,YAGdzT,KAAK0T,aAAa,oBAItB,EACAe,kBAAmB,WACjB,IAAI/E,EAAO1P,KAAKyT,UAEZd,EAAQjD,KAGV1P,KAAK0T,aAAa,eAGd1T,KAAK8S,SAAS4B,qBAAqB1U,KAAK8S,SAAS4B,oBAAoBhF,EAAKI,eAElF,EACA6E,YAAa,WACX,IAAIjF,EAAO1P,KAAKyT,UAEZd,EAAQjD,GACV1P,KAAK0T,aAAa,oBAGA,MAAThE,GACL1P,KAAK8S,SAAS8B,YAAY5U,KAAK8S,SAAS8B,aAC5C5U,KAAK0T,aAAa,eAId1T,KAAK8S,SAAS4B,qBAAqB1U,KAAK8S,SAAS4B,oBAAoBhF,EAAKI,cAElF,EACA+E,iBAAkB,WAChB,IAAInF,EAAO1P,KAAKyT,UAEhB,IAAId,EAAQjD,GAEL,GAAa,MAATA,EACL1P,KAAK8S,SAAS8B,YAAY5U,KAAK8S,SAAS8B,aAC5C5U,KAAK0T,aAAa,kBAGb,CACL,IAAIoB,EAAepF,EAAKrH,cAAgBrI,KAAKQ,MAAM8T,UAAUtU,KAAKsP,MAAOtP,KAAKsP,MAAQ,GAAGjH,cACrF0M,EAA0C,WAA/BD,EAAazM,cACxB2M,EAA0C,WAA/BF,EAAazM,eAExB0M,GAAYC,KACdhV,KAAKyT,UACLzT,KAAKyT,UACLzT,KAAKyT,UACLzT,KAAKyT,UACLzT,KAAKyT,UACLzT,KAAKyT,WAGHsB,EACF/U,KAAK0T,aAAa,6BAGTsB,GACThV,KAAK0T,aAAa,4BAItB,CACF,EACAuB,0BAA2B,WACzB,IAAIvF,EAAO1P,KAAKsT,OAEZX,EAAQjD,IACV1P,KAAK0T,aAAa,iCAGlB1T,KAAKyT,WACa,MAAT/D,GACT1P,KAAK0T,aAAa,uCAGlB1T,KAAKyT,WACa,MAAT/D,GACT1P,KAAK0T,aAAa,uCAGlB1T,KAAKyT,WACa,MAAT/D,IACT1P,KAAKyT,UACDzT,KAAK8S,SAAS8B,YAAY5U,KAAK8S,SAAS8B,aAC5C5U,KAAK0T,aAAa,cAItB,EACAwB,oCAAqC,WACnC,IAAIxF,EAAO1P,KAAKyT,UAEH,MAAT/D,EACF1P,KAAK0T,aAAa,gCAGA,MAAThE,GACL1P,KAAK8S,SAAS8B,YAAY5U,KAAK8S,SAAS8B,aAC5C5U,KAAK0T,aAAa,eAId1T,KAAK8S,SAASqC,iCAAiCnV,KAAK8S,SAASqC,gCAAgCzF,EAErG,EACA0F,oCAAqC,WACnC,IAAI1F,EAAO1P,KAAKyT,UAEH,MAAT/D,EACF1P,KAAK0T,aAAa,gCAGA,MAAThE,GACL1P,KAAK8S,SAAS8B,YAAY5U,KAAK8S,SAAS8B,aAC5C5U,KAAK0T,aAAa,eAId1T,KAAK8S,SAASqC,iCAAiCnV,KAAK8S,SAASqC,gCAAgCzF,EAErG,EACA2F,6BAA8B,WAC5B,IAAI3F,EAAO1P,KAAKyT,UAEZd,EAAQjD,GACV1P,KAAK0T,aAAa,4CAGA,MAAThE,GACL1P,KAAK8S,SAAS8B,YAAY5U,KAAK8S,SAAS8B,aAC5C5U,KAAK0T,aAAa,eAGA,MAAThE,EACT1P,KAAK0T,aAAa,uCAGA,MAAThE,GACT1P,KAAK0T,aAAa,sCAItB,EACA4B,yCAA0C,WACxC,IAAI5F,EAAO1P,KAAKyT,UAEZd,EAAQjD,KAEQ,MAATA,GACL1P,KAAK8S,SAAS8B,YAAY5U,KAAK8S,SAAS8B,aAC5C5U,KAAK0T,aAAa,eAGA,MAAThE,EACT1P,KAAK0T,aAAa,uCAGA,MAAThE,GACT1P,KAAK0T,aAAa,uCAItB,EACA6B,oCAAqC,WACnC,IAAI7F,EAAO1P,KAAKyT,UAEH,MAAT/D,EACF1P,KAAK0T,aAAa,gCAGA,MAAThE,GACL1P,KAAK8S,SAAS8B,YAAY5U,KAAK8S,SAAS8B,aAC5C5U,KAAK0T,aAAa,eAId1T,KAAK8S,SAAS0C,iCAAiCxV,KAAK8S,SAAS0C,gCAAgC9F,EAErG,EACA+F,oCAAqC,WACnC,IAAI/F,EAAO1P,KAAKyT,UAEH,MAAT/D,EACF1P,KAAK0T,aAAa,gCAGA,MAAThE,GACL1P,KAAK8S,SAAS8B,YAAY5U,KAAK8S,SAAS8B,aAC5C5U,KAAK0T,aAAa,eAId1T,KAAK8S,SAAS0C,iCAAiCxV,KAAK8S,SAAS0C,gCAAgC9F,EAErG,EACAgG,6BAA8B,WAC5B,IAAIhG,EAAO1P,KAAKyT,UAEZd,EAAQjD,IAEQ,MAATA,IACL1P,KAAK8S,SAAS8B,YAAY5U,KAAK8S,SAAS8B,aAC5C5U,KAAK0T,aAAa,cAItB,EACAiC,aAAc,WACZ,IAAIjG,EAAO1P,KAAKyT,UAEH,MAAT/D,EACF1P,KAAK0T,aAAa,oBAGA,MAAThE,GACT1P,KAAK8S,SAAS8C,gBACd5V,KAAK0T,aAAa,gBAIlB1T,KAAK8S,SAAS+C,oBAAoBnG,GAClC1P,KAAK0T,aAAa,WAItB,EACAoC,iBAAkB,WAChB,IAAIpG,EAAO1P,KAAKyT,UAEH,MAAT/D,EACF1P,KAAK0T,aAAa,cAGA,MAAThE,GACT1P,KAAK8S,SAAS8C,gBACd5V,KAAK0T,aAAa,gBAIlB1T,KAAK8S,SAAS+C,oBAAoB,KAClC7V,KAAK0T,aAAa,WAItB,EACAqC,QAAS,WACP,IAAIrG,EAAO1P,KAAKyT,UAEH,MAAT/D,EACF1P,KAAK0T,aAAa,kBAIlB1T,KAAK8S,SAAS+C,oBAAoBnG,EAEtC,EACAsG,eAAgB,WACd,IAAItG,EAAO1P,KAAKyT,UAEH,MAAT/D,EACF1P,KAAK0T,aAAa,eAIlB1T,KAAK8S,SAAS+C,oBAAoB,IAAMnG,GACxC1P,KAAK0T,aAAa,WAItB,EACAuC,WAAY,WACV,IAAIvG,EAAO1P,KAAKyT,UAEH,MAAT/D,GACF1P,KAAK8S,SAAS8C,gBACd5V,KAAK0T,aAAa,gBAIlB1T,KAAK8S,SAAS+C,oBAAoB,KAAOnG,GACzC1P,KAAK0T,aAAa,WAItB,EACAhM,QAAS,WACP,IAAIgI,EAAO1P,KAAKyT,UAEZd,EAAQjD,GACV1P,KAAK0T,aAAa,uBAGA,MAAThE,EACT1P,KAAK0T,aAAa,uBAGA,MAAThE,GACT1P,KAAK8S,SAASoD,YACdlW,KAAK0T,aAAa,eAIlB1T,KAAKmU,gBAAgBzE,EAEzB,EACAyG,WAAY,WACV,IAAIzG,EAAO1P,KAAKyT,UAEZd,EAAQjD,IACV1P,KAAK0T,aAAa,uBAGlB1T,KAAKmT,cAAgB,IACH,MAATzD,GACT1P,KAAK0T,aAAa,uBAGlB1T,KAAKmT,cAAgB,IACH,MAATzD,GACT1P,KAAK8S,SAASoD,YACdlW,KAAK0T,aAAa,cAGlB1T,KAAKmT,cAAgB,IAErBnT,KAAKmU,gBAAgBzE,EAEzB,EACA0G,oBAAqB,WACnB,IAAI1G,EAAO1P,KAAKsT,OAEZX,EAAQjD,GACV1P,KAAKyT,UAEa,MAAT/D,GACT1P,KAAK0T,aAAa,uBAGlB1T,KAAKyT,WACa,MAAT/D,GACT1P,KAAKyT,UACLzT,KAAK8S,SAASoD,YACdlW,KAAK0T,aAAa,eAGA,MAAThE,GACT1P,KAAK8S,SAASuD,kBAAkB,gDAChCrW,KAAK0T,aAAa,iBAGlB1T,KAAK8S,SAASwD,iBACdtW,KAAKyT,UACLzT,KAAK8S,SAASyD,sBAAsB7G,KAEpC1P,KAAK0T,aAAa,iBAGlB1T,KAAK8S,SAASwD,iBAElB,EACAE,cAAe,WACb,IAAI9G,EAAO1P,KAAKsT,OAEZX,EAAQjD,IACV1P,KAAK0T,aAAa,sBAGlB1T,KAAKyT,WACa,MAAT/D,GACT1P,KAAK8S,SAAS2D,qBAAoB,GAClCzW,KAAK8S,SAAS4D,uBACd1W,KAAKyT,UACLzT,KAAK0T,aAAa,wBAGA,MAAThE,GACT1P,KAAK0T,aAAa,wBAGlB1T,KAAKyT,WACa,MAAT/D,GACT1P,KAAK8S,SAAS2D,qBAAoB,GAClCzW,KAAK8S,SAAS4D,uBACd1W,KAAKyT,UACLzT,KAAK8S,SAASoD,YACdlW,KAAK0T,aAAa,eAGA,MAAThE,GAAyB,MAATA,GAAyB,MAATA,GACzC1P,KAAK8S,SAASuD,kBAAkB3G,EAAO,oDACvC1P,KAAKyT,UACLzT,KAAK8S,SAASyD,sBAAsB7G,KAEpC1P,KAAKyT,UACLzT,KAAK8S,SAASyD,sBAAsB7G,GAExC,EACAiH,mBAAoB,WAClB,IAAIjH,EAAO1P,KAAKsT,OAEZX,EAAQjD,GACV1P,KAAKyT,UAEa,MAAT/D,GACT1P,KAAK8S,SAAS2D,qBAAoB,GAClCzW,KAAK8S,SAAS4D,uBACd1W,KAAKyT,UACLzT,KAAK0T,aAAa,wBAGA,MAAThE,GACT1P,KAAKyT,UACLzT,KAAK0T,aAAa,yBAGA,MAAThE,GACT1P,KAAK8S,SAAS2D,qBAAoB,GAClCzW,KAAK8S,SAAS4D,uBACd1W,KAAKyT,UACLzT,KAAK8S,SAASoD,YACdlW,KAAK0T,aAAa,gBAIlB1T,KAAK8S,SAAS2D,qBAAoB,GAClCzW,KAAK8S,SAAS4D,uBACd1W,KAAK0T,aAAa,iBAGlB1T,KAAK8S,SAASwD,iBACdtW,KAAKyT,UACLzT,KAAK8S,SAASyD,sBAAsB7G,GAExC,EACAkH,qBAAsB,WACpB,IAAIlH,EAAO1P,KAAKsT,OAEZX,EAAQjD,GACV1P,KAAKyT,UACa,MAAT/D,GACT1P,KAAK0T,aAAa,8BAGlB1T,KAAK8S,SAAS2D,qBAAoB,GAClCzW,KAAKyT,WACa,MAAT/D,GACT1P,KAAK0T,aAAa,8BAGlB1T,KAAK8S,SAAS2D,qBAAoB,GAClCzW,KAAKyT,WACa,MAAT/D,GACT1P,KAAK8S,SAAS2D,qBAAoB,GAClCzW,KAAK8S,SAAS4D,uBACd1W,KAAKyT,UACLzT,KAAK8S,SAASoD,YACdlW,KAAK0T,aAAa,gBAIlB1T,KAAK0T,aAAa,0BAGlB1T,KAAK8S,SAAS2D,qBAAoB,GAClCzW,KAAKyT,UACLzT,KAAK8S,SAAS+D,uBAAuBnH,GAEzC,EACAoH,2BAA4B,WAC1B,IAAIpH,EAAO1P,KAAKyT,UAEH,MAAT/D,GACF1P,KAAK8S,SAAS4D,uBACd1W,KAAK0T,aAAa,8BAGA,MAAThE,EACT1P,KAAK8S,SAAS+D,uBAAuB7W,KAAK+T,kBAAoB,KAE9D/T,KAAK8S,SAAS+D,uBAAuBnH,EAEzC,EACAqH,2BAA4B,WAC1B,IAAIrH,EAAO1P,KAAKyT,UAEH,MAAT/D,GACF1P,KAAK8S,SAAS4D,uBACd1W,KAAK0T,aAAa,8BAGA,MAAThE,EACT1P,KAAK8S,SAAS+D,uBAAuB7W,KAAK+T,kBAAoB,KAE9D/T,KAAK8S,SAAS+D,uBAAuBnH,EAEzC,EACAsH,uBAAwB,WACtB,IAAItH,EAAO1P,KAAKsT,OAEZX,EAAQjD,IACV1P,KAAK8S,SAAS4D,uBACd1W,KAAKyT,UACLzT,KAAK0T,aAAa,wBAGA,MAAThE,GACT1P,KAAK8S,SAAS4D,uBACd1W,KAAKyT,UACLzT,KAAK0T,aAAa,wBAGA,MAAThE,GACT1P,KAAKyT,UACLzT,KAAK8S,SAAS+D,uBAAuB7W,KAAK+T,kBAAoB,MAC5C,MAATrE,GACT1P,KAAK8S,SAAS4D,uBACd1W,KAAKyT,UACLzT,KAAK8S,SAASoD,YACdlW,KAAK0T,aAAa,gBAIlB1T,KAAKyT,UACLzT,KAAK8S,SAAS+D,uBAAuBnH,GAEzC,EACAuH,0BAA2B,WACzB,IAAIvH,EAAO1P,KAAKsT,OAEZX,EAAQjD,IACV1P,KAAKyT,UACLzT,KAAK0T,aAAa,wBAGA,MAAThE,GACT1P,KAAKyT,UACLzT,KAAK0T,aAAa,wBAGA,MAAThE,GACT1P,KAAKyT,UACLzT,KAAK8S,SAASoD,YACdlW,KAAK0T,aAAa,eAIlB1T,KAAK0T,aAAa,sBAItB,EACAwD,oBAAqB,WAGN,MAFFlX,KAAKsT,QAGdtT,KAAKyT,UACLzT,KAAK8S,SAASqE,uBACdnX,KAAK8S,SAASoD,YACdlW,KAAK0T,aAAa,eAIlB1T,KAAK0T,aAAa,sBAItB,EACA0D,WAAY,WACV,IAAI1H,EAAO1P,KAAKyT,WAEH,MAAT/D,GAAyB,MAATA,GAAgBkD,EAAQlD,MAC1C1P,KAAK0T,aAAa,cAGlB1T,KAAKmT,cAAgB,GACrBnT,KAAK8S,SAASuE,cACdrX,KAAKmU,gBAAgBzE,GAEzB,GAEF1P,KAAK4Q,OACP,CA2GA,OAzGAiC,EAAiBxS,UAAUuQ,MAAQ,WACjC5Q,KAAK0T,aAAa,cAGlB1T,KAAKQ,MAAQ,GACbR,KAAKmT,cAAgB,GACrBnT,KAAKsP,MAAQ,EACbtP,KAAKiT,KAAO,EACZjT,KAAKkT,OAAS,EACdlT,KAAK8S,SAASlC,OAChB,EAEAiC,EAAiBxS,UAAUqT,aAAe,SAAUnS,GAClDvB,KAAKuB,MAAQA,CACf,EAEAsR,EAAiBxS,UAAUqO,SAAW,SAAUlO,GAC9CR,KAAK4Q,QACL5Q,KAAKsX,aAAa9W,GAClBR,KAAKuX,aACP,EAEA1E,EAAiBxS,UAAUiX,aAAe,SAAU9W,GAGlD,IAFAR,KAAKQ,OAxtBT,SAAyBA,GACvB,OAAOA,EAAMoP,QAAQ8C,EAAM,KAC7B,CAstBkB8E,CAAgBhX,GAEvBR,KAAKsP,MAAQtP,KAAKQ,MAAMiB,QAAQ,CACrC,IAAIgW,EAAUzX,KAAKoT,OAAOpT,KAAKuB,OAE/B,QAAgBoE,IAAZ8R,EAGF,MAAM,IAAIjH,MAAM,mBAAqBxQ,KAAKuB,OAF1CkW,EAAQC,KAAK1X,KAIjB,CACF,EAEA6S,EAAiBxS,UAAUkX,YAAc,WACvCvX,KAAK2X,WACP,EAEA9E,EAAiBxS,UAAUsX,UAAY,WAClB,SAAf3X,KAAKuB,QACPvB,KAAK8S,SAASkB,aACdhU,KAAK0T,aAAa,cAItB,EAEAb,EAAiBxS,UAAUiT,KAAO,WAChC,OAAOtT,KAAKQ,MAAMoX,OAAO5X,KAAKsP,MAChC,EAEAuD,EAAiBxS,UAAUoT,QAAU,WACnC,IAAI/D,EAAO1P,KAAKsT,OAUhB,OATAtT,KAAKsP,QAEQ,OAATI,GACF1P,KAAKiT,OACLjT,KAAKkT,OAAS,GAEdlT,KAAKkT,SAGAxD,CACT,EAEAmD,EAAiBxS,UAAU0T,eAAiB,WAC1C,IAAIxJ,EAAWvK,KAAKQ,MAAMqX,QAAQ,IAAK7X,KAAKsP,OAE5C,IAAkB,IAAd/E,EAAJ,CAIA,IAAI8H,EAASrS,KAAKQ,MAAM2O,MAAMnP,KAAKsP,MAAO/E,GACtC1I,EAAQ7B,KAAK+S,aAAaX,MAAMC,GAEpC,GAAIxQ,EAAO,CAGT,IAFA,IAAIiW,EAAQzF,EAAO5Q,OAEZqW,GACL9X,KAAKyT,UACLqE,IAKF,OADA9X,KAAKyT,UACE5R,CACT,CAhBA,CAiBF,EAEAgR,EAAiBxS,UAAUuT,aAAe,WACxC5T,KAAK8S,SAASmB,SAChB,EAEApB,EAAiBxS,UAAU8T,gBAAkB,SAAUzE,GACrD1P,KAAKmT,eAAiBzD,EACtB1P,KAAK8S,SAASqB,gBAAgBzE,EAChC,EAEAmD,EAAiBxS,UAAUkT,gBAAkB,WAC3C,IAAIC,EAAMxT,KAAKmT,cACf,MAAe,UAARK,GAAwE,aAArDxT,KAAKQ,MAAM8T,UAAUtU,KAAKsP,MAAOtP,KAAKsP,MAAQ,IAA6B,UAARkE,GAAwE,aAArDxT,KAAKQ,MAAM8T,UAAUtU,KAAKsP,MAAOtP,KAAKsP,MAAQ,IAA6B,WAARkE,GAAyE,eAArDxT,KAAKQ,MAAM8T,UAAUtU,KAAKsP,MAAOtP,KAAKsP,MAAQ,EACvP,EAEOuD,CACT,CAryBA,GAuyBIkF,EAEJ,WACE,SAASA,EAAUhF,EAAc3J,QACf,IAAZA,IACFA,EAAU,CAAC,GAGbpJ,KAAKoJ,QAAUA,EACfpJ,KAAKD,MAAQ,KACbC,KAAKgY,UAAY,EACjBhY,KAAKiY,YAAc,EACnBjY,KAAK2J,OAAS,GACd3J,KAAKkY,UAAY,IAAIrF,EAAiB7S,KAAM+S,EAAc3J,EAAQ4J,MAClEhT,KAAKmY,uBAAoBxS,CAC3B,CAiOA,OA/NAoS,EAAU1X,UAAUqO,SAAW,SAAUlO,GAGvC,OAFAR,KAAK2J,OAAS,GACd3J,KAAKkY,UAAUxJ,SAASlO,GACjBR,KAAK2J,MACd,EAEAoO,EAAU1X,UAAUiX,aAAe,SAAU9W,GAG3C,OAFAR,KAAK2J,OAAS,GACd3J,KAAKkY,UAAUZ,aAAa9W,GACrBR,KAAK2J,MACd,EAEAoO,EAAU1X,UAAUkX,YAAc,WAGhC,OAFAvX,KAAK2J,OAAS,GACd3J,KAAKkY,UAAUX,cACRvX,KAAK2J,OAAO,EACrB,EAEAoO,EAAU1X,UAAUuQ,MAAQ,WAC1B5Q,KAAKD,MAAQ,KACbC,KAAKgY,UAAY,EACjBhY,KAAKiY,YAAc,CACrB,EAEAF,EAAU1X,UAAU+X,QAAU,WAC5B,IAAIrY,EAAQC,KAAKD,MAEjB,GAAc,OAAVA,EACF,MAAM,IAAIyQ,MAAM,+BAGlB,GAAyB,IAArB9K,UAAUjE,OACZ,OAAO1B,EAGT,IAAK,IAAIyB,EAAI,EAAGA,EAAIkE,UAAUjE,OAAQD,IACpC,GAAIzB,EAAMwJ,OAAS7D,UAAUlE,GAC3B,OAAOzB,EAIX,MAAM,IAAIyQ,MAAM,+BAAiCzQ,EAAMwJ,KACzD,EAEAwO,EAAU1X,UAAUiB,KAAO,SAAUvB,GACnCC,KAAKD,MAAQA,EACbC,KAAK2J,OAAOrI,KAAKvB,EACnB,EAEAgY,EAAU1X,UAAUgY,iBAAmB,WACrC,OAAOrY,KAAKmY,iBACd,EAEAJ,EAAU1X,UAAUiY,WAAa,WAC3BtY,KAAKoJ,QAAQmP,MACfvY,KAAKoY,UAAUG,IAAM,CACnB5N,MAAO,CACLsI,KAAMjT,KAAKgY,UACX9E,OAAQlT,KAAKiY,aAEfrN,IAAK,CACHqI,KAAMjT,KAAKkY,UAAUjF,KACrBC,OAAQlT,KAAKkY,UAAUhF,UAK7BlT,KAAKgY,UAAYhY,KAAKkY,UAAUjF,KAChCjT,KAAKiY,YAAcjY,KAAKkY,UAAUhF,MACpC,EAGA6E,EAAU1X,UAAUkU,aAAe,WACjCvU,KAAKsB,KAAK,CACRiI,KAAM,UAGNmH,KAAM,IAEV,EAEAqH,EAAU1X,UAAUqU,oBAAsB,SAAUhF,GAClD1P,KAAKoY,QAAQ,WAEX1H,MAAQhB,CACZ,EAEAqI,EAAU1X,UAAU8U,gCAAkC,SAAUzF,GAC9D,IAAI8E,EAAUxU,KAAKoY,QAAQ,gBAIMzS,IAA7B6O,EAAQgE,iBACVhE,EAAQgE,iBAAmB9I,EAE3B8E,EAAQgE,kBAAoB9I,CAEhC,EAEAqI,EAAU1X,UAAUmV,gCAAkC,SAAU9F,GAC9D,IAAI8E,EAAUxU,KAAKoY,QAAQ,gBAIMzS,IAA7B6O,EAAQiE,iBACVjE,EAAQiE,iBAAmB/I,EAE3B8E,EAAQiE,kBAAoB/I,CAEhC,EAEAqI,EAAU1X,UAAUuU,WAAa,WAC/B5U,KAAKsY,YACP,EAEAP,EAAU1X,UAAUsT,UAAY,WAC9B3T,KAAKsB,KAAK,CACRiI,KAAM,QAGN1H,MAAO,IAEX,EAEAkW,EAAU1X,UAAUyT,aAAe,SAAUpE,GAC3C1P,KAAKoY,QAAQ,SAEXvW,OAAS6N,CACb,EAEAqI,EAAU1X,UAAU2T,WAAa,WAC/BhU,KAAKsY,YACP,EAGAP,EAAU1X,UAAUgU,aAAe,WACjCrU,KAAKsB,KAAK,CACRiI,KAAM,UAGN1H,MAAO,IAEX,EAEAkW,EAAU1X,UAAUwV,oBAAsB,SAAUnG,GAClD1P,KAAKoY,QAAQ,WAEXvW,OAAS6N,CACb,EAEAqI,EAAU1X,UAAUuV,cAAgB,WAClC5V,KAAKsY,YACP,EAGAP,EAAU1X,UAAU4T,QAAU,WAAa,EAE3C8D,EAAU1X,UAAU6T,cAAgB,WAClClU,KAAKsB,KAAK,CACRiI,KAAM,WAGN7B,QAAS,GACTM,WAAY,GACZ0Q,aAAa,GAEjB,EAEAX,EAAU1X,UAAUgX,YAAc,WAChCrX,KAAKsB,KAAK,CACRiI,KAAM,SAGN7B,QAAS,IAEb,EAEAqQ,EAAU1X,UAAU6V,UAAY,WAC9BlW,KAAKsY,YACP,EAEAP,EAAU1X,UAAU8W,qBAAuB,WACzCnX,KAAKoY,QAAQ,YAEXM,aAAc,CAClB,EAGAX,EAAU1X,UAAU8T,gBAAkB,SAAUzE,GAC9C1P,KAAKoY,QAAQ,WAEX,UAEA1Q,SAAWgI,CACf,EAGAqI,EAAU1X,UAAUiW,eAAiB,WACnCtW,KAAKmY,kBAAoB,CAAC,GAAI,IAAI,EACpC,EAEAJ,EAAU1X,UAAUkW,sBAAwB,SAAU7G,GACpD1P,KAAKqY,mBAAmB,IAAM3I,CAChC,EAEAqI,EAAU1X,UAAUoW,oBAAsB,SAAUkC,GAClD3Y,KAAKqY,mBAAmB,GAAKM,CAC/B,EAEAZ,EAAU1X,UAAUwW,uBAAyB,SAAUnH,GACrD1P,KAAKqY,mBAAmB,IAAM3I,CAChC,EAEAqI,EAAU1X,UAAUqW,qBAAuB,WACzC1W,KAAKoY,QAAQ,YAEXpQ,WAAW1G,KAAKtB,KAAKmY,kBACzB,EAEAJ,EAAU1X,UAAUgW,kBAAoB,SAAUuC,GAChD5Y,KAAKoY,UAAUS,YAAcD,CAC/B,EAEOb,CACT,CA/OA,GAiPA,SAASrJ,EAASlO,EAAO4I,GAEvB,OADgB,IAAI2O,EAAU,IAAI7F,EAAaL,GAAqBzI,GACnDsF,SAASlO,EAC5B,CAEA,IAAI0H,EAAU0J,EAAmB1J,QAC7B4Q,EAAW,WACXC,EAAS,SACTC,EAAQ,QACRC,EAAU,UACVC,EAAU,UAqGd,SAASC,EAAalX,EAAKkG,GAIzB,IAHA,IAAIwB,EAASiI,EAAmBlD,SAASzM,GACrCmJ,EAAS,GAEJ5J,EAAI,EAAGA,EAAImI,EAAOlI,OAAQD,IAAK,CACtC,IAAIzB,EAAQ4J,EAAOnI,GAEnB,GAAgB,OAAZzB,EAAMK,GAAc+H,EAAKV,MAC3B2D,EAAO9J,KAAK,CACViI,KAAMuP,EACNpR,QAAS,KACTM,WAAY,GACZ0Q,aAAa,SAGV,GAAK3Y,EAAMqK,QAAWjC,EAAKY,MAAMhJ,GAAjC,CAQP,IAAIqZ,EAAgBjR,EAAKI,QAAQxI,GAC7B2I,EAAY0Q,EAAc1Q,UAC1BG,EAAgBuQ,EAAcvQ,cAC9BnB,EAAU0R,EAAc1R,QACxBK,EAAYqR,EAAcrR,UAC1BJ,EAASyR,EAAczR,OACvBC,EAAMwR,EAAcxR,IACpBI,EAAaoR,EAAcpR,WAC3BF,EAAWsR,EAActR,SAGzBuR,EAAiB,CAAC,CAAC,OAAQxQ,IAkB/B,IAAK,IAAIyQ,KAhBLvR,GACFsR,EAAe/X,KAAK,CAAC,QAASyG,IAG5BJ,GACF0R,EAAe/X,KAAK,CAAC,SAAUqG,IAG7BC,GACFyR,EAAe/X,KAAK,CAAC,MAAOsG,IAG1BE,GAAYY,EAAUjH,OAASqG,IACjCY,EAAYA,EAAU4L,UAAU,EAAGxM,GAAY,UAGhCE,EACfqR,EAAe/X,KAAK,CAACgY,EAAMtR,EAAWsR,KAIxClO,EAAO9J,KAAK,CACViI,KAAMuP,EACNpR,QAASA,EACTM,WAAYqR,EACZX,aAAa,IAEftN,EAAO9J,KAAK,CACViI,KAAMyP,EACNnX,MAAO6G,IAET0C,EAAO9J,KAAK,CACViI,KAAMwP,EACNrR,QAASA,GAhDX,MALE0D,EAAO9J,KAAK,CACViI,KAAMyP,EACNnX,MAAO9B,EAAM6I,YAqDnB,CAEA,OAAOwC,CACT,CAiBA,SAASmO,EAAc7R,EAASiC,EAAQnI,EAAGgY,GAIzC,IAFA,IAAIC,EAAa,EAEVjY,EAAImI,EAAOlI,QAAUgY,EAAa,GAAG,CAC1C,IAAI1Z,EAAQ4J,EAAOnI,GAEfzB,EAAMwJ,OAASuP,GAAY/Y,EAAM2H,QAAQW,gBAAkBX,EAE7D+R,IACS1Z,EAAMwJ,OAASwP,GAAUhZ,EAAM2H,QAAQW,gBAAkBX,GAElE+R,IAGFD,EAAclY,KAAKvB,GACnByB,GACF,CAGA,OAAOgY,CACT,CAWA,SAASE,EAAeC,GAGtB,IAFA,IAAIC,EAAW,GAENpY,EAAI,EAAGA,EAAImY,EAAMlY,OAAQD,IAAK,CACrC,IAAIkP,EAAOiJ,EAAMnY,GAAG,GAChBkI,EAAQiQ,EAAMnY,GAAG,GACrBoY,EAAStY,KAAK,GAAG6E,OAAOuK,EAAM,MAAOvK,OAAkBuD,EAT7CkG,QAAQ,KAAM,UASuC,KACjE,CAEA,OAAOgK,CACT,CAEA3I,EAAO4I,QArOP,SAAqB5X,GACnB,IAAIkG,EAAOzC,UAAUjE,OAAS,QAAsBkE,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAG5EiE,EAAS+E,EAASzM,GAClB6X,EAAkB,GAClBC,EAAY,GAChB5R,EAAO,IAAID,EAAQC,GAEnB,IAAK,IAAI3G,EAAI,EAAGA,EAAImI,EAAOlI,OAAQD,IAAK,CACtC,IAAIzB,EAAQ4J,EAAOnI,GAEnB,GAAIzB,EAAMwJ,OAASuP,EAcZ,GAAI/Y,EAAMwJ,OAASyP,EAAnB,CAOP,IAAIgB,EAAgBb,EAAapZ,EAAM8B,MAAOsG,GAC9C2R,EAAgBxY,KAAK2Y,MAAMH,EAAiBE,EAJ5C,MAFEF,EAAgBxY,KAAKvB,OAhBvB,CACE+Z,EAAgBxY,KAAKvB,GAErB,IAAI2H,EAAU3H,EAAM2H,QAAQW,cACxB6R,EAAwB,MAAZxS,GAAmBS,EAAKF,WAAW4P,QAAQnQ,IAAY,EAEvE,IAAKwS,EACH,SAGF,IAAIC,EAAaL,EAAgBrY,OACjC8X,EAAc7R,EAASiC,IAAUnI,EAAGsY,GACpCtY,GAAKsY,EAAgBrY,OAAS0Y,EAAa,CAM7C,CAKF,CAGA,IAAK,IAAItT,EAAK,EAAGA,EAAKiT,EAAgBrY,OAAQoF,IAAM,CAClD,IAAIuT,EAASN,EAAgBjT,GAE7B,OAAQuT,EAAO7Q,MACb,KAAKuP,EAED,IAAIuB,EAAO,IAAMD,EAAO1S,QAExB,GAAI0S,EAAOpS,WAAWvG,OAAS,EAAG,CAChC,IAAIkY,EAAQD,EAAeU,EAAOpS,YAClCqS,GAAQ,IAAMV,EAAMtO,KAAK,IAC3B,CAEAgP,GAAQ,IACRN,EAAUzY,KAAK+Y,GACf,MAGJ,KAAKtB,EACHgB,EAAUzY,KAAK,KAAK6E,OAAOiU,EAAO1S,QAAS,MAC3C,MAEF,KAAKsR,EACHe,EAAUzY,KAAgB8Y,EAAOvY,OACjC,MAEF,KAAKoX,EACHc,EAAUzY,KAAK,UAAO6E,OAAkBiU,EAAOvY,MAAQ,WACvD,MAEF,KAAKqX,EAED,IAAI1E,EAAU,aAAarO,OAAOiU,EAAO1J,MAErC0J,EAAO5B,mBACThE,GAAW,YAAarO,OAAOiU,EAAO5B,iBAAkB,MAGtD4B,EAAO3B,mBACTjE,GAAW,KAAMrO,OAAOiU,EAAO3B,iBAAkB,MAGnDjE,GAAW,IACXuF,EAAUzY,KAAKkT,GAIvB,CAEA,OAAOuF,EAAU1O,KAAK,GACxB,CA8IA,IAEMiP,IAA2BC,EAAAA,EAAAA,GAAwBxJ,IAEzD,SAASyJ,GAAS1V,EAAMsE,GACtB,IAAMqR,EAAgBH,GAAYxV,GAClC,OAAoB,OAAZsE,QAAgC,IAAZA,OAAqB,EAASA,EAAQsR,SAC9DD,EAAc7K,QAAQ,OAAQ,kBAAkBA,QAAQ,SAAU,mBAClE6K,CACN,CAOA,SAASE,GAAW7V,GAClB,OAAOA,EAAK,GAAGuD,cAAgBvD,EAAKqK,MAAM,EAC5C,C","sources":["../.yalc/@esri/hub-components/dist/esm/string-dcf03d71.js"],"sourcesContent":["import { g as getAugmentedNamespace, c as createCommonjsModule, b as getDefaultExportFromCjs } from './_commonjsHelpers-11ca3be1.js';\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n * @param {string|class} token to emit\n */\nfunction State(token) {\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n\n  this.jr = [];\n  this.jd = null;\n  this.t = token;\n}\n/**\n * Take the transition from this state to the next one on the given input.\n * If this state does not exist deterministically, will create it.\n *\n * @param {string} input character or token to transition on\n * @param {string|class} [token] token or multi-token to emit when reaching\n * this state\n */\n\nState.prototype = {\n  /**\n   * @param {State} state\n   */\n  accepts: function accepts() {\n    return !!this.t;\n  },\n\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * @param {string} input character or token to transition on\n   * @param {Token|State} tokenOrState transition to a matching state\n   * @returns State taken after the given input\n   */\n  tt: function tt(input, tokenOrState) {\n    if (tokenOrState && tokenOrState.j) {\n      // State, default a basic transition\n      this.j[input] = tokenOrState;\n      return tokenOrState;\n    } // See if there's a direct state transition (not regex or default)\n\n\n    var token = tokenOrState;\n    var nextState = this.j[input];\n\n    if (nextState) {\n      if (token) {\n        nextState.t = token;\n      } // overrwites previous token\n\n\n      return nextState;\n    } // Create a new state for this input\n\n\n    nextState = makeState(); // Take the transition using the usual default mechanisms\n\n    var templateState = takeT(this, input);\n\n    if (templateState) {\n      // Some default state transition, make a prime state based on this one\n      Object.assign(nextState.j, templateState.j);\n      nextState.jr.append(templateState.jr);\n      nextState.jr = templateState.jd;\n      nextState.t = token || templateState.t;\n    } else {\n      nextState.t = token;\n    }\n\n    this.j[input] = nextState;\n    return nextState;\n  }\n};\n/**\n * Utility function to create state without using new keyword (reduced file size\n * when minified)\n */\n\nvar makeState = function makeState() {\n  return new State();\n};\n/**\n * Similar to previous except it is an accepting state that emits a token\n * @param {Token} token\n */\n\nvar makeAcceptingState = function makeAcceptingState(token) {\n  return new State(token);\n};\n/**\n * Create a transition from startState to nextState via the given character\n * @param {State} startState transition from thie starting state\n * @param {Token} input via this input character or other concrete token type\n * @param {State} nextState to this next state\n */\n\nvar makeT = function makeT(startState, input, nextState) {\n  // IMPLEMENTATION 1: Add to object (fast)\n  if (!startState.j[input]) {\n    startState.j[input] = nextState;\n  } // IMPLEMENTATION 2: Add to array (slower)\n  // startState.j.push([input, nextState]);\n\n};\n/**\n *\n * @param {State} startState stransition from this starting state\n * @param {RegExp} regex Regular expression to match on input\n * @param {State} nextState transition to this next state if there's are regex match\n */\n\nvar makeRegexT = function makeRegexT(startState, regex, nextState) {\n  startState.jr.push([regex, nextState]);\n};\n/**\n * Follow the transition from the given character to the next state\n * @param {State} state\n * @param {Token} input character or other concrete token type to transition\n * @returns {?State} the next state, if any\n */\n\nvar takeT = function takeT(state, input) {\n  // IMPLEMENTATION 1: Object key lookup (faster)\n  var nextState = state.j[input];\n\n  if (nextState) {\n    return nextState;\n  } // IMPLEMENTATION 2: List lookup (slower)\n  // Loop through all the state transitions and see if there's a match\n  // for (let i = 0; i < state.j.length; i++) {\n  //\tconst val = state.j[i][0];\n  //\tconst nextState = state.j[i][1];\n  // \tif (input === val) { return nextState; }\n  // }\n\n\n  for (var i = 0; i < state.jr.length; i++) {\n    var regex = state.jr[i][0];\n    var _nextState = state.jr[i][1];\n\n    if (regex.test(input)) {\n      return _nextState;\n    }\n  } // Nowhere left to jump! Return default, if any\n\n\n  return state.jd;\n};\n/**\n * Similar to makeT, but takes a list of characters that all transition to the\n * same nextState startState\n * @param {State} startState\n * @param {Array} chars\n * @param {State} nextState\n */\n\nvar makeMultiT = function makeMultiT(startState, chars, nextState) {\n  for (var i = 0; i < chars.length; i++) {\n    makeT(startState, chars[i], nextState);\n  }\n};\n/**\n * Set up a list of multiple transitions at once. transitions is a list of\n * tuples, where the first element is the transitions character and the second\n * is the state to transition to\n * @param {State} startState\n * @param {Array} transitions\n */\n\nvar makeBatchT = function makeBatchT(startState, transitions) {\n  for (var i = 0; i < transitions.length; i++) {\n    var input = transitions[i][0];\n    var nextState = transitions[i][1];\n    makeT(startState, input, nextState);\n  }\n};\n/**\n * For state machines that transition on characters only; given a non-empty\n * target string, generates states (if required) for each consecutive substring\n * of characters starting from the beginning of the string. The final state will\n * have a special value, as specified in options. All other \"in between\"\n * substrings will have a default end state.\n *\n * This turns the state machine into a Trie-like data structure (rather than a\n * intelligently-designed DFA).\n * @param {State} state\n * @param {string} str\n * @param {Token} endStateFactory\n * @param {Token} defaultStateFactory\n */\n\nvar makeChainT = function makeChainT(state, str, endState, defaultStateFactory) {\n  var i = 0,\n      len = str.length,\n      nextState; // Find the next state without a jump to the next character\n\n  while (i < len && (nextState = state.j[str[i]])) {\n    state = nextState;\n    i++;\n  }\n\n  if (i >= len) {\n    return [];\n  } // no new tokens were added\n\n\n  while (i < len - 1) {\n    nextState = defaultStateFactory();\n    makeT(state, str[i], nextState);\n    state = nextState;\n    i++;\n  }\n\n  makeT(state, str[len - 1], endState);\n};\n\n/******************************************************************************\n\tText Tokens\n\tTokens composed of strings\n******************************************************************************/\n// A valid web domain token\nvar DOMAIN = 'DOMAIN';\nvar LOCALHOST = 'LOCALHOST'; // special case of domain\n// Valid top-level domain (see tlds.js)\n\nvar TLD = 'TLD'; // Any sequence of digits 0-9\n\nvar NUM = 'NUM'; // A web URL protocol. Supported types include\n// - `http:`\n// - `https:`\n// - `ftp:`\n// - `ftps:`\n// - user-defined custom protocols\n\nvar PROTOCOL = 'PROTOCOL'; // Start of the email URI protocol\n\nvar MAILTO = 'MAILTO'; // mailto:\n// Any number of consecutive whitespace characters that are not newline\n\nvar WS = 'WS'; // New line (unix style)\n\nvar NL = 'NL'; // \\n\n// Opening/closing bracket classes\n\nvar OPENBRACE = 'OPENBRACE'; // {\n\nvar OPENBRACKET = 'OPENBRACKET'; // [\n\nvar OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\n\nvar OPENPAREN = 'OPENPAREN'; // (\n\nvar CLOSEBRACE = 'CLOSEBRACE'; // }\n\nvar CLOSEBRACKET = 'CLOSEBRACKET'; // ]\n\nvar CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\n\nvar CLOSEPAREN = 'CLOSEPAREN'; // )\n// Various symbols\n\nvar AMPERSAND = 'AMPERSAND'; // &\n\nvar APOSTROPHE = 'APOSTROPHE'; // '\n\nvar ASTERISK = 'ASTERISK'; // *\n\nvar AT = 'AT'; // @\n\nvar BACKSLASH = 'BACKSLASH'; // \\\n\nvar BACKTICK = 'BACKTICK'; // `\n\nvar CARET = 'CARET'; // ^\n\nvar COLON = 'COLON'; // :\n\nvar COMMA = 'COMMA'; // ,\n\nvar DOLLAR = 'DOLLAR'; // $\n\nvar DOT = 'DOT'; // .\n\nvar EQUALS = 'EQUALS'; // =\n\nvar EXCLAMATION = 'EXCLAMATION'; // !\n\nvar HYPHEN = 'HYPHEN'; // -\n\nvar PERCENT = 'PERCENT'; // %\n\nvar PIPE = 'PIPE'; // |\n\nvar PLUS = 'PLUS'; // +\n\nvar POUND = 'POUND'; // #\n\nvar QUERY = 'QUERY'; // ?\n\nvar QUOTE = 'QUOTE'; // \"\n\nvar SEMI = 'SEMI'; // ;\n\nvar SLASH = 'SLASH'; // /\n\nvar TILDE = 'TILDE'; // ~\n\nvar UNDERSCORE = 'UNDERSCORE'; // _\n// Default token - anything that is not one of the above\n\nvar SYM = 'SYM';\n\nvar text = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDOMAIN: DOMAIN,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tNUM: NUM,\n\tPROTOCOL: PROTOCOL,\n\tMAILTO: MAILTO,\n\tWS: WS,\n\tNL: NL,\n\tOPENBRACE: OPENBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEBRACE: CLOSEBRACE,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tCLOSEPAREN: CLOSEPAREN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tSYM: SYM\n});\n\n// NOTE: punycode versions of IDNs are not included here because these will not\n// be as commonly used without the http prefix anyway and linkify will already\n// force-encode those.\n// To be updated with the values in this list\n// http://data.iana.org/TLD/tlds-alpha-by-domain.txt\n// Version 2021022800, Last Updated Sun Feb 28 07:07:01 2021 UTC\nvar tlds = 'aaa \\\naarp \\\nabarth \\\nabb \\\nabbott \\\nabbvie \\\nabc \\\nable \\\nabogado \\\nabudhabi \\\nac \\\nacademy \\\naccenture \\\naccountant \\\naccountants \\\naco \\\nactor \\\nad \\\nadac \\\nads \\\nadult \\\nae \\\naeg \\\naero \\\naetna \\\naf \\\nafamilycompany \\\nafl \\\nafrica \\\nag \\\nagakhan \\\nagency \\\nai \\\naig \\\nairbus \\\nairforce \\\nairtel \\\nakdn \\\nal \\\nalfaromeo \\\nalibaba \\\nalipay \\\nallfinanz \\\nallstate \\\nally \\\nalsace \\\nalstom \\\nam \\\namazon \\\namericanexpress \\\namericanfamily \\\namex \\\namfam \\\namica \\\namsterdam \\\nanalytics \\\nandroid \\\nanquan \\\nanz \\\nao \\\naol \\\napartments \\\napp \\\napple \\\naq \\\naquarelle \\\nar \\\narab \\\naramco \\\narchi \\\narmy \\\narpa \\\nart \\\narte \\\nas \\\nasda \\\nasia \\\nassociates \\\nat \\\nathleta \\\nattorney \\\nau \\\nauction \\\naudi \\\naudible \\\naudio \\\nauspost \\\nauthor \\\nauto \\\nautos \\\navianca \\\naw \\\naws \\\nax \\\naxa \\\naz \\\nazure \\\nba \\\nbaby \\\nbaidu \\\nbanamex \\\nbananarepublic \\\nband \\\nbank \\\nbar \\\nbarcelona \\\nbarclaycard \\\nbarclays \\\nbarefoot \\\nbargains \\\nbaseball \\\nbasketball \\\nbauhaus \\\nbayern \\\nbb \\\nbbc \\\nbbt \\\nbbva \\\nbcg \\\nbcn \\\nbd \\\nbe \\\nbeats \\\nbeauty \\\nbeer \\\nbentley \\\nberlin \\\nbest \\\nbestbuy \\\nbet \\\nbf \\\nbg \\\nbh \\\nbharti \\\nbi \\\nbible \\\nbid \\\nbike \\\nbing \\\nbingo \\\nbio \\\nbiz \\\nbj \\\nblack \\\nblackfriday \\\nblockbuster \\\nblog \\\nbloomberg \\\nblue \\\nbm \\\nbms \\\nbmw \\\nbn \\\nbnpparibas \\\nbo \\\nboats \\\nboehringer \\\nbofa \\\nbom \\\nbond \\\nboo \\\nbook \\\nbooking \\\nbosch \\\nbostik \\\nboston \\\nbot \\\nboutique \\\nbox \\\nbr \\\nbradesco \\\nbridgestone \\\nbroadway \\\nbroker \\\nbrother \\\nbrussels \\\nbs \\\nbt \\\nbudapest \\\nbugatti \\\nbuild \\\nbuilders \\\nbusiness \\\nbuy \\\nbuzz \\\nbv \\\nbw \\\nby \\\nbz \\\nbzh \\\nca \\\ncab \\\ncafe \\\ncal \\\ncall \\\ncalvinklein \\\ncam \\\ncamera \\\ncamp \\\ncancerresearch \\\ncanon \\\ncapetown \\\ncapital \\\ncapitalone \\\ncar \\\ncaravan \\\ncards \\\ncare \\\ncareer \\\ncareers \\\ncars \\\ncasa \\\ncase \\\ncash \\\ncasino \\\ncat \\\ncatering \\\ncatholic \\\ncba \\\ncbn \\\ncbre \\\ncbs \\\ncc \\\ncd \\\ncenter \\\nceo \\\ncern \\\ncf \\\ncfa \\\ncfd \\\ncg \\\nch \\\nchanel \\\nchannel \\\ncharity \\\nchase \\\nchat \\\ncheap \\\nchintai \\\nchristmas \\\nchrome \\\nchurch \\\nci \\\ncipriani \\\ncircle \\\ncisco \\\ncitadel \\\nciti \\\ncitic \\\ncity \\\ncityeats \\\nck \\\ncl \\\nclaims \\\ncleaning \\\nclick \\\nclinic \\\nclinique \\\nclothing \\\ncloud \\\nclub \\\nclubmed \\\ncm \\\ncn \\\nco \\\ncoach \\\ncodes \\\ncoffee \\\ncollege \\\ncologne \\\ncom \\\ncomcast \\\ncommbank \\\ncommunity \\\ncompany \\\ncompare \\\ncomputer \\\ncomsec \\\ncondos \\\nconstruction \\\nconsulting \\\ncontact \\\ncontractors \\\ncooking \\\ncookingchannel \\\ncool \\\ncoop \\\ncorsica \\\ncountry \\\ncoupon \\\ncoupons \\\ncourses \\\ncpa \\\ncr \\\ncredit \\\ncreditcard \\\ncreditunion \\\ncricket \\\ncrown \\\ncrs \\\ncruise \\\ncruises \\\ncsc \\\ncu \\\ncuisinella \\\ncv \\\ncw \\\ncx \\\ncy \\\ncymru \\\ncyou \\\ncz \\\ndabur \\\ndad \\\ndance \\\ndata \\\ndate \\\ndating \\\ndatsun \\\nday \\\ndclk \\\ndds \\\nde \\\ndeal \\\ndealer \\\ndeals \\\ndegree \\\ndelivery \\\ndell \\\ndeloitte \\\ndelta \\\ndemocrat \\\ndental \\\ndentist \\\ndesi \\\ndesign \\\ndev \\\ndhl \\\ndiamonds \\\ndiet \\\ndigital \\\ndirect \\\ndirectory \\\ndiscount \\\ndiscover \\\ndish \\\ndiy \\\ndj \\\ndk \\\ndm \\\ndnp \\\ndo \\\ndocs \\\ndoctor \\\ndog \\\ndomains \\\ndot \\\ndownload \\\ndrive \\\ndtv \\\ndubai \\\nduck \\\ndunlop \\\ndupont \\\ndurban \\\ndvag \\\ndvr \\\ndz \\\nearth \\\neat \\\nec \\\neco \\\nedeka \\\nedu \\\neducation \\\nee \\\neg \\\nemail \\\nemerck \\\nenergy \\\nengineer \\\nengineering \\\nenterprises \\\nepson \\\nequipment \\\ner \\\nericsson \\\nerni \\\nes \\\nesq \\\nestate \\\net \\\netisalat \\\neu \\\neurovision \\\neus \\\nevents \\\nexchange \\\nexpert \\\nexposed \\\nexpress \\\nextraspace \\\nfage \\\nfail \\\nfairwinds \\\nfaith \\\nfamily \\\nfan \\\nfans \\\nfarm \\\nfarmers \\\nfashion \\\nfast \\\nfedex \\\nfeedback \\\nferrari \\\nferrero \\\nfi \\\nfiat \\\nfidelity \\\nfido \\\nfilm \\\nfinal \\\nfinance \\\nfinancial \\\nfire \\\nfirestone \\\nfirmdale \\\nfish \\\nfishing \\\nfit \\\nfitness \\\nfj \\\nfk \\\nflickr \\\nflights \\\nflir \\\nflorist \\\nflowers \\\nfly \\\nfm \\\nfo \\\nfoo \\\nfood \\\nfoodnetwork \\\nfootball \\\nford \\\nforex \\\nforsale \\\nforum \\\nfoundation \\\nfox \\\nfr \\\nfree \\\nfresenius \\\nfrl \\\nfrogans \\\nfrontdoor \\\nfrontier \\\nftr \\\nfujitsu \\\nfujixerox \\\nfun \\\nfund \\\nfurniture \\\nfutbol \\\nfyi \\\nga \\\ngal \\\ngallery \\\ngallo \\\ngallup \\\ngame \\\ngames \\\ngap \\\ngarden \\\ngay \\\ngb \\\ngbiz \\\ngd \\\ngdn \\\nge \\\ngea \\\ngent \\\ngenting \\\ngeorge \\\ngf \\\ngg \\\nggee \\\ngh \\\ngi \\\ngift \\\ngifts \\\ngives \\\ngiving \\\ngl \\\nglade \\\nglass \\\ngle \\\nglobal \\\nglobo \\\ngm \\\ngmail \\\ngmbh \\\ngmo \\\ngmx \\\ngn \\\ngodaddy \\\ngold \\\ngoldpoint \\\ngolf \\\ngoo \\\ngoodyear \\\ngoog \\\ngoogle \\\ngop \\\ngot \\\ngov \\\ngp \\\ngq \\\ngr \\\ngrainger \\\ngraphics \\\ngratis \\\ngreen \\\ngripe \\\ngrocery \\\ngroup \\\ngs \\\ngt \\\ngu \\\nguardian \\\ngucci \\\nguge \\\nguide \\\nguitars \\\nguru \\\ngw \\\ngy \\\nhair \\\nhamburg \\\nhangout \\\nhaus \\\nhbo \\\nhdfc \\\nhdfcbank \\\nhealth \\\nhealthcare \\\nhelp \\\nhelsinki \\\nhere \\\nhermes \\\nhgtv \\\nhiphop \\\nhisamitsu \\\nhitachi \\\nhiv \\\nhk \\\nhkt \\\nhm \\\nhn \\\nhockey \\\nholdings \\\nholiday \\\nhomedepot \\\nhomegoods \\\nhomes \\\nhomesense \\\nhonda \\\nhorse \\\nhospital \\\nhost \\\nhosting \\\nhot \\\nhoteles \\\nhotels \\\nhotmail \\\nhouse \\\nhow \\\nhr \\\nhsbc \\\nht \\\nhu \\\nhughes \\\nhyatt \\\nhyundai \\\nibm \\\nicbc \\\nice \\\nicu \\\nid \\\nie \\\nieee \\\nifm \\\nikano \\\nil \\\nim \\\nimamat \\\nimdb \\\nimmo \\\nimmobilien \\\nin \\\ninc \\\nindustries \\\ninfiniti \\\ninfo \\\ning \\\nink \\\ninstitute \\\ninsurance \\\ninsure \\\nint \\\ninternational \\\nintuit \\\ninvestments \\\nio \\\nipiranga \\\niq \\\nir \\\nirish \\\nis \\\nismaili \\\nist \\\nistanbul \\\nit \\\nitau \\\nitv \\\niveco \\\njaguar \\\njava \\\njcb \\\nje \\\njeep \\\njetzt \\\njewelry \\\njio \\\njll \\\njm \\\njmp \\\njnj \\\njo \\\njobs \\\njoburg \\\njot \\\njoy \\\njp \\\njpmorgan \\\njprs \\\njuegos \\\njuniper \\\nkaufen \\\nkddi \\\nke \\\nkerryhotels \\\nkerrylogistics \\\nkerryproperties \\\nkfh \\\nkg \\\nkh \\\nki \\\nkia \\\nkim \\\nkinder \\\nkindle \\\nkitchen \\\nkiwi \\\nkm \\\nkn \\\nkoeln \\\nkomatsu \\\nkosher \\\nkp \\\nkpmg \\\nkpn \\\nkr \\\nkrd \\\nkred \\\nkuokgroup \\\nkw \\\nky \\\nkyoto \\\nkz \\\nla \\\nlacaixa \\\nlamborghini \\\nlamer \\\nlancaster \\\nlancia \\\nland \\\nlandrover \\\nlanxess \\\nlasalle \\\nlat \\\nlatino \\\nlatrobe \\\nlaw \\\nlawyer \\\nlb \\\nlc \\\nlds \\\nlease \\\nleclerc \\\nlefrak \\\nlegal \\\nlego \\\nlexus \\\nlgbt \\\nli \\\nlidl \\\nlife \\\nlifeinsurance \\\nlifestyle \\\nlighting \\\nlike \\\nlilly \\\nlimited \\\nlimo \\\nlincoln \\\nlinde \\\nlink \\\nlipsy \\\nlive \\\nliving \\\nlixil \\\nlk \\\nllc \\\nllp \\\nloan \\\nloans \\\nlocker \\\nlocus \\\nloft \\\nlol \\\nlondon \\\nlotte \\\nlotto \\\nlove \\\nlpl \\\nlplfinancial \\\nlr \\\nls \\\nlt \\\nltd \\\nltda \\\nlu \\\nlundbeck \\\nluxe \\\nluxury \\\nlv \\\nly \\\nma \\\nmacys \\\nmadrid \\\nmaif \\\nmaison \\\nmakeup \\\nman \\\nmanagement \\\nmango \\\nmap \\\nmarket \\\nmarketing \\\nmarkets \\\nmarriott \\\nmarshalls \\\nmaserati \\\nmattel \\\nmba \\\nmc \\\nmckinsey \\\nmd \\\nme \\\nmed \\\nmedia \\\nmeet \\\nmelbourne \\\nmeme \\\nmemorial \\\nmen \\\nmenu \\\nmerckmsd \\\nmg \\\nmh \\\nmiami \\\nmicrosoft \\\nmil \\\nmini \\\nmint \\\nmit \\\nmitsubishi \\\nmk \\\nml \\\nmlb \\\nmls \\\nmm \\\nmma \\\nmn \\\nmo \\\nmobi \\\nmobile \\\nmoda \\\nmoe \\\nmoi \\\nmom \\\nmonash \\\nmoney \\\nmonster \\\nmormon \\\nmortgage \\\nmoscow \\\nmoto \\\nmotorcycles \\\nmov \\\nmovie \\\nmp \\\nmq \\\nmr \\\nms \\\nmsd \\\nmt \\\nmtn \\\nmtr \\\nmu \\\nmuseum \\\nmutual \\\nmv \\\nmw \\\nmx \\\nmy \\\nmz \\\nna \\\nnab \\\nnagoya \\\nname \\\nnationwide \\\nnatura \\\nnavy \\\nnba \\\nnc \\\nne \\\nnec \\\nnet \\\nnetbank \\\nnetflix \\\nnetwork \\\nneustar \\\nnew \\\nnews \\\nnext \\\nnextdirect \\\nnexus \\\nnf \\\nnfl \\\nng \\\nngo \\\nnhk \\\nni \\\nnico \\\nnike \\\nnikon \\\nninja \\\nnissan \\\nnissay \\\nnl \\\nno \\\nnokia \\\nnorthwesternmutual \\\nnorton \\\nnow \\\nnowruz \\\nnowtv \\\nnp \\\nnr \\\nnra \\\nnrw \\\nntt \\\nnu \\\nnyc \\\nnz \\\nobi \\\nobserver \\\noff \\\noffice \\\nokinawa \\\nolayan \\\nolayangroup \\\noldnavy \\\nollo \\\nom \\\nomega \\\none \\\nong \\\nonl \\\nonline \\\nonyourside \\\nooo \\\nopen \\\noracle \\\norange \\\norg \\\norganic \\\norigins \\\nosaka \\\notsuka \\\nott \\\novh \\\npa \\\npage \\\npanasonic \\\nparis \\\npars \\\npartners \\\nparts \\\nparty \\\npassagens \\\npay \\\npccw \\\npe \\\npet \\\npf \\\npfizer \\\npg \\\nph \\\npharmacy \\\nphd \\\nphilips \\\nphone \\\nphoto \\\nphotography \\\nphotos \\\nphysio \\\npics \\\npictet \\\npictures \\\npid \\\npin \\\nping \\\npink \\\npioneer \\\npizza \\\npk \\\npl \\\nplace \\\nplay \\\nplaystation \\\nplumbing \\\nplus \\\npm \\\npn \\\npnc \\\npohl \\\npoker \\\npolitie \\\nporn \\\npost \\\npr \\\npramerica \\\npraxi \\\npress \\\nprime \\\npro \\\nprod \\\nproductions \\\nprof \\\nprogressive \\\npromo \\\nproperties \\\nproperty \\\nprotection \\\npru \\\nprudential \\\nps \\\npt \\\npub \\\npw \\\npwc \\\npy \\\nqa \\\nqpon \\\nquebec \\\nquest \\\nqvc \\\nracing \\\nradio \\\nraid \\\nre \\\nread \\\nrealestate \\\nrealtor \\\nrealty \\\nrecipes \\\nred \\\nredstone \\\nredumbrella \\\nrehab \\\nreise \\\nreisen \\\nreit \\\nreliance \\\nren \\\nrent \\\nrentals \\\nrepair \\\nreport \\\nrepublican \\\nrest \\\nrestaurant \\\nreview \\\nreviews \\\nrexroth \\\nrich \\\nrichardli \\\nricoh \\\nril \\\nrio \\\nrip \\\nrmit \\\nro \\\nrocher \\\nrocks \\\nrodeo \\\nrogers \\\nroom \\\nrs \\\nrsvp \\\nru \\\nrugby \\\nruhr \\\nrun \\\nrw \\\nrwe \\\nryukyu \\\nsa \\\nsaarland \\\nsafe \\\nsafety \\\nsakura \\\nsale \\\nsalon \\\nsamsclub \\\nsamsung \\\nsandvik \\\nsandvikcoromant \\\nsanofi \\\nsap \\\nsarl \\\nsas \\\nsave \\\nsaxo \\\nsb \\\nsbi \\\nsbs \\\nsc \\\nsca \\\nscb \\\nschaeffler \\\nschmidt \\\nscholarships \\\nschool \\\nschule \\\nschwarz \\\nscience \\\nscjohnson \\\nscot \\\nsd \\\nse \\\nsearch \\\nseat \\\nsecure \\\nsecurity \\\nseek \\\nselect \\\nsener \\\nservices \\\nses \\\nseven \\\nsew \\\nsex \\\nsexy \\\nsfr \\\nsg \\\nsh \\\nshangrila \\\nsharp \\\nshaw \\\nshell \\\nshia \\\nshiksha \\\nshoes \\\nshop \\\nshopping \\\nshouji \\\nshow \\\nshowtime \\\nsi \\\nsilk \\\nsina \\\nsingles \\\nsite \\\nsj \\\nsk \\\nski \\\nskin \\\nsky \\\nskype \\\nsl \\\nsling \\\nsm \\\nsmart \\\nsmile \\\nsn \\\nsncf \\\nso \\\nsoccer \\\nsocial \\\nsoftbank \\\nsoftware \\\nsohu \\\nsolar \\\nsolutions \\\nsong \\\nsony \\\nsoy \\\nspa \\\nspace \\\nsport \\\nspot \\\nspreadbetting \\\nsr \\\nsrl \\\nss \\\nst \\\nstada \\\nstaples \\\nstar \\\nstatebank \\\nstatefarm \\\nstc \\\nstcgroup \\\nstockholm \\\nstorage \\\nstore \\\nstream \\\nstudio \\\nstudy \\\nstyle \\\nsu \\\nsucks \\\nsupplies \\\nsupply \\\nsupport \\\nsurf \\\nsurgery \\\nsuzuki \\\nsv \\\nswatch \\\nswiftcover \\\nswiss \\\nsx \\\nsy \\\nsydney \\\nsystems \\\nsz \\\ntab \\\ntaipei \\\ntalk \\\ntaobao \\\ntarget \\\ntatamotors \\\ntatar \\\ntattoo \\\ntax \\\ntaxi \\\ntc \\\ntci \\\ntd \\\ntdk \\\nteam \\\ntech \\\ntechnology \\\ntel \\\ntemasek \\\ntennis \\\nteva \\\ntf \\\ntg \\\nth \\\nthd \\\ntheater \\\ntheatre \\\ntiaa \\\ntickets \\\ntienda \\\ntiffany \\\ntips \\\ntires \\\ntirol \\\ntj \\\ntjmaxx \\\ntjx \\\ntk \\\ntkmaxx \\\ntl \\\ntm \\\ntmall \\\ntn \\\nto \\\ntoday \\\ntokyo \\\ntools \\\ntop \\\ntoray \\\ntoshiba \\\ntotal \\\ntours \\\ntown \\\ntoyota \\\ntoys \\\ntr \\\ntrade \\\ntrading \\\ntraining \\\ntravel \\\ntravelchannel \\\ntravelers \\\ntravelersinsurance \\\ntrust \\\ntrv \\\ntt \\\ntube \\\ntui \\\ntunes \\\ntushu \\\ntv \\\ntvs \\\ntw \\\ntz \\\nua \\\nubank \\\nubs \\\nug \\\nuk \\\nunicom \\\nuniversity \\\nuno \\\nuol \\\nups \\\nus \\\nuy \\\nuz \\\nva \\\nvacations \\\nvana \\\nvanguard \\\nvc \\\nve \\\nvegas \\\nventures \\\nverisign \\\nversicherung \\\nvet \\\nvg \\\nvi \\\nviajes \\\nvideo \\\nvig \\\nviking \\\nvillas \\\nvin \\\nvip \\\nvirgin \\\nvisa \\\nvision \\\nviva \\\nvivo \\\nvlaanderen \\\nvn \\\nvodka \\\nvolkswagen \\\nvolvo \\\nvote \\\nvoting \\\nvoto \\\nvoyage \\\nvu \\\nvuelos \\\nwales \\\nwalmart \\\nwalter \\\nwang \\\nwanggou \\\nwatch \\\nwatches \\\nweather \\\nweatherchannel \\\nwebcam \\\nweber \\\nwebsite \\\nwed \\\nwedding \\\nweibo \\\nweir \\\nwf \\\nwhoswho \\\nwien \\\nwiki \\\nwilliamhill \\\nwin \\\nwindows \\\nwine \\\nwinners \\\nwme \\\nwolterskluwer \\\nwoodside \\\nwork \\\nworks \\\nworld \\\nwow \\\nws \\\nwtc \\\nwtf \\\nxbox \\\nxerox \\\nxfinity \\\nxihuan \\\nxin \\\nxxx \\\nxyz \\\nyachts \\\nyahoo \\\nyamaxun \\\nyandex \\\nye \\\nyodobashi \\\nyoga \\\nyokohama \\\nyou \\\nyoutube \\\nyt \\\nyun \\\nza \\\nzappos \\\nzara \\\nzero \\\nzip \\\nzm \\\nzone \\\nzuerich \\\nzw \\\nvermögensberater-ctb \\\nvermögensberatung-pwb \\\nελ \\\nευ \\\nбг \\\nбел \\\nдети \\\nею \\\nкатолик \\\nком \\\nқаз \\\nмкд \\\nмон \\\nмосква \\\nонлайн \\\nорг \\\nрус \\\nрф \\\nсайт \\\nсрб \\\nукр \\\nგე \\\nհայ \\\nישראל \\\nקום \\\nابوظبي \\\nاتصالات \\\nارامكو \\\nالاردن \\\nالبحرين \\\nالجزائر \\\nالسعودية \\\nالعليان \\\nالمغرب \\\nامارات \\\nایران \\\nبارت \\\nبازار \\\nبھارت \\\nبيتك \\\nپاکستان \\\nڀارت \\\nتونس \\\nسودان \\\nسورية \\\nشبكة \\\nعراق \\\nعرب \\\nعمان \\\nفلسطين \\\nقطر \\\nكاثوليك \\\nكوم \\\nمصر \\\nمليسيا \\\nموريتانيا \\\nموقع \\\nهمراه \\\nकॉम \\\nनेट \\\nभारत \\\nभारतम् \\\nभारोत \\\nसंगठन \\\nবাংলা \\\nভারত \\\nভাৰত \\\nਭਾਰਤ \\\nભારત \\\nଭାରତ \\\nஇந்தியா \\\nஇலங்கை \\\nசிங்கப்பூர் \\\nభారత్ \\\nಭಾರತ \\\nഭാരതം \\\nලංකා \\\nคอม \\\nไทย \\\nລາວ \\\n닷넷 \\\n닷컴 \\\n삼성 \\\n한국 \\\nアマゾン \\\nグーグル \\\nクラウド \\\nコム \\\nストア \\\nセール \\\nファッション \\\nポイント \\\nみんな \\\n世界 \\\n中信 \\\n中国 \\\n中國 \\\n中文网 \\\n亚马逊 \\\n企业 \\\n佛山 \\\n信息 \\\n健康 \\\n八卦 \\\n公司 \\\n公益 \\\n台湾 \\\n台灣 \\\n商城 \\\n商店 \\\n商标 \\\n嘉里 \\\n嘉里大酒店 \\\n在线 \\\n大众汽车 \\\n大拿 \\\n天主教 \\\n娱乐 \\\n家電 \\\n广东 \\\n微博 \\\n慈善 \\\n我爱你 \\\n手机 \\\n招聘 \\\n政务 \\\n政府 \\\n新加坡 \\\n新闻 \\\n时尚 \\\n書籍 \\\n机构 \\\n淡马锡 \\\n游戏 \\\n澳門 \\\n点看 \\\n移动 \\\n组织机构 \\\n网址 \\\n网店 \\\n网站 \\\n网络 \\\n联通 \\\n诺基亚 \\\n谷歌 \\\n购物 \\\n通販 \\\n集团 \\\n電訊盈科 \\\n飞利浦 \\\n食品 \\\n餐厅 \\\n香格里拉 \\\n香港'.split(' ');\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n\n\t@module linkify\n\t@submodule scanner\n\t@main scanner\n*/\n\nvar LETTER = /(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/; // Any Unicode character with letter data type\n\nvar EMOJI = /(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26A7\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5-\\uDED7\\uDEDD-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFC\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7C\\uDE80-\\uDE86\\uDE90-\\uDEAC\\uDEB0-\\uDEBA\\uDEC0-\\uDEC5\\uDED0-\\uDED9\\uDEE0-\\uDEE7\\uDEF0-\\uDEF6])/; // Any Unicode emoji character\n\nvar EMOJI_VARIATION = /\\uFE0F/; // Variation selector, follows heart and others\n\nvar DIGIT = /\\d/;\nvar SPACE = /\\s/;\n/**\n * Initialize the scanner character-based state machine for the given start state\n * @return {State} scanner starting state\n */\n\nfunction init$2() {\n  var customProtocols = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  // Frequently used states\n  var S_START = makeState();\n  var S_NUM = makeAcceptingState(NUM);\n  var S_DOMAIN = makeAcceptingState(DOMAIN);\n  var S_DOMAIN_HYPHEN = makeState(); // domain followed by 1 or more hyphen characters\n\n  var S_WS = makeAcceptingState(WS);\n  var DOMAIN_REGEX_TRANSITIONS = [[DIGIT, S_DOMAIN], [LETTER, S_DOMAIN], [EMOJI, S_DOMAIN], [EMOJI_VARIATION, S_DOMAIN]]; // Create a state which emits a domain token\n\n  var makeDomainState = function makeDomainState() {\n    var state = makeAcceptingState(DOMAIN);\n    state.j = {\n      '-': S_DOMAIN_HYPHEN\n    };\n    state.jr = [].concat(DOMAIN_REGEX_TRANSITIONS);\n    return state;\n  }; // Create a state which does not emit a domain state but the usual alphanumeric\n  // transitions are domains\n\n\n  var makeNearDomainState = function makeNearDomainState(token) {\n    var state = makeDomainState();\n    state.t = token;\n    return state;\n  }; // States for special URL symbols that accept immediately after start\n\n\n  makeBatchT(S_START, [[\"'\", makeAcceptingState(APOSTROPHE)], ['{', makeAcceptingState(OPENBRACE)], ['[', makeAcceptingState(OPENBRACKET)], ['<', makeAcceptingState(OPENANGLEBRACKET)], ['(', makeAcceptingState(OPENPAREN)], ['}', makeAcceptingState(CLOSEBRACE)], [']', makeAcceptingState(CLOSEBRACKET)], ['>', makeAcceptingState(CLOSEANGLEBRACKET)], [')', makeAcceptingState(CLOSEPAREN)], ['&', makeAcceptingState(AMPERSAND)], ['*', makeAcceptingState(ASTERISK)], ['@', makeAcceptingState(AT)], ['`', makeAcceptingState(BACKTICK)], ['^', makeAcceptingState(CARET)], [':', makeAcceptingState(COLON)], [',', makeAcceptingState(COMMA)], ['$', makeAcceptingState(DOLLAR)], ['.', makeAcceptingState(DOT)], ['=', makeAcceptingState(EQUALS)], ['!', makeAcceptingState(EXCLAMATION)], ['-', makeAcceptingState(HYPHEN)], ['%', makeAcceptingState(PERCENT)], ['|', makeAcceptingState(PIPE)], ['+', makeAcceptingState(PLUS)], ['#', makeAcceptingState(POUND)], ['?', makeAcceptingState(QUERY)], ['\"', makeAcceptingState(QUOTE)], ['/', makeAcceptingState(SLASH)], [';', makeAcceptingState(SEMI)], ['~', makeAcceptingState(TILDE)], ['_', makeAcceptingState(UNDERSCORE)], ['\\\\', makeAcceptingState(BACKSLASH)]]); // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n\n  makeT(S_START, '\\n', makeAcceptingState(NL));\n  makeRegexT(S_START, SPACE, S_WS); // If any whitespace except newline, more whitespace!\n\n  makeT(S_WS, '\\n', makeState()); // non-accepting state\n\n  makeRegexT(S_WS, SPACE, S_WS); // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n\n  for (var i = 0; i < tlds.length; i++) {\n    makeChainT(S_START, tlds[i], makeNearDomainState(TLD), makeDomainState);\n  } // Collect the states generated by different protocls\n\n\n  var S_PROTOCOL_FILE = makeDomainState();\n  var S_PROTOCOL_FTP = makeDomainState();\n  var S_PROTOCOL_HTTP = makeDomainState();\n  var S_MAILTO = makeDomainState();\n  makeChainT(S_START, 'file', S_PROTOCOL_FILE, makeDomainState);\n  makeChainT(S_START, 'ftp', S_PROTOCOL_FTP, makeDomainState);\n  makeChainT(S_START, 'http', S_PROTOCOL_HTTP, makeDomainState);\n  makeChainT(S_START, 'mailto', S_MAILTO, makeDomainState); // Protocol states\n\n  var S_PROTOCOL_SECURE = makeDomainState();\n  var S_FULL_PROTOCOL = makeAcceptingState(PROTOCOL); // Full protocol ends with COLON\n\n  var S_FULL_MAILTO = makeAcceptingState(MAILTO); // Mailto ends with COLON\n  // Secure protocols (end with 's')\n\n  makeT(S_PROTOCOL_FTP, 's', S_PROTOCOL_SECURE);\n  makeT(S_PROTOCOL_FTP, ':', S_FULL_PROTOCOL);\n  makeT(S_PROTOCOL_HTTP, 's', S_PROTOCOL_SECURE);\n  makeT(S_PROTOCOL_HTTP, ':', S_FULL_PROTOCOL); // Become protocol tokens after a COLON\n\n  makeT(S_PROTOCOL_FILE, ':', S_FULL_PROTOCOL);\n  makeT(S_PROTOCOL_SECURE, ':', S_FULL_PROTOCOL);\n  makeT(S_MAILTO, ':', S_FULL_MAILTO); // Register custom protocols\n\n  var S_CUSTOM_PROTOCOL = makeDomainState();\n\n  for (var _i = 0; _i < customProtocols.length; _i++) {\n    makeChainT(S_START, customProtocols[_i], S_CUSTOM_PROTOCOL, makeDomainState);\n  }\n\n  makeT(S_CUSTOM_PROTOCOL, ':', S_FULL_PROTOCOL); // Localhost\n\n  makeChainT(S_START, 'localhost', makeNearDomainState(LOCALHOST), makeDomainState); // Everything else\n  // DOMAINs make more DOMAINs\n  // Number and character transitions\n\n  makeRegexT(S_START, DIGIT, S_NUM);\n  makeRegexT(S_START, LETTER, S_DOMAIN);\n  makeRegexT(S_START, EMOJI, S_DOMAIN);\n  makeRegexT(S_START, EMOJI_VARIATION, S_DOMAIN);\n  makeRegexT(S_NUM, DIGIT, S_NUM);\n  makeRegexT(S_NUM, LETTER, S_DOMAIN); // number becomes DOMAIN\n\n  makeRegexT(S_NUM, EMOJI, S_DOMAIN); // number becomes DOMAIN\n\n  makeRegexT(S_NUM, EMOJI_VARIATION, S_DOMAIN); // number becomes DOMAIN\n\n  makeT(S_NUM, '-', S_DOMAIN_HYPHEN); // Default domain transitions\n\n  makeT(S_DOMAIN, '-', S_DOMAIN_HYPHEN);\n  makeT(S_DOMAIN_HYPHEN, '-', S_DOMAIN_HYPHEN);\n  makeRegexT(S_DOMAIN, DIGIT, S_DOMAIN);\n  makeRegexT(S_DOMAIN, LETTER, S_DOMAIN);\n  makeRegexT(S_DOMAIN, EMOJI, S_DOMAIN);\n  makeRegexT(S_DOMAIN, EMOJI_VARIATION, S_DOMAIN);\n  makeRegexT(S_DOMAIN_HYPHEN, DIGIT, S_DOMAIN);\n  makeRegexT(S_DOMAIN_HYPHEN, LETTER, S_DOMAIN);\n  makeRegexT(S_DOMAIN_HYPHEN, EMOJI, S_DOMAIN);\n  makeRegexT(S_DOMAIN_HYPHEN, EMOJI_VARIATION, S_DOMAIN); // Set default transition for start state (some symbol)\n\n  S_START.jd = makeAcceptingState(SYM);\n  return S_START;\n}\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {{t: string, v: string, s: number, l: number}[]} list of tokens, each with a type and value\n*/\n\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns the regular case though) Uses selective `toLowerCase`\n  // is used because lowercasing the entire string causes the length and\n  // character position to vary in some non-English strings with V8-based\n  // runtimes.\n  var iterable = stringToArray(str.replace(/[A-Z]/g, function (c) {\n    return c.toLowerCase();\n  }));\n  var charCount = iterable.length; // <= len if there are emojis, etc\n\n  var tokens = []; // return value\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n\n  var cursor = 0; // Cursor through the array-representation of the string\n\n  var charCursor = 0; // Tokenize the string\n\n  while (charCursor < charCount) {\n    var state = start;\n    var nextState = null;\n    var tokenLength = 0;\n    var latestAccepting = null;\n    var sinceAccepts = -1;\n    var charsSinceAccepts = -1;\n\n    while (charCursor < charCount && (nextState = takeT(state, iterable[charCursor]))) {\n      state = nextState; // Keep track of the latest accepting state\n\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    } // Roll back to the latest accepting state\n\n\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts; // No more jumps, just make a new token from the last accepting one\n    // TODO: If possible, don't output v, instead output range where values ocur\n\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.substr(cursor - tokenLength, tokenLength),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n\n    });\n  }\n\n  return tokens;\n}\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\n\nfunction stringToArray(str) {\n  var result = [];\n  var len = str.length;\n  var index = 0;\n\n  while (index < len) {\n    var first = str.charCodeAt(index);\n    var second = void 0;\n    var char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n\n    result.push(char);\n    index += char.length;\n  }\n\n  return result;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * @property {string} defaultProtocol\n * @property {{[string]: (event) => void}]} [events]\n */\nvar defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: 0,\n  className: null,\n  attributes: null,\n  ignoreTags: []\n};\n/**\n * @class Options\n * @param {Object} [opts] Set option properties besides the defaults\n */\n\nfunction Options(opts) {\n  opts = opts || {};\n  this.defaultProtocol = 'defaultProtocol' in opts ? opts.defaultProtocol : defaults.defaultProtocol;\n  this.events = 'events' in opts ? opts.events : defaults.events;\n  this.format = 'format' in opts ? opts.format : defaults.format;\n  this.formatHref = 'formatHref' in opts ? opts.formatHref : defaults.formatHref;\n  this.nl2br = 'nl2br' in opts ? opts.nl2br : defaults.nl2br;\n  this.tagName = 'tagName' in opts ? opts.tagName : defaults.tagName;\n  this.target = 'target' in opts ? opts.target : defaults.target;\n  this.rel = 'rel' in opts ? opts.rel : defaults.rel;\n  this.validate = 'validate' in opts ? opts.validate : defaults.validate;\n  this.truncate = 'truncate' in opts ? opts.truncate : defaults.truncate;\n  this.className = 'className' in opts ? opts.className : defaults.className;\n  this.attributes = opts.attributes || defaults.attributes;\n  this.ignoreTags = []; // Make all tags names upper case\n\n  var ignoredTags = 'ignoreTags' in opts ? opts.ignoreTags : defaults.ignoreTags;\n\n  for (var i = 0; i < ignoredTags.length; i++) {\n    this.ignoreTags.push(ignoredTags[i].toUpperCase());\n  }\n}\nOptions.prototype = {\n  /**\n   * Given the token, return all options for how it should be displayed\n   */\n  resolve: function resolve(token) {\n    var href = token.toHref(this.defaultProtocol);\n    return {\n      formatted: this.get('format', token.toString(), token),\n      formattedHref: this.get('formatHref', href, token),\n      tagName: this.get('tagName', href, token),\n      className: this.get('className', href, token),\n      target: this.get('target', href, token),\n      rel: this.get('rel', href, token),\n      events: this.getObject('events', href, token),\n      attributes: this.getObject('attributes', href, token),\n      truncate: this.get('truncate', href, token)\n    };\n  },\n\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options. By default,\n   */\n  check: function check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params.\n   * @param {string} key Name of option to use\n   * @param operator will be passed to the target option if it's method\n   * @param {MultiToken} token The token from linkify.tokenize\n   */\n  get: function get(key, operator, token) {\n    var option = this[key];\n\n    if (!option) {\n      return option;\n    }\n\n    var optionValue;\n\n    switch (_typeof(option)) {\n      case 'function':\n        return option(operator, token.t);\n\n      case 'object':\n        optionValue = token.t in option ? option[token.t] : defaults[key];\n        return typeof optionValue === 'function' ? optionValue(operator, token.t) : optionValue;\n    }\n\n    return option;\n  },\n  getObject: function getObject(key, operator, token) {\n    var option = this[key];\n    return typeof option === 'function' ? option(operator, token.t) : option;\n  }\n};\n\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\nfunction inherits(parent, child) {\n  var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var extended = Object.create(parent.prototype);\n\n  for (var p in props) {\n    extended[p] = props[p];\n  }\n\n  extended.constructor = child;\n  child.prototype = extended;\n  return child;\n}\n/**\n\tAbstract class used for manufacturing tokens of text tokens. That is rather\n\tthan the value for a token being a small string of text, it's value an array\n\tof text tokens.\n\n\tUsed for grouping together URLs, emails, hashtags, and other potential\n\tcreations.\n\n\t@class MultiToken\n\t@param {string} value\n\t@param {{t: string, v: string, s: number, e: number}[]} tokens\n\t@abstract\n*/\n\n\nfunction MultiToken() {}\nMultiToken.prototype = {\n  /**\n  \tString representing the type for this token\n  \t@property t\n  \t@default 'token'\n  */\n  t: 'token',\n\n  /**\n  \tIs this multitoken a link?\n  \t@property isLink\n  \t@default false\n  */\n  isLink: false,\n\n  /**\n  \tReturn the string this token represents.\n  \t@method toString\n  \t@return {string}\n  */\n  toString: function toString() {\n    return this.v;\n  },\n\n  /**\n  \tWhat should the value for this token be in the `href` HTML attribute?\n  \tReturns the `.toString` value by default.\n  \t\t@method toHref\n  \t@return {string}\n  */\n  toHref: function toHref() {\n    return this.toString();\n  },\n\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex: function startIndex() {\n    return this.tk[0].s;\n  },\n\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex: function endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n\n  /**\n  \tReturns a hash of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject: function toObject() {\n    var protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaults.defaultProtocol;\n    return {\n      type: this.t,\n      value: this.v,\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  }\n}; // Base token\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {(value: string, tokens: {t: string, v: string, s: number, e: number}) => MultiToken} new token class\n */\n\nfunction createTokenClass(type, props) {\n  function Token(value, tokens) {\n    this.t = type;\n    this.v = value;\n    this.tk = tokens;\n  }\n\n  inherits(MultiToken, Token, props);\n  return Token;\n}\n/**\n\tRepresents an arbitrarily mailto email address with the prefix included\n\t@class MailtoEmail\n\t@extends MultiToken\n*/\n\nvar MailtoEmail = createTokenClass('email', {\n  isLink: true\n});\n/**\n\tRepresents a list of tokens making up a valid email address\n\t@class Email\n\t@extends MultiToken\n*/\n\nvar Email = createTokenClass('email', {\n  isLink: true,\n  toHref: function toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n/**\n\tRepresents some plain text\n\t@class Text\n\t@extends MultiToken\n*/\n\nvar Text = createTokenClass('text');\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n\t@extends MultiToken\n*/\n\nvar Nl = createTokenClass('nl');\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n\t@extends MultiToken\n*/\n\nvar Url = createTokenClass('url', {\n  isLink: true,\n\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@method href\n  \t@param {string} protocol\n  \t@return {string}\n  */\n  toHref: function toHref() {\n    var protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaults.defaultProtocol;\n    var tokens = this.tk;\n    var hasProtocol = false;\n    var hasSlashSlash = false;\n    var result = [];\n    var i = 0; // Make the first part of the domain lowercase\n    // Lowercase protocol\n\n    while (tokens[i].t === PROTOCOL) {\n      hasProtocol = true;\n      result.push(tokens[i].v);\n      i++;\n    } // Skip slash-slash\n\n\n    while (tokens[i].t === SLASH) {\n      hasSlashSlash = true;\n      result.push(tokens[i].v);\n      i++;\n    } // Continue pushing characters\n\n\n    for (; i < tokens.length; i++) {\n      result.push(tokens[i].v);\n    }\n\n    result = result.join('');\n\n    if (!(hasProtocol || hasSlashSlash)) {\n      result = \"\".concat(protocol, \"://\").concat(result);\n    }\n\n    return result;\n  },\n  hasProtocol: function hasProtocol() {\n    return this.tk[0].t === PROTOCOL;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tMailtoEmail: MailtoEmail,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/Email_address (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\n/**\n * Generate the parser multi token-based state machine\n * @returns {State} the starting state\n */\n\nfunction init$1() {\n  // The universal starting state.\n  var S_START = makeState(); // Intermediate states for URLs. Note that domains that begin with a protocol\n  // are treated slighly differently from those that don't.\n\n  var S_PROTOCOL = makeState(); // e.g., 'http:'\n\n  var S_MAILTO = makeState(); // 'mailto:'\n\n  var S_PROTOCOL_SLASH = makeState(); // e.g., 'http:/''\n\n  var S_PROTOCOL_SLASH_SLASH = makeState(); // e.g.,'http://'\n\n  var S_DOMAIN = makeState(); // parsed string ends with a potential domain name (A)\n\n  var S_DOMAIN_DOT = makeState(); // (A) domain followed by DOT\n\n  var S_TLD = makeAcceptingState(Url); // (A) Simplest possible URL with no query string\n\n  var S_TLD_COLON = makeState(); // (A) URL followed by colon (potential port number here)\n\n  var S_TLD_PORT = makeAcceptingState(Url); // TLD followed by a port number\n\n  var S_URL = makeAcceptingState(Url); // Long URL with optional port and maybe query string\n\n  var S_URL_NON_ACCEPTING = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  var S_URL_OPENBRACE = makeState(); // URL followed by {\n\n  var S_URL_OPENBRACKET = makeState(); // URL followed by [\n\n  var S_URL_OPENANGLEBRACKET = makeState(); // URL followed by <\n\n  var S_URL_OPENPAREN = makeState(); // URL followed by (\n\n  var S_URL_OPENBRACE_Q = makeAcceptingState(Url); // URL followed by { and some symbols that the URL can end it\n\n  var S_URL_OPENBRACKET_Q = makeAcceptingState(Url); // URL followed by [ and some symbols that the URL can end it\n\n  var S_URL_OPENANGLEBRACKET_Q = makeAcceptingState(Url); // URL followed by < and some symbols that the URL can end it\n\n  var S_URL_OPENPAREN_Q = makeAcceptingState(Url); // URL followed by ( and some symbols that the URL can end it\n\n  var S_URL_OPENBRACE_SYMS = makeState(); // S_URL_OPENBRACE_Q followed by some symbols it cannot end it\n\n  var S_URL_OPENBRACKET_SYMS = makeState(); // S_URL_OPENBRACKET_Q followed by some symbols it cannot end it\n\n  var S_URL_OPENANGLEBRACKET_SYMS = makeState(); // S_URL_OPENANGLEBRACKET_Q followed by some symbols it cannot end it\n\n  var S_URL_OPENPAREN_SYMS = makeState(); // S_URL_OPENPAREN_Q followed by some symbols it cannot end it\n\n  var S_EMAIL_DOMAIN = makeState(); // parsed string starts with local email info + @ with a potential domain name (C)\n\n  var S_EMAIL_DOMAIN_DOT = makeState(); // (C) domain followed by DOT\n\n  var S_EMAIL = makeAcceptingState(Email); // (C) Possible email address (could have more tlds)\n\n  var S_EMAIL_COLON = makeState(); // (C) URL followed by colon (potential port number here)\n\n  var S_EMAIL_PORT = makeAcceptingState(Email); // (C) Email address with a port\n\n  var S_MAILTO_EMAIL = makeAcceptingState(MailtoEmail); // Email that begins with the mailto prefix (D)\n\n  var S_MAILTO_EMAIL_NON_ACCEPTING = makeState(); // (D) Followed by some non-query string chars\n\n  var S_LOCALPART = makeState(); // Local part of the email address\n\n  var S_LOCALPART_AT = makeState(); // Local part of the email address plus @\n\n  var S_LOCALPART_DOT = makeState(); // Local part of the email address plus '.' (localpart cannot end in .)\n\n  var S_NL = makeAcceptingState(Nl); // single new line\n  // Make path from start to protocol (with '//')\n\n  makeT(S_START, NL, S_NL);\n  makeT(S_START, PROTOCOL, S_PROTOCOL);\n  makeT(S_START, MAILTO, S_MAILTO);\n  makeT(S_PROTOCOL, SLASH, S_PROTOCOL_SLASH);\n  makeT(S_PROTOCOL_SLASH, SLASH, S_PROTOCOL_SLASH_SLASH); // The very first potential domain name\n\n  makeT(S_START, TLD, S_DOMAIN);\n  makeT(S_START, DOMAIN, S_DOMAIN);\n  makeT(S_START, LOCALHOST, S_TLD);\n  makeT(S_START, NUM, S_DOMAIN); // Force URL for protocol followed by anything sane\n\n  makeT(S_PROTOCOL_SLASH_SLASH, TLD, S_URL);\n  makeT(S_PROTOCOL_SLASH_SLASH, DOMAIN, S_URL);\n  makeT(S_PROTOCOL_SLASH_SLASH, NUM, S_URL);\n  makeT(S_PROTOCOL_SLASH_SLASH, LOCALHOST, S_URL); // Account for dots and hyphens\n  // hyphens are usually parts of domain names\n\n  makeT(S_DOMAIN, DOT, S_DOMAIN_DOT);\n  makeT(S_EMAIL_DOMAIN, DOT, S_EMAIL_DOMAIN_DOT); // Hyphen can jump back to a domain name\n  // After the first domain and a dot, we can find either a URL or another domain\n\n  makeT(S_DOMAIN_DOT, TLD, S_TLD);\n  makeT(S_DOMAIN_DOT, DOMAIN, S_DOMAIN);\n  makeT(S_DOMAIN_DOT, NUM, S_DOMAIN);\n  makeT(S_DOMAIN_DOT, LOCALHOST, S_DOMAIN);\n  makeT(S_EMAIL_DOMAIN_DOT, TLD, S_EMAIL);\n  makeT(S_EMAIL_DOMAIN_DOT, DOMAIN, S_EMAIL_DOMAIN);\n  makeT(S_EMAIL_DOMAIN_DOT, NUM, S_EMAIL_DOMAIN);\n  makeT(S_EMAIL_DOMAIN_DOT, LOCALHOST, S_EMAIL_DOMAIN); // S_TLD accepts! But the URL could be longer, try to find a match greedily\n  // The `run` function should be able to \"rollback\" to the accepting state\n\n  makeT(S_TLD, DOT, S_DOMAIN_DOT);\n  makeT(S_EMAIL, DOT, S_EMAIL_DOMAIN_DOT); // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here PSS and non-PSS converge\n\n  makeT(S_TLD, COLON, S_TLD_COLON);\n  makeT(S_TLD, SLASH, S_URL);\n  makeT(S_TLD_COLON, NUM, S_TLD_PORT);\n  makeT(S_TLD_PORT, SLASH, S_URL);\n  makeT(S_EMAIL, COLON, S_EMAIL_COLON);\n  makeT(S_EMAIL_COLON, NUM, S_EMAIL_PORT); // Types of characters the URL can definitely end in\n\n  var qsAccepting = [AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, DOMAIN, EQUALS, HYPHEN, LOCALHOST, NUM, PERCENT, PIPE, PLUS, POUND, PROTOCOL, SLASH, SYM, TILDE, TLD, UNDERSCORE]; // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n\n  var qsNonAccepting = [APOSTROPHE, CLOSEANGLEBRACKET, CLOSEBRACE, CLOSEBRACKET, CLOSEPAREN, COLON, COMMA, DOT, EXCLAMATION, OPENANGLEBRACKET, OPENBRACE, OPENBRACKET, OPENPAREN, QUERY, QUOTE, SEMI]; // These states are responsible primarily for determining whether or not to\n  // include the final round bracket.\n  // URL, followed by an opening bracket\n\n  makeT(S_URL, OPENBRACE, S_URL_OPENBRACE);\n  makeT(S_URL, OPENBRACKET, S_URL_OPENBRACKET);\n  makeT(S_URL, OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET);\n  makeT(S_URL, OPENPAREN, S_URL_OPENPAREN); // URL with extra symbols at the end, followed by an opening bracket\n\n  makeT(S_URL_NON_ACCEPTING, OPENBRACE, S_URL_OPENBRACE);\n  makeT(S_URL_NON_ACCEPTING, OPENBRACKET, S_URL_OPENBRACKET);\n  makeT(S_URL_NON_ACCEPTING, OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET);\n  makeT(S_URL_NON_ACCEPTING, OPENPAREN, S_URL_OPENPAREN); // Closing bracket component. This character WILL be included in the URL\n\n  makeT(S_URL_OPENBRACE, CLOSEBRACE, S_URL);\n  makeT(S_URL_OPENBRACKET, CLOSEBRACKET, S_URL);\n  makeT(S_URL_OPENANGLEBRACKET, CLOSEANGLEBRACKET, S_URL);\n  makeT(S_URL_OPENPAREN, CLOSEPAREN, S_URL);\n  makeT(S_URL_OPENBRACE_Q, CLOSEBRACE, S_URL);\n  makeT(S_URL_OPENBRACKET_Q, CLOSEBRACKET, S_URL);\n  makeT(S_URL_OPENANGLEBRACKET_Q, CLOSEANGLEBRACKET, S_URL);\n  makeT(S_URL_OPENPAREN_Q, CLOSEPAREN, S_URL);\n  makeT(S_URL_OPENBRACE_SYMS, CLOSEBRACE, S_URL);\n  makeT(S_URL_OPENBRACKET_SYMS, CLOSEBRACKET, S_URL);\n  makeT(S_URL_OPENANGLEBRACKET_SYMS, CLOSEANGLEBRACKET, S_URL);\n  makeT(S_URL_OPENPAREN_SYMS, CLOSEPAREN, S_URL); // URL that beings with an opening bracket, followed by a symbols.\n  // Note that the final state can still be `S_URL_OPENBRACE_Q` (if the URL only\n  // has a single opening bracket for some reason).\n\n  makeMultiT(S_URL_OPENBRACE, qsAccepting, S_URL_OPENBRACE_Q);\n  makeMultiT(S_URL_OPENBRACKET, qsAccepting, S_URL_OPENBRACKET_Q);\n  makeMultiT(S_URL_OPENANGLEBRACKET, qsAccepting, S_URL_OPENANGLEBRACKET_Q);\n  makeMultiT(S_URL_OPENPAREN, qsAccepting, S_URL_OPENPAREN_Q);\n  makeMultiT(S_URL_OPENBRACE, qsNonAccepting, S_URL_OPENBRACE_SYMS);\n  makeMultiT(S_URL_OPENBRACKET, qsNonAccepting, S_URL_OPENBRACKET_SYMS);\n  makeMultiT(S_URL_OPENANGLEBRACKET, qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\n  makeMultiT(S_URL_OPENPAREN, qsNonAccepting, S_URL_OPENPAREN_SYMS); // URL that begins with an opening bracket, followed by some symbols\n\n  makeMultiT(S_URL_OPENBRACE_Q, qsAccepting, S_URL_OPENBRACE_Q);\n  makeMultiT(S_URL_OPENBRACKET_Q, qsAccepting, S_URL_OPENBRACKET_Q);\n  makeMultiT(S_URL_OPENANGLEBRACKET_Q, qsAccepting, S_URL_OPENANGLEBRACKET_Q);\n  makeMultiT(S_URL_OPENPAREN_Q, qsAccepting, S_URL_OPENPAREN_Q);\n  makeMultiT(S_URL_OPENBRACE_Q, qsNonAccepting, S_URL_OPENBRACE_Q);\n  makeMultiT(S_URL_OPENBRACKET_Q, qsNonAccepting, S_URL_OPENBRACKET_Q);\n  makeMultiT(S_URL_OPENANGLEBRACKET_Q, qsNonAccepting, S_URL_OPENANGLEBRACKET_Q);\n  makeMultiT(S_URL_OPENPAREN_Q, qsNonAccepting, S_URL_OPENPAREN_Q);\n  makeMultiT(S_URL_OPENBRACE_SYMS, qsAccepting, S_URL_OPENBRACE_Q);\n  makeMultiT(S_URL_OPENBRACKET_SYMS, qsAccepting, S_URL_OPENBRACKET_Q);\n  makeMultiT(S_URL_OPENANGLEBRACKET_SYMS, qsAccepting, S_URL_OPENANGLEBRACKET_Q);\n  makeMultiT(S_URL_OPENPAREN_SYMS, qsAccepting, S_URL_OPENPAREN_Q);\n  makeMultiT(S_URL_OPENBRACE_SYMS, qsNonAccepting, S_URL_OPENBRACE_SYMS);\n  makeMultiT(S_URL_OPENBRACKET_SYMS, qsNonAccepting, S_URL_OPENBRACKET_SYMS);\n  makeMultiT(S_URL_OPENANGLEBRACKET_SYMS, qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\n  makeMultiT(S_URL_OPENPAREN_SYMS, qsNonAccepting, S_URL_OPENPAREN_SYMS); // Account for the query string\n\n  makeMultiT(S_URL, qsAccepting, S_URL);\n  makeMultiT(S_URL_NON_ACCEPTING, qsAccepting, S_URL);\n  makeMultiT(S_URL, qsNonAccepting, S_URL_NON_ACCEPTING);\n  makeMultiT(S_URL_NON_ACCEPTING, qsNonAccepting, S_URL_NON_ACCEPTING); // Email address-specific state definitions\n  // Note: We are not allowing '/' in email addresses since this would interfere\n  // with real URLs\n  // For addresses with the mailto prefix\n  // 'mailto:' followed by anything sane is a valid email\n\n  makeT(S_MAILTO, TLD, S_MAILTO_EMAIL);\n  makeT(S_MAILTO, DOMAIN, S_MAILTO_EMAIL);\n  makeT(S_MAILTO, NUM, S_MAILTO_EMAIL);\n  makeT(S_MAILTO, LOCALHOST, S_MAILTO_EMAIL); // Greedily get more potential valid email values\n\n  makeMultiT(S_MAILTO_EMAIL, qsAccepting, S_MAILTO_EMAIL);\n  makeMultiT(S_MAILTO_EMAIL, qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\n  makeMultiT(S_MAILTO_EMAIL_NON_ACCEPTING, qsAccepting, S_MAILTO_EMAIL);\n  makeMultiT(S_MAILTO_EMAIL_NON_ACCEPTING, qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING); // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n\n  var localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, CLOSEBRACE, DOLLAR, DOMAIN, EQUALS, HYPHEN, NUM, OPENBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, TLD, UNDERSCORE]; // Some of the tokens in `localpartAccepting` are already accounted for here and\n  // will not be overwritten (don't worry)\n\n  makeMultiT(S_DOMAIN, localpartAccepting, S_LOCALPART);\n  makeT(S_DOMAIN, AT, S_LOCALPART_AT);\n  makeMultiT(S_TLD, localpartAccepting, S_LOCALPART);\n  makeT(S_TLD, AT, S_LOCALPART_AT);\n  makeMultiT(S_DOMAIN_DOT, localpartAccepting, S_LOCALPART); // Now in localpart of address\n  // TODO: IP addresses and what if the email starts with numbers?\n\n  makeMultiT(S_LOCALPART, localpartAccepting, S_LOCALPART);\n  makeT(S_LOCALPART, AT, S_LOCALPART_AT); // close to an email address now\n\n  makeT(S_LOCALPART, DOT, S_LOCALPART_DOT);\n  makeMultiT(S_LOCALPART_DOT, localpartAccepting, S_LOCALPART);\n  makeT(S_LOCALPART_AT, TLD, S_EMAIL_DOMAIN);\n  makeT(S_LOCALPART_AT, DOMAIN, S_EMAIL_DOMAIN);\n  makeT(S_LOCALPART_AT, NUM, S_EMAIL_DOMAIN);\n  makeT(S_LOCALPART_AT, LOCALHOST, S_EMAIL); // States following `@` defined above\n\n  return S_START;\n}\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {{t: string, v: string, s: number, e: number}[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\n\nfunction run(start, input, tokens) {\n  var len = tokens.length;\n  var cursor = 0;\n  var multis = [];\n  var textTokens = [];\n\n  while (cursor < len) {\n    var state = start;\n    var secondState = null;\n    var nextState = null;\n    var multiLength = 0;\n    var latestAccepting = null;\n    var sinceAccepts = -1;\n\n    while (cursor < len && !(secondState = takeT(state, tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n\n    while (cursor < len && (nextState = secondState || takeT(state, tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState; // Keep track of the latest accepting state\n\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n\n      cursor++;\n      multiLength++;\n    }\n\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token\n      // Add all the tokens we looked at to the text tokens array\n      for (var i = cursor - multiLength; i < cursor; i++) {\n        textTokens.push(tokens[i]);\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(parserCreateMultiToken(Text, input, textTokens));\n        textTokens = [];\n      } // Roll back to the latest accepting state\n\n\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts; // Create a new multitoken\n\n      var Multi = latestAccepting.t;\n      var subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(parserCreateMultiToken(Multi, input, subtokens));\n    }\n  } // Finally close off the textTokens (if available)\n\n\n  if (textTokens.length > 0) {\n    multis.push(parserCreateMultiToken(Text, input, textTokens));\n  }\n\n  return multis;\n}\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {Class<MultiToken>} Multi class to instantiate\n * @param {string} input original input string\n * @param {{t: string, v: string, s: number, e: number}[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\n\nfunction parserCreateMultiToken(Multi, input, tokens) {\n  var startIdx = tokens[0].s;\n  var endIdx = tokens[tokens.length - 1].e;\n  var value = input.substr(startIdx, endIdx - startIdx);\n  return new Multi(value, tokens);\n}\n\nvar warn = typeof console !== 'undefined' && console && console.warn || function () {}; // Side-effect initialization state\n\n\nvar INIT = {\n  scanner: null,\n  parser: null,\n  pluginQueue: [],\n  customProtocols: [],\n  initialized: false\n};\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\n\nfunction reset() {\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.pluginQueue = [];\n  INIT.customProtocols = [];\n  INIT.initialized = false;\n}\n/**\n * Register a linkify extension plugin\n * @param {string} name of plugin to register\n * @param {Function} plugin function that accepts mutable linkify state\n */\n\nfunction registerPlugin(name, plugin) {\n  for (var i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(\"linkifyjs: plugin \\\"\".concat(name, \"\\\" already registered - will be overwritten\"));\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n\n  INIT.pluginQueue.push([name, plugin]);\n\n  if (INIT.initialized) {\n    warn(\"linkifyjs: already initialized - will not register plugin \\\"\".concat(name, \"\\\" until you manually call linkify.init(). To avoid this warning, please register all plugins before invoking linkify the first time.\"));\n  }\n}\n/**\n * Detect URLs with the following additional protocol. Anything following\n * \"protocol:\" will be considered a link.\n * @param {string} protocol\n */\n\nfunction registerCustomProtocol(protocol) {\n  if (INIT.initialized) {\n    warn(\"linkifyjs: already initialized - will not register custom protocol \\\"\".concat(protocol, \"\\\" until you manually call linkify.init(). To avoid this warning, please register all custom protocols before invoking linkify the first time.\"));\n  }\n\n  if (!/^[a-z-]+$/.test(protocol)) {\n    throw Error('linkifyjs: protocols containing characters other than a-z or - (hyphen) are not supported');\n  }\n\n  INIT.customProtocols.push(protocol);\n}\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\n\nfunction init() {\n  // Initialize state machines\n  INIT.scanner = {\n    start: init$2(INIT.customProtocols),\n    tokens: text\n  };\n  INIT.parser = {\n    start: init$1(),\n    tokens: multi\n  };\n  var utils = {\n    createTokenClass: createTokenClass\n  }; // Initialize plugins\n\n  for (var i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser,\n      utils: utils\n    });\n  }\n\n  INIT.initialized = true;\n}\n/**\n\tParse a string into tokens that represent linkable and non-linkable sub-components\n\t@param {string} str\n\t@return {MultiToken[]} tokens\n*/\n\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\n/**\n\tFind a list of linkable items in the given string.\n\t@param {string} str string to find links in\n\t@param {string} [type] (optional) only find links of a specific type, e.g.,\n\t'url' or 'email'\n*/\n\nfunction find(str) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var tokens = tokenize(str);\n  var filtered = [];\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (token.isLink && (!type || token.t === type)) {\n      filtered.push(token.toObject());\n    }\n  }\n\n  return filtered;\n}\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\n\nfunction test(str) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nconst linkify_module = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Options: Options,\n  find: find,\n  init: init,\n  options: options,\n  registerCustomProtocol: registerCustomProtocol,\n  registerPlugin: registerPlugin,\n  reset: reset,\n  test: test,\n  tokenize: tokenize\n});\n\nconst linkify = /*@__PURE__*/getAugmentedNamespace(linkify_module);\n\nvar linkifyHtml_1 = createCommonjsModule(function (module) {\n\n\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar linkify__namespace = /*#__PURE__*/_interopNamespace(linkify);\n\n/**\n * generated from https://raw.githubusercontent.com/w3c/html/26b5126f96f736f796b9e29718138919dd513744/entities.json\n * do not edit\n */\nvar HTML5NamedCharRefs = {\n  // We don't need the complete named character reference because linkifyHtml\n  // does not modify the escape sequences. We do need &nbsp; so that\n  // whitespace is parsed properly. Other types of whitespace should already\n  // be accounted for\n  nbsp: \" \"\n};\nvar HEXCHARCODE = /^#[xX]([A-Fa-f0-9]+)$/;\nvar CHARCODE = /^#([0-9]+)$/;\nvar NAMED = /^([A-Za-z0-9]+)$/;\n\nvar EntityParser =\n/** @class */\nfunction () {\n  function EntityParser(named) {\n    this.named = named;\n  }\n\n  EntityParser.prototype.parse = function (entity) {\n    if (!entity) {\n      return;\n    }\n\n    var matches = entity.match(HEXCHARCODE);\n\n    if (matches) {\n      return \"&#x\" + matches[1] + \";\";\n    }\n\n    matches = entity.match(CHARCODE);\n\n    if (matches) {\n      return \"&#\" + matches[1] + \";\";\n    }\n\n    matches = entity.match(NAMED);\n\n    if (matches) {\n      return this.named[matches[1]] || \"&\" + matches[1] + \";\";\n    }\n  };\n\n  return EntityParser;\n}();\n\nvar WSP = /[\\t\\n\\f ]/;\nvar ALPHA = /[A-Za-z]/;\nvar CRLF = /\\r\\n?/g;\n\nfunction isSpace(char) {\n  return WSP.test(char);\n}\n\nfunction isAlpha(char) {\n  return ALPHA.test(char);\n}\n\nfunction preprocessInput(input) {\n  return input.replace(CRLF, '\\n');\n}\n\nvar EventedTokenizer =\n/** @class */\nfunction () {\n  function EventedTokenizer(delegate, entityParser, mode) {\n    if (mode === void 0) {\n      mode = 'precompile';\n    }\n\n    this.delegate = delegate;\n    this.entityParser = entityParser;\n    this.mode = mode;\n    this.state = \"beforeData\"\n    /* beforeData */\n    ;\n    this.line = -1;\n    this.column = -1;\n    this.input = '';\n    this.index = -1;\n    this.tagNameBuffer = '';\n    this.states = {\n      beforeData: function beforeData() {\n        var char = this.peek();\n\n        if (char === '<' && !this.isIgnoredEndTag()) {\n          this.transitionTo(\"tagOpen\"\n          /* tagOpen */\n          );\n          this.markTagStart();\n          this.consume();\n        } else {\n          if (this.mode === 'precompile' && char === '\\n') {\n            var tag = this.tagNameBuffer.toLowerCase();\n\n            if (tag === 'pre' || tag === 'textarea') {\n              this.consume();\n            }\n          }\n\n          this.transitionTo(\"data\"\n          /* data */\n          );\n          this.delegate.beginData();\n        }\n      },\n      data: function data() {\n        var char = this.peek();\n        var tag = this.tagNameBuffer;\n\n        if (char === '<' && !this.isIgnoredEndTag()) {\n          this.delegate.finishData();\n          this.transitionTo(\"tagOpen\"\n          /* tagOpen */\n          );\n          this.markTagStart();\n          this.consume();\n        } else if (char === '&' && tag !== 'script' && tag !== 'style') {\n          this.consume();\n          this.delegate.appendToData(this.consumeCharRef() || '&');\n        } else {\n          this.consume();\n          this.delegate.appendToData(char);\n        }\n      },\n      tagOpen: function tagOpen() {\n        var char = this.consume();\n\n        if (char === '!') {\n          this.transitionTo(\"markupDeclarationOpen\"\n          /* markupDeclarationOpen */\n          );\n        } else if (char === '/') {\n          this.transitionTo(\"endTagOpen\"\n          /* endTagOpen */\n          );\n        } else if (char === '@' || char === ':' || isAlpha(char)) {\n          this.transitionTo(\"tagName\"\n          /* tagName */\n          );\n          this.tagNameBuffer = '';\n          this.delegate.beginStartTag();\n          this.appendToTagName(char);\n        }\n      },\n      markupDeclarationOpen: function markupDeclarationOpen() {\n        var char = this.consume();\n\n        if (char === '-' && this.peek() === '-') {\n          this.consume();\n          this.transitionTo(\"commentStart\"\n          /* commentStart */\n          );\n          this.delegate.beginComment();\n        } else {\n          var maybeDoctype = char.toUpperCase() + this.input.substring(this.index, this.index + 6).toUpperCase();\n\n          if (maybeDoctype === 'DOCTYPE') {\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.transitionTo(\"doctype\"\n            /* doctype */\n            );\n            if (this.delegate.beginDoctype) this.delegate.beginDoctype();\n          }\n        }\n      },\n      doctype: function doctype() {\n        var char = this.consume();\n\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeDoctypeName\"\n          /* beforeDoctypeName */\n          );\n        }\n      },\n      beforeDoctypeName: function beforeDoctypeName() {\n        var char = this.consume();\n\n        if (isSpace(char)) {\n          return;\n        } else {\n          this.transitionTo(\"doctypeName\"\n          /* doctypeName */\n          );\n          if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n        }\n      },\n      doctypeName: function doctypeName() {\n        var char = this.consume();\n\n        if (isSpace(char)) {\n          this.transitionTo(\"afterDoctypeName\"\n          /* afterDoctypeName */\n          );\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n        }\n      },\n      afterDoctypeName: function afterDoctypeName() {\n        var char = this.consume();\n\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          var nextSixChars = char.toUpperCase() + this.input.substring(this.index, this.index + 5).toUpperCase();\n          var isPublic = nextSixChars.toUpperCase() === 'PUBLIC';\n          var isSystem = nextSixChars.toUpperCase() === 'SYSTEM';\n\n          if (isPublic || isSystem) {\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n          }\n\n          if (isPublic) {\n            this.transitionTo(\"afterDoctypePublicKeyword\"\n            /* afterDoctypePublicKeyword */\n            );\n          } else if (isSystem) {\n            this.transitionTo(\"afterDoctypeSystemKeyword\"\n            /* afterDoctypeSystemKeyword */\n            );\n          }\n        }\n      },\n      afterDoctypePublicKeyword: function afterDoctypePublicKeyword() {\n        var char = this.peek();\n\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeDoctypePublicIdentifier\"\n          /* beforeDoctypePublicIdentifier */\n          );\n          this.consume();\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypePublicIdentifierDoubleQuoted\"\n          /* doctypePublicIdentifierDoubleQuoted */\n          );\n          this.consume();\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypePublicIdentifierSingleQuoted\"\n          /* doctypePublicIdentifierSingleQuoted */\n          );\n          this.consume();\n        } else if (char === '>') {\n          this.consume();\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        }\n      },\n      doctypePublicIdentifierDoubleQuoted: function doctypePublicIdentifierDoubleQuoted() {\n        var char = this.consume();\n\n        if (char === '\"') {\n          this.transitionTo(\"afterDoctypePublicIdentifier\"\n          /* afterDoctypePublicIdentifier */\n          );\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n        }\n      },\n      doctypePublicIdentifierSingleQuoted: function doctypePublicIdentifierSingleQuoted() {\n        var char = this.consume();\n\n        if (char === \"'\") {\n          this.transitionTo(\"afterDoctypePublicIdentifier\"\n          /* afterDoctypePublicIdentifier */\n          );\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n        }\n      },\n      afterDoctypePublicIdentifier: function afterDoctypePublicIdentifier() {\n        var char = this.consume();\n\n        if (isSpace(char)) {\n          this.transitionTo(\"betweenDoctypePublicAndSystemIdentifiers\"\n          /* betweenDoctypePublicAndSystemIdentifiers */\n          );\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypeSystemIdentifierDoubleQuoted\"\n          /* doctypeSystemIdentifierDoubleQuoted */\n          );\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypeSystemIdentifierSingleQuoted\"\n          /* doctypeSystemIdentifierSingleQuoted */\n          );\n        }\n      },\n      betweenDoctypePublicAndSystemIdentifiers: function betweenDoctypePublicAndSystemIdentifiers() {\n        var char = this.consume();\n\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypeSystemIdentifierDoubleQuoted\"\n          /* doctypeSystemIdentifierDoubleQuoted */\n          );\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypeSystemIdentifierSingleQuoted\"\n          /* doctypeSystemIdentifierSingleQuoted */\n          );\n        }\n      },\n      doctypeSystemIdentifierDoubleQuoted: function doctypeSystemIdentifierDoubleQuoted() {\n        var char = this.consume();\n\n        if (char === '\"') {\n          this.transitionTo(\"afterDoctypeSystemIdentifier\"\n          /* afterDoctypeSystemIdentifier */\n          );\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n        }\n      },\n      doctypeSystemIdentifierSingleQuoted: function doctypeSystemIdentifierSingleQuoted() {\n        var char = this.consume();\n\n        if (char === \"'\") {\n          this.transitionTo(\"afterDoctypeSystemIdentifier\"\n          /* afterDoctypeSystemIdentifier */\n          );\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n        }\n      },\n      afterDoctypeSystemIdentifier: function afterDoctypeSystemIdentifier() {\n        var char = this.consume();\n\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        }\n      },\n      commentStart: function commentStart() {\n        var char = this.consume();\n\n        if (char === '-') {\n          this.transitionTo(\"commentStartDash\"\n          /* commentStartDash */\n          );\n        } else if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          this.delegate.appendToCommentData(char);\n          this.transitionTo(\"comment\"\n          /* comment */\n          );\n        }\n      },\n      commentStartDash: function commentStartDash() {\n        var char = this.consume();\n\n        if (char === '-') {\n          this.transitionTo(\"commentEnd\"\n          /* commentEnd */\n          );\n        } else if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          this.delegate.appendToCommentData('-');\n          this.transitionTo(\"comment\"\n          /* comment */\n          );\n        }\n      },\n      comment: function comment() {\n        var char = this.consume();\n\n        if (char === '-') {\n          this.transitionTo(\"commentEndDash\"\n          /* commentEndDash */\n          );\n        } else {\n          this.delegate.appendToCommentData(char);\n        }\n      },\n      commentEndDash: function commentEndDash() {\n        var char = this.consume();\n\n        if (char === '-') {\n          this.transitionTo(\"commentEnd\"\n          /* commentEnd */\n          );\n        } else {\n          this.delegate.appendToCommentData('-' + char);\n          this.transitionTo(\"comment\"\n          /* comment */\n          );\n        }\n      },\n      commentEnd: function commentEnd() {\n        var char = this.consume();\n\n        if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          this.delegate.appendToCommentData('--' + char);\n          this.transitionTo(\"comment\"\n          /* comment */\n          );\n        }\n      },\n      tagName: function tagName() {\n        var char = this.consume();\n\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeAttributeName\"\n          /* beforeAttributeName */\n          );\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\"\n          /* selfClosingStartTag */\n          );\n        } else if (char === '>') {\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          this.appendToTagName(char);\n        }\n      },\n      endTagName: function endTagName() {\n        var char = this.consume();\n\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeAttributeName\"\n          /* beforeAttributeName */\n          );\n          this.tagNameBuffer = '';\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\"\n          /* selfClosingStartTag */\n          );\n          this.tagNameBuffer = '';\n        } else if (char === '>') {\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n          this.tagNameBuffer = '';\n        } else {\n          this.appendToTagName(char);\n        }\n      },\n      beforeAttributeName: function beforeAttributeName() {\n        var char = this.peek();\n\n        if (isSpace(char)) {\n          this.consume();\n          return;\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\"\n          /* selfClosingStartTag */\n          );\n          this.consume();\n        } else if (char === '>') {\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else if (char === '=') {\n          this.delegate.reportSyntaxError('attribute name cannot start with equals sign');\n          this.transitionTo(\"attributeName\"\n          /* attributeName */\n          );\n          this.delegate.beginAttribute();\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        } else {\n          this.transitionTo(\"attributeName\"\n          /* attributeName */\n          );\n          this.delegate.beginAttribute();\n        }\n      },\n      attributeName: function attributeName() {\n        var char = this.peek();\n\n        if (isSpace(char)) {\n          this.transitionTo(\"afterAttributeName\"\n          /* afterAttributeName */\n          );\n          this.consume();\n        } else if (char === '/') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\"\n          /* selfClosingStartTag */\n          );\n        } else if (char === '=') {\n          this.transitionTo(\"beforeAttributeValue\"\n          /* beforeAttributeValue */\n          );\n          this.consume();\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else if (char === '\"' || char === \"'\" || char === '<') {\n          this.delegate.reportSyntaxError(char + ' is not a valid character within attribute names');\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        } else {\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        }\n      },\n      afterAttributeName: function afterAttributeName() {\n        var char = this.peek();\n\n        if (isSpace(char)) {\n          this.consume();\n          return;\n        } else if (char === '/') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\"\n          /* selfClosingStartTag */\n          );\n        } else if (char === '=') {\n          this.consume();\n          this.transitionTo(\"beforeAttributeValue\"\n          /* beforeAttributeValue */\n          );\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"attributeName\"\n          /* attributeName */\n          );\n          this.delegate.beginAttribute();\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        }\n      },\n      beforeAttributeValue: function beforeAttributeValue() {\n        var char = this.peek();\n\n        if (isSpace(char)) {\n          this.consume();\n        } else if (char === '\"') {\n          this.transitionTo(\"attributeValueDoubleQuoted\"\n          /* attributeValueDoubleQuoted */\n          );\n          this.delegate.beginAttributeValue(true);\n          this.consume();\n        } else if (char === \"'\") {\n          this.transitionTo(\"attributeValueSingleQuoted\"\n          /* attributeValueSingleQuoted */\n          );\n          this.delegate.beginAttributeValue(true);\n          this.consume();\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          this.transitionTo(\"attributeValueUnquoted\"\n          /* attributeValueUnquoted */\n          );\n          this.delegate.beginAttributeValue(false);\n          this.consume();\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueDoubleQuoted: function attributeValueDoubleQuoted() {\n        var char = this.consume();\n\n        if (char === '\"') {\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"afterAttributeValueQuoted\"\n          /* afterAttributeValueQuoted */\n          );\n        } else if (char === '&') {\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else {\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueSingleQuoted: function attributeValueSingleQuoted() {\n        var char = this.consume();\n\n        if (char === \"'\") {\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"afterAttributeValueQuoted\"\n          /* afterAttributeValueQuoted */\n          );\n        } else if (char === '&') {\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else {\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueUnquoted: function attributeValueUnquoted() {\n        var char = this.peek();\n\n        if (isSpace(char)) {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"beforeAttributeName\"\n          /* beforeAttributeName */\n          );\n        } else if (char === '/') {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\"\n          /* selfClosingStartTag */\n          );\n        } else if (char === '&') {\n          this.consume();\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else if (char === '>') {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          this.consume();\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      afterAttributeValueQuoted: function afterAttributeValueQuoted() {\n        var char = this.peek();\n\n        if (isSpace(char)) {\n          this.consume();\n          this.transitionTo(\"beforeAttributeName\"\n          /* beforeAttributeName */\n          );\n        } else if (char === '/') {\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\"\n          /* selfClosingStartTag */\n          );\n        } else if (char === '>') {\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          this.transitionTo(\"beforeAttributeName\"\n          /* beforeAttributeName */\n          );\n        }\n      },\n      selfClosingStartTag: function selfClosingStartTag() {\n        var char = this.peek();\n\n        if (char === '>') {\n          this.consume();\n          this.delegate.markTagAsSelfClosing();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\"\n          /* beforeData */\n          );\n        } else {\n          this.transitionTo(\"beforeAttributeName\"\n          /* beforeAttributeName */\n          );\n        }\n      },\n      endTagOpen: function endTagOpen() {\n        var char = this.consume();\n\n        if (char === '@' || char === ':' || isAlpha(char)) {\n          this.transitionTo(\"endTagName\"\n          /* endTagName */\n          );\n          this.tagNameBuffer = '';\n          this.delegate.beginEndTag();\n          this.appendToTagName(char);\n        }\n      }\n    };\n    this.reset();\n  }\n\n  EventedTokenizer.prototype.reset = function () {\n    this.transitionTo(\"beforeData\"\n    /* beforeData */\n    );\n    this.input = '';\n    this.tagNameBuffer = '';\n    this.index = 0;\n    this.line = 1;\n    this.column = 0;\n    this.delegate.reset();\n  };\n\n  EventedTokenizer.prototype.transitionTo = function (state) {\n    this.state = state;\n  };\n\n  EventedTokenizer.prototype.tokenize = function (input) {\n    this.reset();\n    this.tokenizePart(input);\n    this.tokenizeEOF();\n  };\n\n  EventedTokenizer.prototype.tokenizePart = function (input) {\n    this.input += preprocessInput(input);\n\n    while (this.index < this.input.length) {\n      var handler = this.states[this.state];\n\n      if (handler !== undefined) {\n        handler.call(this);\n      } else {\n        throw new Error(\"unhandled state \" + this.state);\n      }\n    }\n  };\n\n  EventedTokenizer.prototype.tokenizeEOF = function () {\n    this.flushData();\n  };\n\n  EventedTokenizer.prototype.flushData = function () {\n    if (this.state === 'data') {\n      this.delegate.finishData();\n      this.transitionTo(\"beforeData\"\n      /* beforeData */\n      );\n    }\n  };\n\n  EventedTokenizer.prototype.peek = function () {\n    return this.input.charAt(this.index);\n  };\n\n  EventedTokenizer.prototype.consume = function () {\n    var char = this.peek();\n    this.index++;\n\n    if (char === '\\n') {\n      this.line++;\n      this.column = 0;\n    } else {\n      this.column++;\n    }\n\n    return char;\n  };\n\n  EventedTokenizer.prototype.consumeCharRef = function () {\n    var endIndex = this.input.indexOf(';', this.index);\n\n    if (endIndex === -1) {\n      return;\n    }\n\n    var entity = this.input.slice(this.index, endIndex);\n    var chars = this.entityParser.parse(entity);\n\n    if (chars) {\n      var count = entity.length; // consume the entity chars\n\n      while (count) {\n        this.consume();\n        count--;\n      } // consume the `;`\n\n\n      this.consume();\n      return chars;\n    }\n  };\n\n  EventedTokenizer.prototype.markTagStart = function () {\n    this.delegate.tagOpen();\n  };\n\n  EventedTokenizer.prototype.appendToTagName = function (char) {\n    this.tagNameBuffer += char;\n    this.delegate.appendToTagName(char);\n  };\n\n  EventedTokenizer.prototype.isIgnoredEndTag = function () {\n    var tag = this.tagNameBuffer;\n    return tag === 'title' && this.input.substring(this.index, this.index + 8) !== '</title>' || tag === 'style' && this.input.substring(this.index, this.index + 8) !== '</style>' || tag === 'script' && this.input.substring(this.index, this.index + 9) !== '</script>';\n  };\n\n  return EventedTokenizer;\n}();\n\nvar Tokenizer =\n/** @class */\nfunction () {\n  function Tokenizer(entityParser, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.options = options;\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n    this.tokens = [];\n    this.tokenizer = new EventedTokenizer(this, entityParser, options.mode);\n    this._currentAttribute = undefined;\n  }\n\n  Tokenizer.prototype.tokenize = function (input) {\n    this.tokens = [];\n    this.tokenizer.tokenize(input);\n    return this.tokens;\n  };\n\n  Tokenizer.prototype.tokenizePart = function (input) {\n    this.tokens = [];\n    this.tokenizer.tokenizePart(input);\n    return this.tokens;\n  };\n\n  Tokenizer.prototype.tokenizeEOF = function () {\n    this.tokens = [];\n    this.tokenizer.tokenizeEOF();\n    return this.tokens[0];\n  };\n\n  Tokenizer.prototype.reset = function () {\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n  };\n\n  Tokenizer.prototype.current = function () {\n    var token = this.token;\n\n    if (token === null) {\n      throw new Error('token was unexpectedly null');\n    }\n\n    if (arguments.length === 0) {\n      return token;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      if (token.type === arguments[i]) {\n        return token;\n      }\n    }\n\n    throw new Error(\"token type was unexpectedly \" + token.type);\n  };\n\n  Tokenizer.prototype.push = function (token) {\n    this.token = token;\n    this.tokens.push(token);\n  };\n\n  Tokenizer.prototype.currentAttribute = function () {\n    return this._currentAttribute;\n  };\n\n  Tokenizer.prototype.addLocInfo = function () {\n    if (this.options.loc) {\n      this.current().loc = {\n        start: {\n          line: this.startLine,\n          column: this.startColumn\n        },\n        end: {\n          line: this.tokenizer.line,\n          column: this.tokenizer.column\n        }\n      };\n    }\n\n    this.startLine = this.tokenizer.line;\n    this.startColumn = this.tokenizer.column;\n  }; // Data\n\n\n  Tokenizer.prototype.beginDoctype = function () {\n    this.push({\n      type: \"Doctype\"\n      /* Doctype */\n      ,\n      name: ''\n    });\n  };\n\n  Tokenizer.prototype.appendToDoctypeName = function (char) {\n    this.current(\"Doctype\"\n    /* Doctype */\n    ).name += char;\n  };\n\n  Tokenizer.prototype.appendToDoctypePublicIdentifier = function (char) {\n    var doctype = this.current(\"Doctype\"\n    /* Doctype */\n    );\n\n    if (doctype.publicIdentifier === undefined) {\n      doctype.publicIdentifier = char;\n    } else {\n      doctype.publicIdentifier += char;\n    }\n  };\n\n  Tokenizer.prototype.appendToDoctypeSystemIdentifier = function (char) {\n    var doctype = this.current(\"Doctype\"\n    /* Doctype */\n    );\n\n    if (doctype.systemIdentifier === undefined) {\n      doctype.systemIdentifier = char;\n    } else {\n      doctype.systemIdentifier += char;\n    }\n  };\n\n  Tokenizer.prototype.endDoctype = function () {\n    this.addLocInfo();\n  };\n\n  Tokenizer.prototype.beginData = function () {\n    this.push({\n      type: \"Chars\"\n      /* Chars */\n      ,\n      chars: ''\n    });\n  };\n\n  Tokenizer.prototype.appendToData = function (char) {\n    this.current(\"Chars\"\n    /* Chars */\n    ).chars += char;\n  };\n\n  Tokenizer.prototype.finishData = function () {\n    this.addLocInfo();\n  }; // Comment\n\n\n  Tokenizer.prototype.beginComment = function () {\n    this.push({\n      type: \"Comment\"\n      /* Comment */\n      ,\n      chars: ''\n    });\n  };\n\n  Tokenizer.prototype.appendToCommentData = function (char) {\n    this.current(\"Comment\"\n    /* Comment */\n    ).chars += char;\n  };\n\n  Tokenizer.prototype.finishComment = function () {\n    this.addLocInfo();\n  }; // Tags - basic\n\n\n  Tokenizer.prototype.tagOpen = function () {};\n\n  Tokenizer.prototype.beginStartTag = function () {\n    this.push({\n      type: \"StartTag\"\n      /* StartTag */\n      ,\n      tagName: '',\n      attributes: [],\n      selfClosing: false\n    });\n  };\n\n  Tokenizer.prototype.beginEndTag = function () {\n    this.push({\n      type: \"EndTag\"\n      /* EndTag */\n      ,\n      tagName: ''\n    });\n  };\n\n  Tokenizer.prototype.finishTag = function () {\n    this.addLocInfo();\n  };\n\n  Tokenizer.prototype.markTagAsSelfClosing = function () {\n    this.current(\"StartTag\"\n    /* StartTag */\n    ).selfClosing = true;\n  }; // Tags - name\n\n\n  Tokenizer.prototype.appendToTagName = function (char) {\n    this.current(\"StartTag\"\n    /* StartTag */\n    , \"EndTag\"\n    /* EndTag */\n    ).tagName += char;\n  }; // Tags - attributes\n\n\n  Tokenizer.prototype.beginAttribute = function () {\n    this._currentAttribute = ['', '', false];\n  };\n\n  Tokenizer.prototype.appendToAttributeName = function (char) {\n    this.currentAttribute()[0] += char;\n  };\n\n  Tokenizer.prototype.beginAttributeValue = function (isQuoted) {\n    this.currentAttribute()[2] = isQuoted;\n  };\n\n  Tokenizer.prototype.appendToAttributeValue = function (char) {\n    this.currentAttribute()[1] += char;\n  };\n\n  Tokenizer.prototype.finishAttributeValue = function () {\n    this.current(\"StartTag\"\n    /* StartTag */\n    ).attributes.push(this._currentAttribute);\n  };\n\n  Tokenizer.prototype.reportSyntaxError = function (message) {\n    this.current().syntaxError = message;\n  };\n\n  return Tokenizer;\n}();\n\nfunction tokenize(input, options) {\n  var tokenizer = new Tokenizer(new EntityParser(HTML5NamedCharRefs), options);\n  return tokenizer.tokenize(input);\n}\n\nvar Options = linkify__namespace.Options;\nvar StartTag = 'StartTag';\nvar EndTag = 'EndTag';\nvar Chars = 'Chars';\nvar Comment = 'Comment';\nvar Doctype = 'Doctype';\n/**\n * @param {string} str html string to link\n * @param {object} [opts] linkify options\n * @returns {string} resulting string\n */\n\nfunction linkifyHtml(str) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // `tokens` and `token` in this section refer to tokens generated by the\n  // HTML parser, not linkify's parser\n  var tokens = tokenize(str);\n  var linkifiedTokens = [];\n  var linkified = [];\n  opts = new Options(opts); // Linkify the tokens given by the parser\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (token.type === StartTag) {\n      linkifiedTokens.push(token); // Ignore all the contents of ignored tags\n\n      var tagName = token.tagName.toUpperCase();\n      var isIgnored = tagName === 'A' || opts.ignoreTags.indexOf(tagName) >= 0;\n\n      if (!isIgnored) {\n        continue;\n      }\n\n      var preskipLen = linkifiedTokens.length;\n      skipTagTokens(tagName, tokens, ++i, linkifiedTokens);\n      i += linkifiedTokens.length - preskipLen - 1;\n      continue;\n    } else if (token.type !== Chars) {\n      // Skip this token, it's not important\n      linkifiedTokens.push(token);\n      continue;\n    } // Valid text token, linkify it!\n\n\n    var linkifedChars = linkifyChars(token.chars, opts);\n    linkifiedTokens.push.apply(linkifiedTokens, linkifedChars);\n  } // Convert the tokens back into a string\n\n\n  for (var _i = 0; _i < linkifiedTokens.length; _i++) {\n    var _token = linkifiedTokens[_i];\n\n    switch (_token.type) {\n      case StartTag:\n        {\n          var link = '<' + _token.tagName;\n\n          if (_token.attributes.length > 0) {\n            var attrs = attrsToStrings(_token.attributes);\n            link += ' ' + attrs.join(' ');\n          }\n\n          link += '>';\n          linkified.push(link);\n          break;\n        }\n\n      case EndTag:\n        linkified.push(\"</\".concat(_token.tagName, \">\"));\n        break;\n\n      case Chars:\n        linkified.push(escapeText(_token.chars));\n        break;\n\n      case Comment:\n        linkified.push(\"<!--\".concat(escapeText(_token.chars), \"-->\"));\n        break;\n\n      case Doctype:\n        {\n          var doctype = \"<!DOCTYPE \".concat(_token.name);\n\n          if (_token.publicIdentifier) {\n            doctype += \" PUBLIC \\\"\".concat(_token.publicIdentifier, \"\\\"\");\n          }\n\n          if (_token.systemIdentifier) {\n            doctype += \" \\\"\".concat(_token.systemIdentifier, \"\\\"\");\n          }\n\n          doctype += '>';\n          linkified.push(doctype);\n          break;\n        }\n    }\n  }\n\n  return linkified.join('');\n}\n/**\n\t`tokens` and `token` in this section referes to tokens returned by\n\t`linkify.tokenize`. `linkified` will contain HTML Parser-style tokens\n*/\n\nfunction linkifyChars(str, opts) {\n  var tokens = linkify__namespace.tokenize(str);\n  var result = [];\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (token.t === 'nl' && opts.nl2br) {\n      result.push({\n        type: StartTag,\n        tagName: 'br',\n        attributes: [],\n        selfClosing: true\n      });\n      continue;\n    } else if (!token.isLink || !opts.check(token)) {\n      result.push({\n        type: Chars,\n        chars: token.toString()\n      });\n      continue;\n    }\n\n    var _opts$resolve = opts.resolve(token),\n        formatted = _opts$resolve.formatted,\n        formattedHref = _opts$resolve.formattedHref,\n        tagName = _opts$resolve.tagName,\n        className = _opts$resolve.className,\n        target = _opts$resolve.target,\n        rel = _opts$resolve.rel,\n        attributes = _opts$resolve.attributes,\n        truncate = _opts$resolve.truncate; // Build up attributes\n\n\n    var attributeArray = [['href', formattedHref]];\n\n    if (className) {\n      attributeArray.push(['class', className]);\n    }\n\n    if (target) {\n      attributeArray.push(['target', target]);\n    }\n\n    if (rel) {\n      attributeArray.push(['rel', rel]);\n    }\n\n    if (truncate && formatted.length > truncate) {\n      formatted = formatted.substring(0, truncate) + '…';\n    }\n\n    for (var attr in attributes) {\n      attributeArray.push([attr, attributes[attr]]);\n    } // Add the required tokens\n\n\n    result.push({\n      type: StartTag,\n      tagName: tagName,\n      attributes: attributeArray,\n      selfClosing: false\n    });\n    result.push({\n      type: Chars,\n      chars: formatted\n    });\n    result.push({\n      type: EndTag,\n      tagName: tagName\n    });\n  }\n\n  return result;\n}\n/**\n\tReturns a list of tokens skipped until the closing tag of tagName.\n\n\t* `tagName` is the closing tag which will prompt us to stop skipping\n\t* `tokens` is the array of tokens generated by HTML5Tokenizer which\n\t* `i` is the index immediately after the opening tag to skip\n\t* `skippedTokens` is an array which skipped tokens are being pushed into\n\n\tCaveats\n\n\t* Assumes that i is the first token after the given opening tagName\n\t* The closing tag will be skipped, but nothing after it\n\t* Will track whether there is a nested tag of the same type\n*/\n\n\nfunction skipTagTokens(tagName, tokens, i, skippedTokens) {\n  // number of tokens of this type on the [fictional] stack\n  var stackCount = 1;\n\n  while (i < tokens.length && stackCount > 0) {\n    var token = tokens[i];\n\n    if (token.type === StartTag && token.tagName.toUpperCase() === tagName) {\n      // Nested tag of the same type, \"add to stack\"\n      stackCount++;\n    } else if (token.type === EndTag && token.tagName.toUpperCase() === tagName) {\n      // Closing tag\n      stackCount--;\n    }\n\n    skippedTokens.push(token);\n    i++;\n  } // Note that if stackCount > 0 here, the HTML is probably invalid\n\n\n  return skippedTokens;\n}\n\nfunction escapeText(text) {\n  // Not required, HTML tokenizer ensures this occurs properly\n  return text;\n}\n\nfunction escapeAttr(attr) {\n  return attr.replace(/\"/g, '&quot;');\n}\n\nfunction attrsToStrings(attrs) {\n  var attrStrs = [];\n\n  for (var i = 0; i < attrs.length; i++) {\n    var name = attrs[i][0];\n    var value = attrs[i][1];\n    attrStrs.push(\"\".concat(name, \"=\\\"\").concat(escapeAttr(value), \"\\\"\"));\n  }\n\n  return attrStrs;\n}\n\nmodule.exports = linkifyHtml;\n});\n\nconst linkifyHtml = /*@__PURE__*/getDefaultExportFromCjs(linkifyHtml_1);\n\nfunction autoLink(text, options) {\n  const linkifiedText = linkifyHtml(text);\n  return (options === null || options === void 0 ? void 0 : options.calcite)\n    ? linkifiedText.replace(/<a /g, '<calcite-link ').replace(/<\\/a>/g, '</calcite-link>')\n    : linkifiedText;\n}\n/**\n * TODO: Remove this and use hub-common's `capitalize()` instead\n *\n * @param text Text to capitalize\n * @returns Capitalized text (text -> Text)\n */\nfunction capitalize(text) {\n  return text[0].toUpperCase() + text.slice(1);\n}\n\nexport { autoLink as a, capitalize as c };\n"],"names":["State","token","this","j","jr","jd","t","prototype","accepts","tt","input","tokenOrState","nextState","makeState","templateState","takeT","Object","assign","append","makeAcceptingState","makeT","startState","makeRegexT","regex","push","state","i","length","_nextState","test","makeMultiT","chars","makeBatchT","transitions","makeChainT","str","endState","defaultStateFactory","len","DOMAIN","LOCALHOST","TLD","NUM","PROTOCOL","MAILTO","WS","NL","OPENBRACE","OPENBRACKET","OPENANGLEBRACKET","OPENPAREN","CLOSEBRACE","CLOSEBRACKET","CLOSEANGLEBRACKET","CLOSEPAREN","AMPERSAND","APOSTROPHE","ASTERISK","AT","BACKSLASH","BACKTICK","CARET","COLON","COMMA","DOLLAR","DOT","EQUALS","EXCLAMATION","HYPHEN","PERCENT","PIPE","PLUS","POUND","QUERY","QUOTE","SEMI","SLASH","TILDE","UNDERSCORE","SYM","text","freeze","__proto__","tlds","split","LETTER","EMOJI","EMOJI_VARIATION","DIGIT","SPACE","init$2","customProtocols","arguments","undefined","S_START","S_NUM","S_DOMAIN","S_DOMAIN_HYPHEN","S_WS","DOMAIN_REGEX_TRANSITIONS","makeDomainState","concat","makeNearDomainState","S_PROTOCOL_FILE","S_PROTOCOL_FTP","S_PROTOCOL_HTTP","S_MAILTO","S_PROTOCOL_SECURE","S_FULL_PROTOCOL","S_FULL_MAILTO","S_CUSTOM_PROTOCOL","_i","_typeof","obj","Symbol","iterator","constructor","defaults","defaultProtocol","events","format","noop","formatHref","nl2br","tagName","target","rel","validate","truncate","className","attributes","ignoreTags","Options","opts","ignoredTags","toUpperCase","val","resolve","href","toHref","formatted","get","toString","formattedHref","getObject","check","key","operator","optionValue","option","options","MultiToken","createTokenClass","type","props","Token","value","tokens","v","tk","parent","child","extended","create","p","inherits","isLink","startIndex","s","endIndex","e","toObject","protocol","start","end","MailtoEmail","Email","Text","Nl","Url","hasProtocol","hasSlashSlash","result","join","multi","Base","init$1","S_PROTOCOL","S_PROTOCOL_SLASH","S_PROTOCOL_SLASH_SLASH","S_DOMAIN_DOT","S_TLD","S_TLD_COLON","S_TLD_PORT","S_URL","S_URL_NON_ACCEPTING","S_URL_OPENBRACE","S_URL_OPENBRACKET","S_URL_OPENANGLEBRACKET","S_URL_OPENPAREN","S_URL_OPENBRACE_Q","S_URL_OPENBRACKET_Q","S_URL_OPENANGLEBRACKET_Q","S_URL_OPENPAREN_Q","S_URL_OPENBRACE_SYMS","S_URL_OPENBRACKET_SYMS","S_URL_OPENANGLEBRACKET_SYMS","S_URL_OPENPAREN_SYMS","S_EMAIL_DOMAIN","S_EMAIL_DOMAIN_DOT","S_EMAIL","S_EMAIL_COLON","S_EMAIL_PORT","S_MAILTO_EMAIL","S_MAILTO_EMAIL_NON_ACCEPTING","S_LOCALPART","S_LOCALPART_AT","S_LOCALPART_DOT","S_NL","qsAccepting","qsNonAccepting","localpartAccepting","parserCreateMultiToken","Multi","startIdx","endIdx","substr","warn","console","INIT","scanner","parser","pluginQueue","initialized","init","utils","tokenize","cursor","multis","textTokens","secondState","multiLength","latestAccepting","sinceAccepts","subtokens","slice","run","iterable","index","first","charCodeAt","second","char","stringToArray","replace","c","toLowerCase","charCount","charCursor","tokenLength","charsSinceAccepts","run$1","linkify_module","find","filtered","registerCustomProtocol","Error","registerPlugin","name","plugin","reset","linkify","getAugmentedNamespace","linkifyHtml_1","createCommonjsModule","module","_interopNamespace","__esModule","n","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","enumerable","linkify__namespace","HTML5NamedCharRefs","nbsp","HEXCHARCODE","CHARCODE","NAMED","EntityParser","named","parse","entity","matches","match","WSP","ALPHA","CRLF","isSpace","isAlpha","EventedTokenizer","delegate","entityParser","mode","line","column","tagNameBuffer","states","beforeData","peek","isIgnoredEndTag","tag","consume","transitionTo","beginData","markTagStart","data","appendToData","consumeCharRef","finishData","tagOpen","beginStartTag","appendToTagName","markupDeclarationOpen","beginComment","substring","beginDoctype","doctype","beforeDoctypeName","appendToDoctypeName","doctypeName","endDoctype","afterDoctypeName","nextSixChars","isPublic","isSystem","afterDoctypePublicKeyword","doctypePublicIdentifierDoubleQuoted","appendToDoctypePublicIdentifier","doctypePublicIdentifierSingleQuoted","afterDoctypePublicIdentifier","betweenDoctypePublicAndSystemIdentifiers","doctypeSystemIdentifierDoubleQuoted","appendToDoctypeSystemIdentifier","doctypeSystemIdentifierSingleQuoted","afterDoctypeSystemIdentifier","commentStart","finishComment","appendToCommentData","commentStartDash","comment","commentEndDash","commentEnd","finishTag","endTagName","beforeAttributeName","reportSyntaxError","beginAttribute","appendToAttributeName","attributeName","beginAttributeValue","finishAttributeValue","afterAttributeName","beforeAttributeValue","appendToAttributeValue","attributeValueDoubleQuoted","attributeValueSingleQuoted","attributeValueUnquoted","afterAttributeValueQuoted","selfClosingStartTag","markTagAsSelfClosing","endTagOpen","beginEndTag","tokenizePart","tokenizeEOF","preprocessInput","handler","call","flushData","charAt","indexOf","count","Tokenizer","startLine","startColumn","tokenizer","_currentAttribute","current","currentAttribute","addLocInfo","loc","publicIdentifier","systemIdentifier","selfClosing","isQuoted","message","syntaxError","StartTag","EndTag","Chars","Comment","Doctype","linkifyChars","_opts$resolve","attributeArray","attr","skipTagTokens","skippedTokens","stackCount","attrsToStrings","attrs","attrStrs","exports","linkifiedTokens","linkified","linkifedChars","apply","isIgnored","preskipLen","_token","link","linkifyHtml","getDefaultExportFromCjs","autoLink","linkifiedText","calcite","capitalize"],"sourceRoot":""}