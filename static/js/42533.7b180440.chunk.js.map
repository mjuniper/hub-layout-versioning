{"version":3,"file":"static/js/42533.7b180440.chunk.js","mappings":"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","sources":["../node_modules/@esri/hub-components/dist/esm/key-fda76a48.js","../node_modules/@esri/hub-components/dist/esm/locale-430185f4.js","../node_modules/@esri/hub-components/dist/esm/observers-2b214c17.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.98\n */\nfunction isActivationKey(key) {\n  return key === \"Enter\" || key === \" \";\n}\nconst numberKeys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n\nexport { isActivationKey as i, numberKeys as n };\n","import { n as numberKeys } from './key-fda76a48.js';\nimport { c as createObserver } from './observers-2b214c17.js';\nimport { c as closestElementCrossShadowBoundary, d as containsCrossShadowBoundary } from './dom-c989b427.js';\n\n/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.98\n */\n// adopted from https://stackoverflow.com/a/66939244\nclass BigDecimal {\n  constructor(input) {\n    if (input instanceof BigDecimal) {\n      return input;\n    }\n    const [integers, decimals] = String(input).split(\".\").concat(\"\");\n    this.value =\n      BigInt(integers + decimals.padEnd(BigDecimal.DECIMALS, \"0\").slice(0, BigDecimal.DECIMALS)) +\n        BigInt(BigDecimal.ROUNDED && decimals[BigDecimal.DECIMALS] >= \"5\");\n    this.isNegative = input.charAt(0) === \"-\";\n  }\n  static _divRound(dividend, divisor) {\n    return BigDecimal.fromBigInt(dividend / divisor + (BigDecimal.ROUNDED ? ((dividend * BigInt(2)) / divisor) % BigInt(2) : BigInt(0)));\n  }\n  static fromBigInt(bigint) {\n    return Object.assign(Object.create(BigDecimal.prototype), { value: bigint });\n  }\n  toString() {\n    const s = this.value\n      .toString()\n      .replace(new RegExp(\"-\", \"g\"), \"\")\n      .padStart(BigDecimal.DECIMALS + 1, \"0\");\n    const i = s.slice(0, -BigDecimal.DECIMALS);\n    const d = s.slice(-BigDecimal.DECIMALS).replace(/\\.?0+$/, \"\");\n    const value = i.concat(d.length ? \".\" + d : \"\");\n    return `${this.isNegative ? \"-\" : \"\"}${value}`;\n  }\n  formatToParts(formatter) {\n    const s = this.value\n      .toString()\n      .replace(new RegExp(\"-\", \"g\"), \"\")\n      .padStart(BigDecimal.DECIMALS + 1, \"0\");\n    const i = s.slice(0, -BigDecimal.DECIMALS);\n    const d = s.slice(-BigDecimal.DECIMALS).replace(/\\.?0+$/, \"\");\n    const parts = formatter.formatToParts(BigInt(i));\n    this.isNegative && parts.unshift({ type: \"minusSign\", value: numberStringFormatter.minusSign });\n    if (d.length) {\n      parts.push({ type: \"decimal\", value: numberStringFormatter.decimal });\n      d.split(\"\").forEach((char) => parts.push({ type: \"fraction\", value: char }));\n    }\n    return parts;\n  }\n  format(formatter) {\n    const s = this.value\n      .toString()\n      .replace(new RegExp(\"-\", \"g\"), \"\")\n      .padStart(BigDecimal.DECIMALS + 1, \"0\");\n    const i = s.slice(0, -BigDecimal.DECIMALS);\n    const d = s.slice(-BigDecimal.DECIMALS).replace(/\\.?0+$/, \"\");\n    const iFormatted = `${this.isNegative ? numberStringFormatter.minusSign : \"\"}${formatter.format(BigInt(i))}`;\n    const dFormatted = d.length ? `${numberStringFormatter.decimal}${formatter.format(BigInt(d))}` : \"\";\n    return `${iFormatted}${dFormatted}`;\n  }\n  add(num) {\n    return BigDecimal.fromBigInt(this.value + new BigDecimal(num).value);\n  }\n  subtract(num) {\n    return BigDecimal.fromBigInt(this.value - new BigDecimal(num).value);\n  }\n  multiply(num) {\n    return BigDecimal._divRound(this.value * new BigDecimal(num).value, BigDecimal.SHIFT);\n  }\n  divide(num) {\n    return BigDecimal._divRound(this.value * BigDecimal.SHIFT, new BigDecimal(num).value);\n  }\n}\n// Configuration: constants\nBigDecimal.DECIMALS = 100; // number of decimals on all instances\nBigDecimal.ROUNDED = true; // numbers are truncated (false) or rounded (true)\nBigDecimal.SHIFT = BigInt(\"1\" + \"0\".repeat(BigDecimal.DECIMALS)); // derived constant\nfunction isValidNumber(numberString) {\n  return !(!numberString || isNaN(Number(numberString)));\n}\nfunction parseNumberString(numberString) {\n  if (!numberString || !stringContainsNumbers(numberString)) {\n    return \"\";\n  }\n  return sanitizeExponentialNumberString(numberString, (nonExpoNumString) => {\n    let containsDecimal = false;\n    const result = nonExpoNumString\n      .split(\"\")\n      .filter((value, i) => {\n      if (value.match(/\\./g) && !containsDecimal) {\n        containsDecimal = true;\n        return true;\n      }\n      if (value.match(/\\-/g) && i === 0) {\n        return true;\n      }\n      return numberKeys.includes(value);\n    })\n      .reduce((string, part) => string + part);\n    return isValidNumber(result) ? new BigDecimal(result).toString() : \"\";\n  });\n}\n// regex for number sanitization\nconst allLeadingZerosOptionallyNegative = /^([-0])0+(?=\\d)/;\nconst decimalOnlyAtEndOfString = /(?!^\\.)\\.$/;\nconst allHyphensExceptTheStart = /(?!^-)-/g;\nconst isNegativeDecimalOnlyZeros = /^-\\b0\\b\\.?0*$/;\nconst sanitizeNumberString = (numberString) => sanitizeExponentialNumberString(numberString, (nonExpoNumString) => {\n  const sanitizedValue = nonExpoNumString\n    .replace(allHyphensExceptTheStart, \"\")\n    .replace(decimalOnlyAtEndOfString, \"\")\n    .replace(allLeadingZerosOptionallyNegative, \"$1\");\n  return isValidNumber(sanitizedValue)\n    ? isNegativeDecimalOnlyZeros.test(sanitizedValue)\n      ? sanitizedValue\n      : new BigDecimal(sanitizedValue).toString()\n    : nonExpoNumString;\n});\nfunction sanitizeExponentialNumberString(numberString, func) {\n  if (!numberString) {\n    return numberString;\n  }\n  const firstE = numberString.toLowerCase().indexOf(\"e\") + 1;\n  if (!firstE) {\n    return func(numberString);\n  }\n  return numberString\n    .replace(/[eE]*$/g, \"\")\n    .substring(0, firstE)\n    .concat(numberString.slice(firstE).replace(/[eE]/g, \"\"))\n    .split(/[eE]/)\n    .map((section, i) => (i === 1 ? func(section.replace(/\\./g, \"\")) : func(section)))\n    .join(\"e\")\n    .replace(/^e/, \"1e\");\n}\nfunction stringContainsNumbers(string) {\n  return numberKeys.some((number) => string.includes(number));\n}\n\n/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.98\n */\nconst defaultLocale = \"en\";\nconst locales = [\n  \"ar\",\n  \"bg\",\n  \"bs\",\n  \"ca\",\n  \"cs\",\n  \"da\",\n  \"de\",\n  \"de-CH\",\n  \"el\",\n  defaultLocale,\n  \"en-AU\",\n  \"en-CA\",\n  \"en-GB\",\n  \"es\",\n  \"es-MX\",\n  \"et\",\n  \"fi\",\n  \"fr\",\n  \"fr-CH\",\n  \"he\",\n  \"hi\",\n  \"hr\",\n  \"hu\",\n  \"id\",\n  \"it\",\n  \"it-CH\",\n  \"ja\",\n  \"ko\",\n  \"lt\",\n  \"lv\",\n  \"mk\",\n  \"nb\",\n  \"nl\",\n  \"pl\",\n  \"pt\",\n  \"pt-PT\",\n  \"ro\",\n  \"ru\",\n  \"sk\",\n  \"sl\",\n  \"sr\",\n  \"sv\",\n  \"th\",\n  \"tr\",\n  \"uk\",\n  \"vi\",\n  \"zh-CN\",\n  \"zh-HK\",\n  \"zh-TW\"\n];\nconst numberingSystems = [\n  \"arab\",\n  \"arabext\",\n  \"bali\",\n  \"beng\",\n  \"deva\",\n  \"fullwide\",\n  \"gujr\",\n  \"guru\",\n  \"hanidec\",\n  \"khmr\",\n  \"knda\",\n  \"laoo\",\n  \"latn\",\n  \"limb\",\n  \"mlym\",\n  \"mong\",\n  \"mymr\",\n  \"orya\",\n  \"tamldec\",\n  \"telu\",\n  \"thai\",\n  \"tibt\"\n];\nconst isNumberingSystemSupported = (numberingSystem) => numberingSystems.includes(numberingSystem);\nconst browserNumberingSystem = new Intl.NumberFormat().resolvedOptions().numberingSystem;\nconst defaultNumberingSystem = browserNumberingSystem === \"arab\" || !isNumberingSystemSupported(browserNumberingSystem)\n  ? \"latn\"\n  : browserNumberingSystem;\nconst getSupportedNumberingSystem = (numberingSystem) => isNumberingSystemSupported(numberingSystem) ? numberingSystem : defaultNumberingSystem;\nfunction getSupportedLocale(locale) {\n  if (locales.indexOf(locale) > -1) {\n    return locale;\n  }\n  if (!locale) {\n    return defaultLocale;\n  }\n  locale = locale.toLowerCase();\n  // we support both 'nb' and 'no' (BCP 47) for Norwegian\n  if (locale === \"nb\") {\n    return \"no\";\n  }\n  if (locale.includes(\"-\")) {\n    locale = locale.replace(/(\\w+)-(\\w+)/, (_match, language, region) => `${language}-${region.toUpperCase()}`);\n    if (!locales.includes(locale)) {\n      locale = locale.split(\"-\")[0];\n    }\n  }\n  return locales.includes(locale) ? locale : defaultLocale;\n}\nconst connectedComponents = new Set();\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback` before any logic that depends on locale\n *\n * @param component\n */\nfunction connectLocalized(component) {\n  updateEffectiveLocale(component);\n  if (connectedComponents.size === 0) {\n    mutationObserver.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: [\"lang\"],\n      subtree: true\n    });\n  }\n  connectedComponents.add(component);\n}\n/**\n * This is only exported for components that implemented the now deprecated `locale` prop.\n *\n * Do not use this utils for new components.\n *\n * @param component\n */\nfunction updateEffectiveLocale(component) {\n  component.effectiveLocale = getLocale(component);\n}\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nfunction disconnectLocalized(component) {\n  connectedComponents.delete(component);\n  if (connectedComponents.size === 0) {\n    mutationObserver.disconnect();\n  }\n}\nconst mutationObserver = createObserver(\"mutation\", (records) => {\n  records.forEach((record) => {\n    const el = record.target;\n    connectedComponents.forEach((component) => {\n      const hasOverridingLocale = !!(component.locale && !component.el.lang);\n      const inUnrelatedSubtree = !containsCrossShadowBoundary(el, component.el);\n      if (hasOverridingLocale || inUnrelatedSubtree) {\n        return;\n      }\n      const closestLangEl = closestElementCrossShadowBoundary(component.el, \"[lang]\");\n      if (!closestLangEl) {\n        component.effectiveLocale = defaultLocale;\n        return;\n      }\n      const closestLang = closestLangEl.lang;\n      component.effectiveLocale =\n        // user set lang=\"\" means unknown language, so we use default\n        closestLangEl.hasAttribute(\"lang\") && closestLang === \"\" ? defaultLocale : closestLang;\n    });\n  });\n});\n/**\n * This util helps resolve a component's locale.\n * It will also fall back on the deprecated `locale` if a component implemented this previously.\n *\n * @param component\n */\nfunction getLocale(component) {\n  var _a;\n  return (component.el.lang ||\n    component.locale ||\n    ((_a = closestElementCrossShadowBoundary(component.el, \"[lang]\")) === null || _a === void 0 ? void 0 : _a.lang) ||\n    document.documentElement.lang ||\n    defaultLocale);\n}\n/**\n * This util formats and parses numbers for localization\n */\nclass NumberStringFormat {\n  constructor() {\n    this.delocalize = (numberString) => \n    // For performance, (de)localization is skipped if the formatter isn't initialized.\n    // In order to localize/delocalize, e.g. when lang/numberingSystem props are not default values,\n    // `numberFormatOptions` must be set in a component to create and cache the formatter.\n    this._numberFormatOptions\n      ? sanitizeExponentialNumberString(numberString, (nonExpoNumString) => nonExpoNumString\n        .trim()\n        .replace(new RegExp(`[${this._minusSign}]`, \"g\"), \"-\")\n        .replace(new RegExp(`[${this._group}]`, \"g\"), \"\")\n        .replace(new RegExp(`[${this._decimal}]`, \"g\"), \".\")\n        .replace(new RegExp(`[${this._digits.join(\"\")}]`, \"g\"), this._getDigitIndex))\n      : numberString;\n    this.localize = (numberString) => this._numberFormatOptions\n      ? sanitizeExponentialNumberString(numberString, (nonExpoNumString) => isValidNumber(nonExpoNumString.trim())\n        ? new BigDecimal(nonExpoNumString.trim())\n          .format(this._numberFormatter)\n          .replace(new RegExp(`[${this._actualGroup}]`, \"g\"), this._group)\n        : nonExpoNumString)\n      : numberString;\n  }\n  get group() {\n    return this._group;\n  }\n  get decimal() {\n    return this._decimal;\n  }\n  get minusSign() {\n    return this._minusSign;\n  }\n  get digits() {\n    return this._digits;\n  }\n  get numberFormatter() {\n    return this._numberFormatter;\n  }\n  get numberFormatOptions() {\n    return this._numberFormatOptions;\n  }\n  /**\n   * numberFormatOptions needs to be set before localize/delocalize is called to ensure the options are up to date\n   */\n  set numberFormatOptions(options) {\n    options.locale = getSupportedLocale(options === null || options === void 0 ? void 0 : options.locale);\n    options.numberingSystem = getSupportedNumberingSystem(options === null || options === void 0 ? void 0 : options.numberingSystem);\n    if (\n    // No need to create the formatter if `locale` and `numberingSystem`\n    // are the default values and `numberFormatOptions` has not been set\n    (!this._numberFormatOptions &&\n      options.locale === defaultLocale &&\n      options.numberingSystem === defaultNumberingSystem &&\n      // don't skip initialization if any options besides locale/numberingSystem are set\n      Object.keys(options).length === 2) ||\n      // cache formatter by only recreating when options change\n      JSON.stringify(this._numberFormatOptions) === JSON.stringify(options)) {\n      return;\n    }\n    this._numberFormatOptions = options;\n    this._numberFormatter = new Intl.NumberFormat(this._numberFormatOptions.locale, this._numberFormatOptions);\n    this._digits = [\n      ...new Intl.NumberFormat(this._numberFormatOptions.locale, {\n        useGrouping: false,\n        numberingSystem: this._numberFormatOptions.numberingSystem\n      }).format(9876543210)\n    ].reverse();\n    const index = new Map(this._digits.map((d, i) => [d, i]));\n    const parts = new Intl.NumberFormat(this._numberFormatOptions.locale).formatToParts(-12345678.9);\n    this._actualGroup = parts.find((d) => d.type === \"group\").value;\n    // change whitespace group characters that don't render correctly\n    this._group = this._actualGroup.trim().length === 0 ? \" \" : this._actualGroup;\n    this._decimal = parts.find((d) => d.type === \"decimal\").value;\n    this._minusSign = parts.find((d) => d.type === \"minusSign\").value;\n    this._getDigitIndex = (d) => index.get(d);\n  }\n}\nconst numberStringFormatter = new NumberStringFormat();\n\nexport { disconnectLocalized as a, getSupportedNumberingSystem as b, connectLocalized as c, defaultNumberingSystem as d, getSupportedLocale as g, isValidNumber as i, numberStringFormatter as n, parseNumberString as p, sanitizeNumberString as s, updateEffectiveLocale as u };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.98\n */\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nfunction createObserver(type, callback, options) {\n  const Observer = getObserver(type);\n  return new Observer(callback, options);\n}\nfunction getObserver(type) {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver {\n    constructor(callback) {\n      super(callback);\n      this.observedEntry = [];\n      this.callback = callback;\n    }\n    observe(target, options) {\n      this.observedEntry.push({ target, options });\n      return super.observe(target, options);\n    }\n    unobserve(target) {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n  return (function () {\n    return (type === \"intersection\"\n      ? window.IntersectionObserver\n      : type === \"mutation\"\n        ? ExtendedMutationObserver\n        : window.ResizeObserver);\n  })();\n}\n\nexport { createObserver as c };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}"],"names":["isActivationKey","key","numberKeys","BigDecimal","input","String","split","concat","integers","decimals","this","value","BigInt","padEnd","DECIMALS","slice","ROUNDED","isNegative","charAt","s","toString","replace","RegExp","padStart","i","d","length","formatter","parts","formatToParts","unshift","type","numberStringFormatter","minusSign","push","decimal","forEach","char","iFormatted","format","dFormatted","num","fromBigInt","_divRound","SHIFT","dividend","divisor","bigint","Object","assign","create","prototype","isValidNumber","numberString","isNaN","Number","parseNumberString","string","number","includes","sanitizeExponentialNumberString","nonExpoNumString","containsDecimal","result","filter","match","reduce","part","repeat","allLeadingZerosOptionallyNegative","decimalOnlyAtEndOfString","allHyphensExceptTheStart","isNegativeDecimalOnlyZeros","sanitizeNumberString","sanitizedValue","test","func","firstE","toLowerCase","indexOf","substring","map","section","join","defaultLocale","locales","numberingSystems","isNumberingSystemSupported","numberingSystem","browserNumberingSystem","Intl","NumberFormat","resolvedOptions","defaultNumberingSystem","getSupportedNumberingSystem","getSupportedLocale","locale","_match","language","region","toUpperCase","connectedComponents","Set","connectLocalized","component","updateEffectiveLocale","size","mutationObserver","observe","document","documentElement","attributes","attributeFilter","subtree","add","effectiveLocale","_a","el","lang","closestElementCrossShadowBoundary","getLocale","disconnectLocalized","delete","disconnect","createObserver","records","record","target","hasOverridingLocale","inUnrelatedSubtree","containsCrossShadowBoundary","closestLangEl","closestLang","hasAttribute","delocalize","_numberFormatOptions","trim","_minusSign","_group","_decimal","_digits","_getDigitIndex","localize","_numberFormatter","_actualGroup","options","keys","JSON","stringify","useGrouping","reverse","index","Map","find","get","callback","Observer","ExtendedMutationObserver","observedEntry","newObservedEntries","observed","window","MutationObserver","IntersectionObserver","ResizeObserver","getObserver","_superPropBase","object","property","hasOwnProperty","call","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply"],"sourceRoot":""}