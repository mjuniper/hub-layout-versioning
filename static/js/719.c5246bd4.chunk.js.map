{"version":3,"file":"static/js/719.c5246bd4.chunk.js","mappings":"iSAiCMA,G,sIAAyB,WAC7B,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,SAAW,KAChBD,KAAKE,OAAS,CAAC,EACfF,KAAKG,KAAO,KACZH,KAAKI,OAAS,GACdJ,KAAKK,WAAY,CACnB,CA4FI,OA5FH,yCACD,WACML,KAAKC,UACPD,KAAKM,YAAYN,KAAKC,SAE1B,GAAC,6BACD,SAAgBM,GACVA,GACFP,KAAKM,YAAYC,EAErB,GACA,mCAcA,SAAsBC,GAEpB,OADmBC,EAAAA,EAAAA,GAAeD,EAAS,yCAA0C,IACnEE,KAAI,SAAAC,GACpB,MAAO,CACLC,MAAOD,EAAME,QACbC,KAAMH,EAAMI,SACZC,OAAQL,EAAMM,SACdC,OAAQP,EAAMQ,SAElB,GACF,GACA,gCAUA,SAAmBX,GAEjB,OADmBC,EAAAA,EAAAA,GAAeD,EAAS,eAAgB,IACzCE,KAAI,SAAAC,GACpB,MAAO,CACLC,MAAOD,EAAMS,MACbN,KAAMH,EAAMG,KACZE,OAAQ,QACRE,OAAQP,EAAMU,KAElB,GACF,GAAC,uBACD,SAAUb,GACR,IAAIJ,EAQJ,GAPKJ,KAAKK,YACRD,EAASJ,KAAKsB,sBAAsBd,IAEjCJ,GAA4B,IAAlBA,EAAOmB,SACpBnB,EAASJ,KAAKwB,mBAAmBhB,IAG7BR,KAAKG,KAAM,CACf,MAAgCH,KAAKG,KAAKsB,MAAM,KAAI,eAA7CC,EAAS,KAAEC,EAAU,KAC5BvB,EAASA,EAAOD,MAAK,SAACyB,EAAGC,GAEvB,OADAC,QAAQC,IAAI,YAAa,CAACH,EAAEF,GAAYG,EAAEH,KACnCE,EAAEF,GAAaG,EAAEH,IAAc,EAAI,CAC5C,IACAI,QAAQC,IAAI,OAAQ,CAACL,EAAWC,EAAYvB,GAC9C,CACA,OAAOA,CACT,GAAC,kEACD,WAAkB4B,GAAK,6FAGDC,EAAAA,EAAAA,GAAaD,GAAM,OAAvChC,KAAKE,OAAS,EAAH,KACXF,KAAKI,OAASJ,KAAKkC,UAAUlC,KAAKE,QAClC4B,QAAQC,IAAI,qCAAsC,CAChD/B,KAAKE,OAAOiC,MACZnC,KAAKE,OAC2B,QAA/BkC,EAAKpC,KAAKE,OAAOmC,gBAA6B,IAAPD,OAAgB,EAASA,EAAGC,SAASC,OAAOC,SAASC,OAC5F,gDACJ,mDAXA,IAWA,oBACD,WACE,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAE,eAAgB,uBAAwBD,EAAAA,EAAAA,GAAE,OAAQ,OAAOA,EAAAA,EAAAA,GAAE,QAAS,MAAMA,EAAAA,EAAAA,GAAE,QAAS,MAAMA,EAAAA,EAAAA,GAAE,KAAM,KAAM,eAAeA,EAAAA,EAAAA,GAAE,KAAM,KAAM,gBAAgBA,EAAAA,EAAAA,GAAE,KAAM,KAAM,WAAWA,EAAAA,EAAAA,GAAE,KAAM,KAAM,WAAYzC,KAAKI,OAAOM,KAAI,SAAAC,GAAK,OAAI8B,EAAAA,EAAAA,GAAE,KAAM,CAAEE,IAAKhC,EAAMG,OAAQ2B,EAAAA,EAAAA,GAAE,KAAM,KAAM9B,EAAMG,OAAO2B,EAAAA,EAAAA,GAAE,KAAM,KAAM9B,EAAMC,QAAQ6B,EAAAA,EAAAA,GAAE,KAAM,KAAM9B,EAAMK,SAASyB,EAAAA,EAAAA,GAAE,KAAM,KAAM9B,EAAMO,QAAQ,KACnY,IAAC,qBACD,WAAwB,MAAO,CAC7B,SAAY,CAAC,mBACZ,KAAC,EApGyB,IAsG/BrB,EAA0B+C,MAxGW,sL","sources":["../.yalc/@esri/hub-components/dist/esm/arcgis-hub-dataset-field-list.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-0d95d9d4.js';\nimport { g as getWithDefault } from './get-with-default-6db049d8.js';\nimport { f as fetchContent } from './fetch-eff7ab83.js';\nimport './get-prop-d82e4fa6.js';\nimport './tslib.es6-e75776ba.js';\nimport './_enrichments-9747f1f3.js';\nimport './util-2150bd9e.js';\nimport './_internal-f8d6239a.js';\nimport './get-portal-api-url-2391fbac.js';\nimport './get-portal-url-423a76f5.js';\nimport './clean-url-be7c0879.js';\nimport './extent-0f42acfc.js';\nimport './request-c15cc2af.js';\nimport './helpers-a80c0291.js';\nimport './OperationError-85fd80c7.js';\nimport './get-f2cd18e7.js';\nimport './tslib.es6-3669ad41.js';\nimport './append-custom-params-fd9b7e72.js';\nimport './getPortalBaseFromOrgUrl-6a5781aa.js';\nimport './get-portal-06f7947b.js';\nimport './getService-49b539e3.js';\nimport './tslib.es6-b2e8cdb8.js';\nimport './slugs-150ad0db.js';\nimport './is-guid-8127621d.js';\nimport './request-be948455.js';\nimport './api-3826163b.js';\nimport './compose-cc2f466a.js';\nimport './get-structured-license-d1e63636.js';\nimport './get-item-thumbnail-url-7608a737.js';\nimport './query-15c2c6ed.js';\n\nconst arcgisHubDatasetFieldListCss = \":host{display:block;border:thin solid #DDD;margin:0.5rem 0}tr:nth-child(even){background-color:#f3f3f3}th,td{padding:0.8rem 1rem}tbody tr.active-row{font-weight:bold;color:#009879}\";\n\nconst ArcgisHubDatasetFieldList = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.entityId = null;\n    this.entity = {};\n    this.sort = null; // keep original order. TODO: doc `label desc`\n    this.fields = [];\n    this.useLayers = false;\n  }\n  componentWillLoad() {\n    if (this.entityId) {\n      this.fetchEntity(this.entityId);\n    }\n  }\n  entityIdUpdated(newValue) {\n    if (newValue) {\n      this.fetchEntity(newValue);\n    }\n  }\n  /**\n   *\n   [{\n      atprecis: 38\n      attalias: \"TBOX_W\"\n      attrdef: \"Tree box width\"\n      attrdefs: \"District of Columbia, Department of Transportation, Urban Forestry Administration\"\n      attrlabl: \"TBOX_W\"\n      attrtype: \"Double\"\n      attscale: 8\n      attwidth: 8\n   }]\n   * @param dataset\n   */\n  getMetadataAttributes(dataset) {\n    const fieldArray = getWithDefault(dataset, 'metadata.metadata.eainfo.detailed.attr', []);\n    return fieldArray.map(field => {\n      return {\n        label: field.attrdef,\n        name: field.attrlabl,\n        source: field.attrdefs,\n        format: field.attrtype,\n      };\n    });\n  }\n  /**\n   *\n   [{\n      alias: \"OBJECTID\"\n      domain: null\n      name: \"OBJECTID\"\n      type: \"esriFieldTypeOID\"\n      }]\n   * @param dataset\n   */\n  getLayerAttributes(dataset) {\n    const fieldArray = getWithDefault(dataset, 'layer.fields', []);\n    return fieldArray.map(field => {\n      return {\n        label: field.alias,\n        name: field.name,\n        source: \"layer\",\n        format: field.type,\n      };\n    });\n  }\n  getFields(dataset) {\n    let fields;\n    if (!this.useLayers) {\n      fields = this.getMetadataAttributes(dataset);\n    }\n    if (!fields || fields.length === 0) {\n      fields = this.getLayerAttributes(dataset);\n    }\n    // TODO move to observe change on sort\n    if (!!this.sort) {\n      const [sortField, _sortOrder] = this.sort.split(\" \");\n      fields = fields.sort((a, b) => {\n        console.log(\"compare: \", [a[sortField], b[sortField]]);\n        return a[sortField] < b[sortField] ? -1 : 1;\n      });\n      console.log(\"Sort\", [sortField, _sortOrder, fields]);\n    }\n    return fields;\n  }\n  async fetchEntity(newId) {\n    var _a;\n    // TODO: call fetchContent with additional metadata, or lazy load metadata?\n    this.entity = await fetchContent(newId);\n    this.fields = this.getFields(this.entity);\n    console.log('ArcGISHubMetadataList: fetchEntity', [\n      this.entity.title,\n      this.entity,\n      (_a = this.entity.metadata) === null || _a === void 0 ? void 0 : _a.metadata.eainfo.detailed.attr\n    ]);\n  }\n  render() {\n    return (h(Host, { \"data-element\": \"dataset-field-list\" }, h(\"slot\", null), h(\"table\", null, h(\"thead\", null, h(\"td\", null, \"Field Name\"), h(\"td\", null, \"Field Label\"), h(\"td\", null, \"Source\"), h(\"td\", null, \"Format\")), this.fields.map(field => h(\"tr\", { key: field.name }, h(\"td\", null, field.name), h(\"td\", null, field.label), h(\"td\", null, field.source), h(\"td\", null, field.format))))));\n  }\n  static get watchers() { return {\n    \"entityId\": [\"entityIdUpdated\"]\n  }; }\n};\nArcgisHubDatasetFieldList.style = arcgisHubDatasetFieldListCss;\n\nexport { ArcgisHubDatasetFieldList as arcgis_hub_dataset_field_list };\n"],"names":["ArcgisHubDatasetFieldList","hostRef","registerInstance","this","entityId","entity","sort","fields","useLayers","fetchEntity","newValue","dataset","getWithDefault","map","field","label","attrdef","name","attrlabl","source","attrdefs","format","attrtype","alias","type","getMetadataAttributes","length","getLayerAttributes","split","sortField","_sortOrder","a","b","console","log","newId","fetchContent","getFields","title","_a","metadata","eainfo","detailed","attr","h","Host","key","style"],"sourceRoot":""}